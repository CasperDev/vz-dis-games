# file opened: l:\vz-dis-games\DawnPatrol\DawnPatrol.asm
   1  0000              ;***********************************************************************************************
   2  0000              ;
   3  0000              ; 	Dawn Patrol
   4  0000              ;   Disect by Casper 18.02.2020
   5  0000              ;
   6  0000              ;	Verified with SjASMPlus Z80 Cross-Assembler v1.14.3 (https://github.com/z00m128/sjasmplus)
   7  0000              ;-----------------------------------------------------------------------------------------------
   8  0000              ;***********************************************************************************************
   9  0000
  10  0000              	MACRO	FNAME 	filename
  11  0000 ~            .beg		defb 	filename
  12  0000 ~            			block 	16-$+.beg
  13  0000 ~            			defb	0
  14  0000              	ENDM
  15  0000
  16  0000              ; Relative address 7CE8
  17  0000              ;***********************************************************************************************
  18  0000              ; File Header Block
  19  0000 20 20 00 00  	defb 	$20,$20,0,0                  		; [0000] Magic
  20  0004              	FNAME	"DAWNPATROL"						; File name
  20  0004 44 41 57 4E >.beg		defb 	"DAWNPATROL"
  20  0008 50 41 54 52 >
  20  000C 4F 4C       >
  20  000E 00 00 00... >			block 	16-$+.beg
  20  0014 00          >			defb	0
  21  0015 F1           	defb	$F1             					; File Type
  22  0016 00 7D            defw    MAIN        						; Destination/Basic Start address
  23  0018
  24  0018              ;***********************************************************************************************
  25  0018              ; SYSTEM CONSTANTS
  26  0018              IOLATCH         	equ     $6800       		; (WR) Hardware IO Latch, (RD) Keyboard all Keys
  27  0018              VDG_GFX_COLORS_0	equ		%00001000 			; GFX MODE, background Green
  28  0018              VDG_GFX_COLORS_1	equ		%00011000 			; GFX MODE, background Buff
  29  0018              VDG_MODE_CSS_MASK	equ		%00011000  			; mask to keep current Gfx settings
  30  0018              BIT_SPK_MINUS   	equ     00100000b   		; Speake Pin (-)
  31  0018              BIT_SPK_PLUS   		equ     00000001b   		; Speake Pin (+)
  32  0018              SPEAKER_PINS		equ		BIT_SPK_MINUS|BIT_SPK_PLUS
  33  0018              VRAM            	equ     $7000       		; Video RAM base address
  34  0018
  35  0018              ;************************************************************************
  36  0018              ; Keyboard Map              ADRES   |   D5  D4      D3  D2      D1  D0  |
  37  0018              ;-----------------------------------|-----------------------------------|
  38  0018              KEYS_ROW_0  		equ     $68fe   ;   R   Q       E           W   T   |
  39  0018              KEYS_ROW_1  		equ     $68fd   ;   F   A       D   CTRL    S   G   |
  40  0018              KEYS_ROW_2  		equ     $68fb   ;   V   Z       C   SHIFT   X   B   |
  41  0018              KEYS_ROW_4  		equ     $68ef   ;   M   SPACE   ,           .   N   |
  42  0018              KEYS_ROW_5  		equ     $68df   ;   7   0       8   -       9   6   |
  43  0018              KEYS_ROW_6  		equ     $68bf   ;   U   P       I   RETURN  O   Y   |
  44  0018              ;-----------------------------------|-----------------------------------|
  45  0018              KEYS_ROW_0F  		equ     $6ffe   ;   R   Q       E           W   T   |
  46  0018              KEYS_ROW_1F  		equ     $6ffd   ;   F   A       D   CTRL    S   G   |
  47  0018              KEYS_ROW_2F  		equ     $6ffb   ;   V   Z       C   SHIFT   X   B   |
  48  0018              KEYS_ROW_4F  		equ     $6fef   ;   M   SPACE   ,           .   N   |
  49  0018              KEYS_ROW_6F  		equ     $6fbf   ;   U   P       I   RETURN  O   Y   |
  50  0018
  51  0018              JOY_PORT_1			equ		$2a		; Joystick 1 Input IO Port address
  52  0018              JOY_PORT_2			equ		$25		; Joystick 1 Input IO Port address
  53  0018
  54  0018              ;***********************************************************************************************
  55  0018              ; GAME VARIABLES
  56  0018              ; ----------------- GLOBAL ---------------------------------------------------------------------
  57  0018              JOY_ENABLE			equ		$7800	; (b) 1-joystick enabled, 0-keys only
  58  0018
  59  0018              ; ----------------- GAMEPLAY -------------------------------------------------------------------
  60  0018              PRIS_CAMP_1			equ		$7803	; (b) Number of Prisoners Left in Camp 1
  61  0018              PRIS_CAMP_2			equ		$7807	; (b) Number of Prisoners Left in Camp 2
  62  0018              PRIS_CAMP_3			equ		$780b	; (b) Number of Prisoners Left in Camp 3
  63  0018              PRIS_CAMP_4			equ		$780f	; (b) Number of Prisoners Left in Camp 4
  64  0018              HELICOPTERS			equ		$7811	; (b) Numer of Helicopters
  65  0018              SCORE_DIGITS		equ		$7812	; (5b) Digits of Player current Score
  66  0018              MISSION_TIME		equ		$7817	; (3b/5b?) Digits of Mission current Time
  67  0018              PRIS_RESCUED		equ		$781d	; (b) Number of Prisoners Rescued so far
  68  0018
  69  0018              ;------------------ GAME ROUND -----------------------------------------------------------------
  70  0018              FUEL_DIGITS			equ		$781a	; (3b) Digits of Fuel Amount Left
  71  0018              GAME_ROUND_VARS		equ		$781e	; 240 bytes of variables cleared per Round
  72  0018
  73  0018
  74  0018              TTEST_ALL_RESCUED	equ		$7834	; (b) Timer for Check All Rescued
  75  0018
  76  0018
  77  0018
  78  0018              ;***********************************************************************************************
  79  0018              ; GAME CONSTANTS
  80  0018
  81  0018              BASE_SP				equ		$7cf0	; Base Stack Pointer
  82  0018              VSCRBUF				equ		$aa80	; Offscreen Buffer - 2816 bytes (44x64) - wide screen
  83  0018              VSTATBUF			equ		$b638	; 32+1 bytes buffer for Top Screen Status Bar
  84  0018
  85  0018              ; -- Input Actions Bits
  86  0018              UP					equ		0		; bit 0 in input bitmask variable
  87  0018              DOWN				equ		1		; bit 1 in input bitmask variable
  88  0018              LEFT				equ		2		; bit 2 in input bitmask variable
  89  0018              RIGHT				equ		3		; bit 3 in input bitmask variable
  90  0018              FIRE				equ		4		; bit 4 in input bitmask variable
  91  0018              ROTATE				equ		5		; bit 5 in input bitmask variable
  92  0018
  93  0018              ; -- sound predefined values (assumed Gfx Mode)
  94  0018              SPK_MINUS			equ 	%00101000	; Speaker(+) = 1, (-) = 0
  95  0018              SPK_PLUS			equ		%00001001	; Speaker(+) = 0, (-) = 1
  96  0018
  97  0018              ;***********************************************************************************************
  98  0018              ;
  99  0018              ;    M A I N   E N T R Y   P O I N T
 100  0018              ;
 101  0018              ;***********************************************************************************************
 102  0018              	org	$7d00
 103  7D00              MAIN
 104  7D00 C3 82 8F     	jp JMP_GAME_INIT	; jump to GAME_INIT	via JUMP_TABLE							;7d00	c3 82 8f
 105  7D03
 106  7D03
 107  7D03              JMP_GAMEPLAY:
 108  7D03 C3 06 7D     	jp GAME_PLAY		;7d03	c3 06 7d 	. . }
 109  7D06
 110  7D06
 111  7D06              ;***********************************************************************************************
 112  7D06              ;
 113  7D06              ;    G A M E P L A Y   S T A R T
 114  7D06              ;
 115  7D06              ;***********************************************************************************************
 116  7D06
 117  7D06              GAME_PLAY:
 118  7D06 F3           	di					; disable interrupts										;7d06	f3
 119  7D07 31 F0 7C     	ld sp,BASE_SP		; reset CPU Stack Pointer to base address					;7d07	31 f0 7c
 120  7D0A
 121  7D0A              ;***********************************************************************************************
 122  7D0A              ; Initialize Gamplay Variables to their startup values
 123  7D0A              GAME_VARS_INIT:
 124  7D0A              ; -- fill startup values from predefined table (16 bytes) - see TAB_DEF_VARS
 125  7D0A 21 C5 A9     	ld hl,TAB_DEF_VARS	; (src) table with default values for GamePlay				;7d0a	21 c5 a9
 126  7D0D 11 01 78     	ld de,07801h		;7d0d	11 01 78 	. . x
 127  7D10 01 10 00     	ld bc,00010h		;7d10	01 10 00 	. . .
 128  7D13 ED B0        	ldir		;7d13	ed b0 	. .
 129  7D15              ; -- set Player Score (and Mission Time) to 0 - 10 bytes total
 130  7D15 21 12 78     	ld hl,SCORE_DIGITS	; Digits of Player current Score							;7d15	21 12 78
 131  7D18 11 13 78     	ld de,SCORE_DIGITS+1; address + 1												;7d18	11 13 78
 132  7D1B 01 0A 00     	ld bc,10			; 10 bytes to clear											;7d1b	01 0a 00
 133  7D1E 36 00        	ld (hl),0			; set 0 value to fill 										;7d1e	36 00
 134  7D20 ED B0        	ldir				; fill 10 bytes with value 0								;7d20	ed b0
 135  7D22              ; -- set Mission Time to 4:00 AM
 136  7D22 21 17 78     	ld hl,MISSION_TIME	; Digits of Mission Time (hours)							;7d22	21 17 78
 137  7D25 36 04        	ld (hl),4			; set to 4 (minutes are set above)							;7d25	36 04
 138  7D27              ; -- set initial number of Helicopters for Player
 139  7D27 3E 04        	ld a,4				; 4 Helicopters to start with								;7d27	3e 04
 140  7D29 32 11 78     	ld (HELICOPTERS),a	; set startup value											;7d29	32 11 78
 141  7D2C              ; -- set initial number of Prisoners Rescued
 142  7D2C AF           	xor a				; 0 Prisoners to start with									;7d2c	af
 143  7D2D 32 1D 78     	ld (PRIS_RESCUED),a	; set startup value											;7d2d	32 1d 78
 144  7D30
 145  7D30
 146  7D30              GAME_ROUND:
 147  7D30              ; -- clear whole area of Round variables - 240 bytes
 148  7D30 21 1E 78     	ld hl,GAME_ROUND_VARS	; start addres of Variables to clear					;7d30	21 1e 78
 149  7D33 11 1F 78     	ld de,GAME_ROUND_VARS+1	; addres + 1											;7d33	11 1f 78
 150  7D36 01 EF 00     	ld bc,240-1			; 240 to clear 												;7d36	01 ef 00
 151  7D39 36 00        	ld (hl),0			; store default value 0 to fill area 						;7d39	36 00
 152  7D3B ED B0        	ldir				; fill variables with value 0								;7d3b	ed b0
 153  7D3D              ; -- set Fuel Amount Left to 999 (3 digits)
 154  7D3D 21 1A 78     	ld hl,FUEL_DIGITS	; address of Fuel digits values 							;7d3d	21 1a 78
 155  7D40 3E 09        	ld a,9				; initial value 											;7d40	3e 09
 156  7D42 77           	ld (hl),a			; store value 												;7d42	77
 157  7D43 23           	inc hl				; next digit												;7d43	23
 158  7D44 77           	ld (hl),a			; store value												;7d44	77
 159  7D45 23           	inc hl				; next digit												;7d45	23
 160  7D46 77           	ld (hl),a			; store digit												;7d46	77
 161  7D47
 162  7D47 21 2C 01     	ld hl,0012ch		;7d47	21 2c 01 	! , .
 163  7D4A 22 09 79     	ld (07909h),hl		;7d4a	22 09 79 	" . y
 164  7D4D 22 0B 79     	ld (0790bh),hl		;7d4d	22 0b 79 	" . y
 165  7D50 21 0F AA     	ld hl,laa0fh		;7d50	21 0f aa 	! . .
 166  7D53 11 1F 78     	ld de,0781fh		;7d53	11 1f 78 	. . x
 167  7D56 01 10 00     	ld bc,00010h		;7d56	01 10 00 	. . .
 168  7D59 ED B0        	ldir		;7d59	ed b0 	. .
 169  7D5B 21 73 AB     	ld hl,0ab73h		;7d5b	21 73 ab 	! s .
 170  7D5E 22 06 79     	ld (07906h),hl		;7d5e	22 06 79 	" . y
 171  7D61 3E F2        	ld a,0f2h		;7d61	3e f2 	> .
 172  7D63 32 08 79     	ld (07908h),a		;7d63	32 08 79 	2 . y
 173  7D66 3E 01        	ld a,001h		;7d66	3e 01 	> .
 174  7D68 32 F9 78     	ld (078f9h),a		;7d68	32 f9 78 	2 . x
 175  7D6B 32 BE 78     	ld (078beh),a		;7d6b	32 be 78 	2 . x
 176  7D6E 32 C4 78     	ld (078c4h),a		;7d6e	32 c4 78 	2 . x
 177  7D71 32 CA 78     	ld (078cah),a		;7d71	32 ca 78 	2 . x
 178  7D74 32 D0 78     	ld (078d0h),a		;7d74	32 d0 78 	2 . x
 179  7D77 32 D6 78     	ld (078d6h),a		;7d77	32 d6 78 	2 . x
 180  7D7A 32 87 78     	ld (07887h),a		;7d7a	32 87 78 	2 . x
 181  7D7D 32 8D 78     	ld (0788dh),a		;7d7d	32 8d 78 	2 . x
 182  7D80 3E 35        	ld a,035h		;7d80	3e 35 	> 5
 183  7D82 32 00 79     	ld (07900h),a		;7d82	32 00 79 	2 . y
 184  7D85 3E F0        	ld a,0f0h		;7d85	3e f0 	> .
 185  7D87 32 05 79     	ld (07905h),a		;7d87	32 05 79 	2 . y
 186  7D8A AF           	xor a			;7d8a	af 	.
 187  7D8B 32 01 79     	ld (07901h),a		;7d8b	32 01 79 	2 . y
 188  7D8E 21 D5 B3     	ld hl,0b3d5h		;7d8e	21 d5 b3 	! . .
 189  7D91 22 FE 78     	ld (078feh),hl		;7d91	22 fe 78 	" . x
 190  7D94 3E 98        	ld a,098h		;7d94	3e 98 	> .
 191  7D96 32 02 79     	ld (07902h),a		;7d96	32 02 79 	2 . y
 192  7D99 AF           	xor a			;7d99	af 	.
 193  7D9A 32 03 79     	ld (07903h),a		;7d9a	32 03 79 	2 . y
 194  7D9D 32 04 79     	ld (07904h),a		;7d9d	32 04 79 	2 . y
 195  7DA0 3E 96        	ld a,096h		;7da0	3e 96 	> .
 196  7DA2 32 F7 78     	ld (078f7h),a		;7da2	32 f7 78 	2 . x
 197  7DA5 32 F8 78     	ld (078f8h),a		;7da5	32 f8 78 	2 . x
 198  7DA8 CD DE 8D     	call CLEAR_SCRBUF_WIDE	; clear Screen and Buffer (wide mode)					;7da8	cd de 8d
 199  7DAB 21 D5 A9     	ld hl,la9d5h		;7dab	21 d5 a9 	! . .
 200  7DAE 11 9A 78     	ld de,0789ah		;7dae	11 9a 78 	. . x
 201  7DB1 01 1C 00     	ld bc,0001ch		;7db1	01 1c 00 	. . .
 202  7DB4 ED B0        	ldir		;7db4	ed b0 	. .
 203  7DB6 21 F1 A9     	ld hl,la9f1h		;7db6	21 f1 a9 	! . .
 204  7DB9 11 D7 78     	ld de,078d7h		;7db9	11 d7 78 	. . x
 205  7DBC 01 1E 00     	ld bc,0001eh		;7dbc	01 1e 00 	. . .
 206  7DBF ED B0        	ldir		;7dbf	ed b0 	. .
 207  7DC1
 208  7DC1
 209  7DC1              ;***********************************************************************************************
 210  7DC1              ;
 211  7DC1              ;    G A M E   M A I N   L O O P
 212  7DC1              ;
 213  7DC1              ;***********************************************************************************************
 214  7DC1
 215  7DC1              GAME_LOOP:
 216  7DC1 00           	nop					; dummy no operation code									;7dc1	00
 217  7DC2 CD 16 7E     	call sub_7e16h		;7dc2	cd 16 7e 	. . ~
 218  7DC5 CD 0C 7E     	call sub_7e0ch		;7dc5	cd 0c 7e 	. . ~
 219  7DC8 CD 2A 7E     	call sub_7e2ah		;7dc8	cd 2a 7e 	. * ~
 220  7DCB CD F7 7E     	call sub_7ef7h		;7dcb	cd f7 7e 	. . ~
 221  7DCE CD 4A 7F     	call sub_7f4ah		;7dce	cd 4a 7f 	. J 
 222  7DD1 CD FC 89     	call sub_89fch		;7dd1	cd fc 89 	. . .
 223  7DD4 CD 4E 89     	call sub_894eh		;7dd4	cd 4e 89 	. N .
 224  7DD7 CD C9 7F     	call sub_7fc9h		;7dd7	cd c9 7f 	. . 
 225  7DDA CD 1F 80     	call sub_801fh		;7dda	cd 1f 80 	. . .
 226  7DDD CD 4D 81     	call sub_814dh		;7ddd	cd 4d 81 	. M .
 227  7DE0 CD 23 82     	call sub_8223h		;7de0	cd 23 82 	. # .
 228  7DE3 CD 94 83     	call sub_8394h		;7de3	cd 94 83 	. . .
 229  7DE6 CD 32 83     	call sub_8332h		;7de6	cd 32 83 	. 2 .
 230  7DE9 CD FD 83     	call sub_83fdh		;7de9	cd fd 83 	. . .
 231  7DEC CD 22 84     	call sub_8422h		;7dec	cd 22 84 	. " .
 232  7DEF CD 56 84     	call sub_8456h		;7def	cd 56 84 	. V .
 233  7DF2 CD A9 85     	call sub_85a9h		;7df2	cd a9 85 	. . .
 234  7DF5 CD 80 85     	call sub_8580h		;7df5	cd 80 85 	. . .
 235  7DF8 CD 37 7F     	call TEST_ALL_RESCUED	; test if all 80 Prisoners are Rescued					;7df8	cd 37 7f
 236  7DFB              ; -- check if user press BREAK
 237  7DFB 3A DF 68     	ld a,(KEYS_ROW_5)		; select Keyboard row 2 								;7dfb	3a df 68
 238  7DFE CB 57        	bit 2,a					; check if key '-' is pressed							;7dfe	cb 57
 239  7E00 20 BF        	jr nz,GAME_LOOP			; no --------------- Continue Game Loop --------------- ;7e00	20 bf
 240  7E02              ; -- key '-' is pressed - can be BREAK if CTRL is also pressed
 241  7E02 3A FD 68     	ld a,(KEYS_ROW_1)		; select Keyboard row 1 								;7e02	3a fd 68
 242  7E05 CB 57        	bit 2,a					; check if key 'CTRL' is pressed?						;7e05	cb 57
 243  7E07 CA 7C 8F     	jp z,JMP_GAME_START_SCR	; yes - jump to Game Start Screen						;7e07	ca 7c 8f
 244  7E0A 18 B5        	jr GAME_LOOP			; no --------------- Continue Game Loop --------------- ;7e0a	18 b5
 245  7E0C
 246  7E0C
 247  7E0C              sub_7e0ch:
 248  7E0C CD 76 8F     	call sub_8f76h		;7e0c	cd 76 8f 	. v .
 249  7E0F C8           	ret z			;7e0f	c8 	.
 250  7E10 3E 0A        	ld a,00ah		;7e10	3e 0a 	> .
 251  7E12 32 35 7B     	ld (07b35h),a		;7e12	32 35 7b 	2 5 {
 252  7E15 C9           	ret			;7e15	c9 	.
 253  7E16              sub_7e16h:
 254  7E16 CD 73 8F     	call sub_8f73h		;7e16	cd 73 8f 	. s .
 255  7E19 C8           	ret z			;7e19	c8 	.
 256  7E1A              ; Game End -
 257  7E1A 3E 01        	ld a,1				; Game End Reason - Time is Up								;7e1a	3e 01
 258  7E1C              END_THIS_GAME:
 259  7E1C F5           	push af				; save a - Game End Reason									;7e1c	f5
 260  7E1D CD A3 85     	call DELAY_BC		; wait delay (bc has delay value)							;7e1d	cd a3 85
 261  7E20 CD A3 85     	call DELAY_BC		; wait delay (bc has 0 = 65536 from previous call)			;7e20	cd a3 85
 262  7E23 CD A3 85     	call DELAY_BC		; wait delay (bc has 0 = 65536 from previous call)			;7e23	cd a3 85
 263  7E26 F1           	pop af				; restore a - Game End Reason								;7e26	f1
 264  7E27 C3 7F 8F     	jp JMP_GAME_END		; End Game and show Reason --------------------------------	;7e27	c3 7f 8f
 265  7E2A
 266  7E2A
 267  7E2A
 268  7E2A              sub_7e2ah:
 269  7E2A 21 3C 78     	ld hl,0783ch		;7e2a	21 3c 78 	! < x
 270  7E2D 35           	dec (hl)			;7e2d	35 	5
 271  7E2E C0           	ret nz			;7e2e	c0 	.
 272  7E2F 36 64        	ld (hl),064h		;7e2f	36 64 	6 d
 273  7E31 DD 21 01 78  	ld ix,07801h		;7e31	dd 21 01 78 	. ! . x
 274  7E35 3E 04        	ld a,004h		;7e35	3e 04 	> .
 275  7E37              l7e37h:
 276  7E37 F5           	push af			;7e37	f5 	.
 277  7E38 CD 72 7E     	call sub_7e72h		;7e38	cd 72 7e 	. r ~
 278  7E3B 01 04 00     	ld bc,00004h		;7e3b	01 04 00 	. . .
 279  7E3E DD 09        	add ix,bc		;7e3e	dd 09 	. .
 280  7E40 F1           	pop af			;7e40	f1 	.
 281  7E41 3D           	dec a			;7e41	3d 	=
 282  7E42 20 F3        	jr nz,l7e37h		;7e42	20 f3 	  .
 283  7E44 C9           	ret			;7e44	c9 	.
 284  7E45              sub_7e45h:
 285  7E45 DD 7E 02     	ld a,(ix+002h)		;7e45	dd 7e 02 	. ~ .
 286  7E48 B7           	or a			;7e48	b7 	.
 287  7E49 28 23        	jr z,l7e6eh		;7e49	28 23 	( #
 288  7E4B 3A 35 78     	ld a,(07835h)		;7e4b	3a 35 78 	: 5 x
 289  7E4E B7           	or a			;7e4e	b7 	.
 290  7E4F C0           	ret nz			;7e4f	c0 	.
 291  7E50 3A 00 79     	ld a,(07900h)		;7e50	3a 00 79 	: . y
 292  7E53 FE 35        	cp 035h		;7e53	fe 35 	. 5
 293  7E55 20 17        	jr nz,l7e6eh		;7e55	20 17 	  .
 294  7E57 CD D2 83     	call sub_83d2h		;7e57	cd d2 83 	. . .
 295  7E5A DD 46 01     	ld b,(ix+001h)		;7e5a	dd 46 01 	. F .
 296  7E5D B8           	cp b			;7e5d	b8 	.
 297  7E5E 28 0C        	jr z,l7e6ch		;7e5e	28 0c 	( .
 298  7E60 04           	inc b			;7e60	04 	.
 299  7E61 B8           	cp b			;7e61	b8 	.
 300  7E62 28 08        	jr z,l7e6ch		;7e62	28 08 	( .
 301  7E64 04           	inc b			;7e64	04 	.
 302  7E65 B8           	cp b			;7e65	b8 	.
 303  7E66 28 04        	jr z,l7e6ch		;7e66	28 04 	( .
 304  7E68 04           	inc b			;7e68	04 	.
 305  7E69 B8           	cp b			;7e69	b8 	.
 306  7E6A 20 02        	jr nz,l7e6eh		;7e6a	20 02 	  .
 307  7E6C              l7e6ch:
 308  7E6C AF           	xor a			;7e6c	af 	.
 309  7E6D C9           	ret			;7e6d	c9 	.
 310  7E6E              l7e6eh:
 311  7E6E 3E 01        	ld a,001h		;7e6e	3e 01 	> .
 312  7E70 B7           	or a			;7e70	b7 	.
 313  7E71 C9           	ret			;7e71	c9 	.
 314  7E72              sub_7e72h:
 315  7E72 DD CB 03 46  	bit 0,(ix+003h)		;7e72	dd cb 03 46 	. . . F
 316  7E76 20 0F        	jr nz,l7e87h		;7e76	20 0f 	  .
 317  7E78 CD 45 7E     	call sub_7e45h		;7e78	cd 45 7e 	. E ~
 318  7E7B C0           	ret nz			;7e7b	c0 	.
 319  7E7C CD EE 7E     	call sub_7eeeh		;7e7c	cd ee 7e 	. . ~
 320  7E7F DD 77 00     	ld (ix+000h),a		;7e7f	dd 77 00 	. w .
 321  7E82 DD 36 03 01  	ld (ix+003h),001h		;7e82	dd 36 03 01 	. 6 . .
 322  7E86 C9           	ret			;7e86	c9 	.
 323  7E87              l7e87h:
 324  7E87 CD 45 7E     	call sub_7e45h		;7e87	cd 45 7e 	. E ~
 325  7E8A 28 20        	jr z,l7each		;7e8a	28 20 	(
 326  7E8C DD CB 03 4E  	bit 1,(ix+003h)		;7e8c	dd cb 03 4e 	. . . N
 327  7E90 20 05        	jr nz,l7e97h		;7e90	20 05 	  .
 328  7E92 DD CB 03 CE  	set 1,(ix+003h)		;7e92	dd cb 03 ce 	. . . .
 329  7E96 C9           	ret			;7e96	c9 	.
 330  7E97              l7e97h:
 331  7E97 CD EE 7E     	call sub_7eeeh		;7e97	cd ee 7e 	. . ~
 332  7E9A DD BE 00     	cp (ix+000h)		;7e9a	dd be 00 	. . .
 333  7E9D 28 08        	jr z,l7ea7h		;7e9d	28 08 	( .
 334  7E9F DD CB 03 8E  	res 1,(ix+003h)		;7e9f	dd cb 03 8e 	. . . .
 335  7EA3 DD 34 00     	inc (ix+000h)		;7ea3	dd 34 00 	. 4 .
 336  7EA6 C9           	ret			;7ea6	c9 	.
 337  7EA7              l7ea7h:
 338  7EA7 DD 36 03 00  	ld (ix+003h),000h		;7ea7	dd 36 03 00 	. 6 . .
 339  7EAB C9           	ret			;7eab	c9 	.
 340  7EAC              l7each:
 341  7EAC DD CB 03 4E  	bit 1,(ix+003h)		;7eac	dd cb 03 4e 	. . . N
 342  7EB0 28 05        	jr z,l7eb7h		;7eb0	28 05 	( .
 343  7EB2 DD CB 03 8E  	res 1,(ix+003h)		;7eb2	dd cb 03 8e 	. . . .
 344  7EB6 C9           	ret			;7eb6	c9 	.
 345  7EB7              l7eb7h:
 346  7EB7 CD D2 83     	call sub_83d2h		;7eb7	cd d2 83 	. . .
 347  7EBA 3C           	inc a			;7eba	3c 	<
 348  7EBB 3C           	inc a			;7ebb	3c 	<
 349  7EBC DD BE 00     	cp (ix+000h)		;7ebc	dd be 00 	. . .
 350  7EBF 28 08        	jr z,l7ec9h		;7ebf	28 08 	( .
 351  7EC1 DD CB 03 CE  	set 1,(ix+003h)		;7ec1	dd cb 03 ce 	. . . .
 352  7EC5 DD 35 00     	dec (ix+000h)		;7ec5	dd 35 00 	. 5 .
 353  7EC8 C9           	ret			;7ec8	c9 	.
 354  7EC9              l7ec9h:
 355  7EC9 DD 35 02     	dec (ix+002h)		;7ec9	dd 35 02 	. 5 .
 356  7ECC DD 36 03 00  	ld (ix+003h),000h		;7ecc	dd 36 03 00 	. 6 . .
 357  7ED0 3A 2F 78     	ld a,(0782fh)		;7ed0	3a 2f 78 	: / x
 358  7ED3 3C           	inc a			;7ed3	3c 	<
 359  7ED4 32 2F 78     	ld (0782fh),a		;7ed4	32 2f 78 	2 / x
 360  7ED7 21 30 78     	ld hl,07830h		;7ed7	21 30 78 	! 0 x
 361  7EDA DD 7E 01     	ld a,(ix+001h)		;7eda	dd 7e 01 	. ~ .
 362  7EDD FE 1C        	cp 01ch		;7edd	fe 1c 	. .
 363  7EDF 28 0B        	jr z,l7eech		;7edf	28 0b 	( .
 364  7EE1 23           	inc hl			;7ee1	23 	#
 365  7EE2 FE 53        	cp 053h		;7ee2	fe 53 	. S
 366  7EE4 28 06        	jr z,l7eech		;7ee4	28 06 	( .
 367  7EE6 23           	inc hl			;7ee6	23 	#
 368  7EE7 FE 8A        	cp 08ah		;7ee7	fe 8a 	. .
 369  7EE9 28 01        	jr z,l7eech		;7ee9	28 01 	( .
 370  7EEB 23           	inc hl			;7eeb	23 	#
 371  7EEC              l7eech:
 372  7EEC 34           	inc (hl)			;7eec	34 	4
 373  7EED C9           	ret			;7eed	c9 	.
 374  7EEE              sub_7eeeh:
 375  7EEE DD 7E 01     	ld a,(ix+001h)		;7eee	dd 7e 01 	. ~ .
 376  7EF1 06 08        	ld b,008h		;7ef1	06 08 	. .
 377  7EF3              l7ef3h:
 378  7EF3 3C           	inc a			;7ef3	3c 	<
 379  7EF4 10 FD        	djnz l7ef3h		;7ef4	10 fd 	. .
 380  7EF6 C9           	ret			;7ef6	c9 	.
 381  7EF7              sub_7ef7h:
 382  7EF7 3A 35 78     	ld a,(07835h)		;7ef7	3a 35 78 	: 5 x
 383  7EFA B7           	or a			;7efa	b7 	.
 384  7EFB C8           	ret z			;7efb	c8 	.
 385  7EFC 21 36 78     	ld hl,07836h		;7efc	21 36 78 	! 6 x
 386  7EFF 35           	dec (hl)			;7eff	35 	5
 387  7F00 C0           	ret nz			;7f00	c0 	.
 388  7F01 36 3C        	ld (hl),03ch		;7f01	36 3c 	6 <
 389  7F03 3A 00 79     	ld a,(07900h)		;7f03	3a 00 79 	: . y
 390  7F06 FE 35        	cp 035h		;7f06	fe 35 	. 5
 391  7F08 28 06        	jr z,l7f10h		;7f08	28 06 	( .
 392  7F0A CD 19 84     	call sub_8419h		;7f0a	cd 19 84 	. . .
 393  7F0D C3 C1 84     	jp l84c1h		;7f0d	c3 c1 84 	. . .
 394  7F10              l7f10h:
 395  7F10 CD D2 83     	call sub_83d2h		;7f10	cd d2 83 	. . .
 396  7F13 47           	ld b,a			;7f13	47 	G
 397  7F14 0E 06        	ld c,006h		;7f14	0e 06 	. .
 398  7F16 04           	inc b			;7f16	04 	.
 399  7F17 16 80        	ld d,080h		;7f17	16 80 	. .
 400  7F19 CD C3 89     	call sub_89c3h		;7f19	cd c3 89 	. . .
 401  7F1C 21 35 78     	ld hl,07835h		;7f1c	21 35 78 	! 5 x
 402  7F1F 35           	dec (hl)			;7f1f	35 	5
 403  7F20 C0           	ret nz			;7f20	c0 	.
 404  7F21 3A 2F 78     	ld a,(0782fh)		;7f21	3a 2f 78 	: / x
 405  7F24 21 1D 78     	ld hl,PRIS_RESCUED	; variable with number of Rescued Prisoners					;7f24	21 1d 78
 406  7F27 86           	add a,(hl)			;7f27	86 	.
 407  7F28 77           	ld (hl),a			;7f28	77 	w
 408  7F29              ; -- helicopter destroyed - update game variable
 409  7F29 3A 11 78     	ld a,(HELICOPTERS)	; number of Player's Helicopters							;7f29	3a 11 78
 410  7F2C 3D           	dec a				; substract 1 - check if all destroyed						;7f2c	3d
 411  7F2D 32 11 78     	ld (HELICOPTERS),a	; store new value											;7f2d	32 11 78
 412  7F30 C2 30 7D     	jp nz,GAME_ROUND		; no - ;7f30	c2 30 7d 	. 0 }
 413  7F33              ; -- all Helicopters Destroyed - end of Game
 414  7F33 AF           	xor a				; Game End Reason - All Helicopters Destroyed				;7f33	af
 415  7F34 C3 1C 7E     	jp END_THIS_GAME	; End this Game with above Reason -------------------------	;7f34	c3 1c 7e
 416  7F37
 417  7F37
 418  7F37
 419  7F37              TEST_ALL_RESCUED:
 420  7F37              ; -- decrement Timer to check if it's time to test number of Prisoners Rescuted so far
 421  7F37 3A 34 78     	ld a,(TTEST_ALL_RESCUED)	; timer value										;7f37	3a 34 78
 422  7F3A 3D           	dec a				; decrement timer - is it time to count Prisoners?			;7f3a	3d
 423  7F3B 32 34 78     	ld (TTEST_ALL_RESCUED),a	; store new timer value								;7f3b	32 34 78
 424  7F3E C0           	ret nz				; no ------------- End of Proc ----------------------------	;7f3e	c0
 425  7F3F              ; -- test if all Prisoners are Rescued
 426  7F3F 3A 1D 78     	ld a,(PRIS_RESCUED)	; Number of Prisoners Rescued so far						;7f3f	3a 1d 78
 427  7F42 FE 50        	cp 80				; 80 Prisoners to rescue - are all rescued					;7f42	fe 50
 428  7F44 C0           	ret nz				; no ------------- End of Proc ----------------------------	;7f44	c0
 429  7F45              ; -- all Prisoners Rescued - end of Game
 430  7F45 3E 02        	ld a,2				; Game End Reason - No Prisoners Left to Rescue				;7f45	3e 02
 431  7F47 C3 1C 7E     	jp END_THIS_GAME	; End this Game with above Reason -------------------------	;7f47	c3 1c 7e
 432  7F4A
 433  7F4A
 434  7F4A
 435  7F4A              sub_7f4ah:
 436  7F4A 3A 38 78     	ld a,(07838h)		;7f4a	3a 38 78 	: 8 x
 437  7F4D B7           	or a			;7f4d	b7 	.
 438  7F4E 28 05        	jr z,l7f55h		;7f4e	28 05 	( .
 439  7F50 3D           	dec a			;7f50	3d 	=
 440  7F51 32 38 78     	ld (07838h),a		;7f51	32 38 78 	2 8 x
 441  7F54 C9           	ret			;7f54	c9 	.
 442  7F55              l7f55h:
 443  7F55 CD F0 8E     	call sub_8ef0h		;7f55	cd f0 8e 	. . .
 444  7F58 CB 67        	bit 4,a		;7f58	cb 67 	. g
 445  7F5A 20 05        	jr nz,l7f61h		;7f5a	20 05 	  .
 446  7F5C AF           	xor a			;7f5c	af 	.
 447  7F5D 32 39 78     	ld (07839h),a		;7f5d	32 39 78 	2 9 x
 448  7F60 C9           	ret			;7f60	c9 	.
 449  7F61              l7f61h:
 450  7F61 3A 39 78     	ld a,(07839h)		;7f61	3a 39 78 	: 9 x
 451  7F64 B7           	or a			;7f64	b7 	.
 452  7F65 C0           	ret nz			;7f65	c0 	.
 453  7F66 DD 21 6A 78  	ld ix,0786ah		;7f66	dd 21 6a 78 	. ! j x
 454  7F6A 3E 06        	ld a,006h		;7f6a	3e 06 	> .
 455  7F6C              l7f6ch:
 456  7F6C F5           	push af			;7f6c	f5 	.
 457  7F6D CD 7D 7F     	call sub_7f7dh		;7f6d	cd 7d 7f 	. } 
 458  7F70 DD 23        	inc ix		;7f70	dd 23 	. #
 459  7F72 DD 23        	inc ix		;7f72	dd 23 	. #
 460  7F74 DD 23        	inc ix		;7f74	dd 23 	. #
 461  7F76 DD 23        	inc ix		;7f76	dd 23 	. #
 462  7F78 F1           	pop af			;7f78	f1 	.
 463  7F79 3D           	dec a			;7f79	3d 	=
 464  7F7A 20 F0        	jr nz,l7f6ch		;7f7a	20 f0 	  .
 465  7F7C C9           	ret			;7f7c	c9 	.
 466  7F7D              sub_7f7dh:
 467  7F7D DD CB 03 5E  	bit 3,(ix+003h)		;7f7d	dd cb 03 5e 	. . . ^
 468  7F81 C0           	ret nz			;7f81	c0 	.
 469  7F82 E1           	pop hl			;7f82	e1 	.
 470  7F83 E1           	pop hl			;7f83	e1 	.
 471  7F84 3A 00 79     	ld a,(07900h)		;7f84	3a 00 79 	: . y
 472  7F87 FE 32        	cp 032h		;7f87	fe 32 	. 2
 473  7F89 F0           	ret p			;7f89	f0 	.
 474  7F8A 3E 14        	ld a,014h		;7f8a	3e 14 	> .
 475  7F8C 32 38 78     	ld (07838h),a		;7f8c	32 38 78 	2 8 x
 476  7F8F 32 39 78     	ld (07839h),a		;7f8f	32 39 78 	2 9 x
 477  7F92 CD D2 83     	call sub_83d2h		;7f92	cd d2 83 	. . .
 478  7F95 3D           	dec a			;7f95	3d 	=
 479  7F96 DD 77 00     	ld (ix+000h),a		;7f96	dd 77 00 	. w .
 480  7F99 3A 00 79     	ld a,(07900h)		;7f99	3a 00 79 	: . y
 481  7F9C CD 93 80     	call sub_8093h		;7f9c	cd 93 80 	. . .
 482  7F9F DD 36 02 3C  	ld (ix+002h),03ch		;7f9f	dd 36 02 3c 	. 6 . <
 483  7FA3 3A 02 79     	ld a,(07902h)		;7fa3	3a 02 79 	: . y
 484  7FA6 E6 03        	and 003h		;7fa6	e6 03 	. .
 485  7FA8 F6 08        	or 008h		;7fa8	f6 08 	. .
 486  7FAA DD 77 03     	ld (ix+003h),a		;7faa	dd 77 03 	. w .
 487  7FAD E6 03        	and 003h		;7fad	e6 03 	. .
 488  7FAF C8           	ret z			;7faf	c8 	.
 489  7FB0 FE 01        	cp 001h		;7fb0	fe 01 	. .
 490  7FB2 28 0C        	jr z,l7fc0h		;7fb2	28 0c 	( .
 491  7FB4 DD 7E 00     	ld a,(ix+000h)		;7fb4	dd 7e 00 	. ~ .
 492  7FB7 C6 03        	add a,003h		;7fb7	c6 03 	. .
 493  7FB9 DD 77 00     	ld (ix+000h),a		;7fb9	dd 77 00 	. w .
 494  7FBC DD 35 01     	dec (ix+001h)		;7fbc	dd 35 01 	. 5 .
 495  7FBF C9           	ret			;7fbf	c9 	.
 496  7FC0              l7fc0h:
 497  7FC0 DD 7E 00     	ld a,(ix+000h)		;7fc0	dd 7e 00 	. ~ .
 498  7FC3 C6 07        	add a,007h		;7fc3	c6 07 	. .
 499  7FC5 DD 77 00     	ld (ix+000h),a		;7fc5	dd 77 00 	. w .
 500  7FC8 C9           	ret			;7fc8	c9 	.
 501  7FC9              sub_7fc9h:
 502  7FC9 21 3A 78     	ld hl,0783ah		;7fc9	21 3a 78 	! : x
 503  7FCC 35           	dec (hl)			;7fcc	35 	5
 504  7FCD C0           	ret nz			;7fcd	c0 	.
 505  7FCE 36 19        	ld (hl),019h		;7fce	36 19 	6 .
 506  7FD0 DD 21 8E 78  	ld ix,0788eh		;7fd0	dd 21 8e 78 	. ! . x
 507  7FD4 CD DF 7F     	call sub_7fdfh		;7fd4	cd df 7f 	. . 
 508  7FD7 DD 21 94 78  	ld ix,07894h		;7fd7	dd 21 94 78 	. ! . x
 509  7FDB CD DF 7F     	call sub_7fdfh		;7fdb	cd df 7f 	. . 
 510  7FDE C9           	ret			;7fde	c9 	.
 511  7FDF              sub_7fdfh:
 512  7FDF DD CB 05 46  	bit 0,(ix+005h)		;7fdf	dd cb 05 46 	. . . F
 513  7FE3 C8           	ret z			;7fe3	c8 	.
 514  7FE4 DD 35 02     	dec (ix+002h)		;7fe4	dd 35 02 	. 5 .
 515  7FE7 20 05        	jr nz,l7feeh		;7fe7	20 05 	  .
 516  7FE9 DD 36 05 00  	ld (ix+005h),000h		;7fe9	dd 36 05 00 	. 6 . .
 517  7FED C9           	ret			;7fed	c9 	.
 518  7FEE              l7feeh:
 519  7FEE DD CB 04 46  	bit 0,(ix+004h)		;7fee	dd cb 04 46 	. . . F
 520  7FF2 28 13        	jr z,l8007h		;7ff2	28 13 	( .
 521  7FF4 DD CB 03 46  	bit 0,(ix+003h)		;7ff4	dd cb 03 46 	. . . F
 522  7FF8 20 05        	jr nz,l7fffh		;7ff8	20 05 	  .
 523  7FFA DD CB 03 C6  	set 0,(ix+003h)		;7ffa	dd cb 03 c6 	. . . .
 524  7FFE C9           	ret			;7ffe	c9 	.
 525  7FFF              l7fffh:
 526  7FFF DD CB 03 86  	res 0,(ix+003h)		;7fff	dd cb 03 86 	. . . .
 527  8003 DD 34 00     	inc (ix+000h)		;8003	dd 34 00 	. 4 .
 528  8006 C9           	ret			;8006	c9 	.
 529  8007              l8007h:
 530  8007 DD CB 03 46  	bit 0,(ix+003h)		;8007	dd cb 03 46 	. . . F
 531  800B 28 05        	jr z,l8012h		;800b	28 05 	( .
 532  800D DD CB 03 86  	res 0,(ix+003h)		;800d	dd cb 03 86 	. . . .
 533  8011 C9           	ret			;8011	c9 	.
 534  8012              l8012h:
 535  8012 DD 7E 00     	ld a,(ix+000h)		;8012	dd 7e 00 	. ~ .
 536  8015 B7           	or a			;8015	b7 	.
 537  8016 C8           	ret z			;8016	c8 	.
 538  8017 DD 35 00     	dec (ix+000h)		;8017	dd 35 00 	. 5 .
 539  801A DD CB 03 C6  	set 0,(ix+003h)		;801a	dd cb 03 c6 	. . . .
 540  801E C9           	ret			;801e	c9 	.
 541  801F              sub_801fh:
 542  801F 21 3D 78     	ld hl,0783dh		;801f	21 3d 78 	! = x
 543  8022 35           	dec (hl)			;8022	35 	5
 544  8023 C0           	ret nz			;8023	c0 	.
 545  8024 36 46        	ld (hl),046h		;8024	36 46 	6 F
 546  8026 FD 21 8E 78  	ld iy,0788eh		;8026	fd 21 8e 78 	. ! . x
 547  802A DD 21 82 78  	ld ix,07882h		;802a	dd 21 82 78 	. ! . x
 548  802E CD 3C 80     	call sub_803ch		;802e	cd 3c 80 	. < .
 549  8031 01 06 00     	ld bc,00006h		;8031	01 06 00 	. . .
 550  8034 DD 09        	add ix,bc		;8034	dd 09 	. .
 551  8036 FD 09        	add iy,bc		;8036	fd 09 	. .
 552  8038 CD 3C 80     	call sub_803ch		;8038	cd 3c 80 	. < .
 553  803B C9           	ret			;803b	c9 	.
 554  803C              sub_803ch:
 555  803C DD 7E 05     	ld a,(ix+005h)		;803c	dd 7e 05 	. ~ .
 556  803F CB 7F        	bit 7,a		;803f	cb 7f 	. 
 557  8041 20 58        	jr nz,l809bh		;8041	20 58 	  X
 558  8043 FD CB 05 46  	bit 0,(iy+005h)		;8043	fd cb 05 46 	. . . F
 559  8047 C0           	ret nz			;8047	c0 	.
 560  8048 3D           	dec a			;8048	3d 	=
 561  8049 28 04        	jr z,l804fh		;8049	28 04 	( .
 562  804B DD 77 05     	ld (ix+005h),a		;804b	dd 77 05 	. w .
 563  804E C9           	ret			;804e	c9 	.
 564  804F              l804fh:
 565  804F 3A 00 79     	ld a,(07900h)		;804f	3a 00 79 	: . y
 566  8052 FE 2D        	cp 02dh		;8052	fe 2d 	. -
 567  8054 F0           	ret p			;8054	f0 	.
 568  8055 CD D2 83     	call sub_83d2h		;8055	cd d2 83 	. . .
 569  8058 CB 7F        	bit 7,a		;8058	cb 7f 	. 
 570  805A C0           	ret nz			;805a	c0 	.
 571  805B FE 6E        	cp 06eh		;805b	fe 6e 	. n
 572  805D F0           	ret p			;805d	f0 	.
 573  805E 47           	ld b,a			;805e	47 	G
 574  805F ED 5F        	ld a,r		;805f	ed 5f 	. _
 575  8061 E6 01        	and 001h		;8061	e6 01 	. .
 576  8063 4F           	ld c,a			;8063	4f 	O
 577  8064 78           	ld a,b			;8064	78 	x
 578  8065 D6 10        	sub 010h		;8065	d6 10 	. .
 579  8067 CB 41        	bit 0,c		;8067	cb 41 	. A
 580  8069 20 02        	jr nz,l806dh		;8069	20 02 	  .
 581  806B C6 20        	add a,020h		;806b	c6 20 	.
 582  806D              l806dh:
 583  806D DD 77 00     	ld (ix+000h),a		;806d	dd 77 00 	. w .
 584  8070 79           	ld a,c			;8070	79 	y
 585  8071 0F           	rrca			;8071	0f 	.
 586  8072 DD 77 03     	ld (ix+003h),a		;8072	dd 77 03 	. w .
 587  8075 DD 36 04 01  	ld (ix+004h),001h		;8075	dd 36 04 01 	. 6 . .
 588  8079 DD 36 02 34  	ld (ix+002h),034h		;8079	dd 36 02 34 	. 6 . 4
 589  807D ED 5F        	ld a,r		;807d	ed 5f 	. _
 590  807F E6 3F        	and 03fh		;807f	e6 3f 	. ?
 591  8081 F6 8F        	or 08fh		;8081	f6 8f 	. .
 592  8083 DD 77 05     	ld (ix+005h),a		;8083	dd 77 05 	. w .
 593  8086 CD 8A 80     	call sub_808ah		;8086	cd 8a 80 	. . .
 594  8089 C9           	ret			;8089	c9 	.
 595  808A              sub_808ah:
 596  808A 3A 00 79     	ld a,(07900h)		;808a	3a 00 79 	: . y
 597  808D D6 05        	sub 005h		;808d	d6 05 	. .
 598  808F F2 93 80     	jp p,sub_8093h		;808f	f2 93 80 	. . .
 599  8092 AF           	xor a			;8092	af 	.
 600  8093              sub_8093h:
 601  8093 6F           	ld l,a			;8093	6f 	o
 602  8094 3E 35        	ld a,035h		;8094	3e 35 	> 5
 603  8096 95           	sub l			;8096	95 	.
 604  8097 DD 77 01     	ld (ix+001h),a		;8097	dd 77 01 	. w .
 605  809A C9           	ret			;809a	c9 	.
 606  809B              l809bh:
 607  809B CD 8A 80     	call sub_808ah		;809b	cd 8a 80 	. . .
 608  809E FE 0E        	cp 00eh		;809e	fe 0e 	. .
 609  80A0 F2 A7 80     	jp p,l80a7h		;80a0	f2 a7 80 	. . .
 610  80A3 DD 36 01 0E  	ld (ix+001h),00eh		;80a3	dd 36 01 0e 	. 6 . .
 611  80A7              l80a7h:
 612  80A7 DD 7E 02     	ld a,(ix+002h)		;80a7	dd 7e 02 	. ~ .
 613  80AA              l80aah:
 614  80AA 3D           	dec a			;80aa	3d 	=
 615  80AB DD 77 02     	ld (ix+002h),a		;80ab	dd 77 02 	. w .
 616  80AE 20 05        	jr nz,l80b5h		;80ae	20 05 	  .
 617  80B0 DD CB 05 BE  	res 7,(ix+005h)		;80b0	dd cb 05 be 	. . . .
 618  80B4 C9           	ret			;80b4	c9 	.
 619  80B5              l80b5h:
 620  80B5 FE 20        	cp 020h		;80b5	fe 20 	.
 621  80B7 FA D7 80     	jp m,l80d7h		;80b7	fa d7 80 	. . .
 622  80BA FE 30        	cp 030h		;80ba	fe 30 	. 0
 623  80BC 28 0E        	jr z,l80cch		;80bc	28 0e 	( .
 624  80BE FE 2C        	cp 02ch		;80be	fe 2c 	. ,
 625  80C0 28 0A        	jr z,l80cch		;80c0	28 0a 	( .
 626  80C2 FE 28        	cp 028h		;80c2	fe 28 	. (
 627  80C4 28 06        	jr z,l80cch		;80c4	28 06 	( .
 628  80C6 FE 24        	cp 024h		;80c6	fe 24 	. $
 629  80C8 28 02        	jr z,l80cch		;80c8	28 02 	( .
 630  80CA 18 03        	jr l80cfh		;80ca	18 03 	. .
 631  80CC              l80cch:
 632  80CC DD 34 04     	inc (ix+004h)		;80cc	dd 34 04 	. 4 .
 633  80CF              l80cfh:
 634  80CF FE 20        	cp 020h		;80cf	fe 20 	.
 635  80D1 C0           	ret nz			;80d1	c0 	.
 636  80D2 DD 36 04 00  	ld (ix+004h),000h		;80d2	dd 36 04 00 	. 6 . .
 637  80D6 C9           	ret			;80d6	c9 	.
 638  80D7              l80d7h:
 639  80D7 FE 14        	cp 014h		;80d7	fe 14 	. .
 640  80D9 F2 F1 80     	jp p,l80f1h		;80d9	f2 f1 80 	. . .
 641  80DC FE 10        	cp 010h		;80dc	fe 10 	. .
 642  80DE 28 0D        	jr z,l80edh		;80de	28 0d 	( .
 643  80E0 FE 0C        	cp 00ch		;80e0	fe 0c 	. .
 644  80E2 28 09        	jr z,l80edh		;80e2	28 09 	( .
 645  80E4 FE 08        	cp 008h		;80e4	fe 08 	. .
 646  80E6 28 05        	jr z,l80edh		;80e6	28 05 	( .
 647  80E8 FE 04        	cp 004h		;80e8	fe 04 	. .
 648  80EA 28 01        	jr z,l80edh		;80ea	28 01 	( .
 649  80EC C9           	ret			;80ec	c9 	.
 650  80ED              l80edh:
 651  80ED DD 35 04     	dec (ix+004h)		;80ed	dd 35 04 	. 5 .
 652  80F0 C9           	ret			;80f0	c9 	.
 653  80F1              l80f1h:
 654  80F1 20 2E        	jr nz,l8121h		;80f1	20 2e 	  .
 655  80F3 DD 36 04 05  	ld (ix+004h),005h		;80f3	dd 36 04 05 	. 6 . .
 656  80F7 DD 7E 00     	ld a,(ix+000h)		;80f7	dd 7e 00 	. ~ .
 657  80FA 3C           	inc a			;80fa	3c 	<
 658  80FB FD 77 00     	ld (iy+000h),a		;80fb	fd 77 00 	. w .
 659  80FE DD 7E 01     	ld a,(ix+001h)		;80fe	dd 7e 01 	. ~ .
 660  8101 06 08        	ld b,008h		;8101	06 08 	. .
 661  8103              l8103h:
 662  8103 3D           	dec a			;8103	3d 	=
 663  8104 28 02        	jr z,l8108h		;8104	28 02 	( .
 664  8106 10 FB        	djnz l8103h		;8106	10 fb 	. .
 665  8108              l8108h:
 666  8108 FD 77 01     	ld (iy+001h),a		;8108	fd 77 01 	. w .
 667  810B FD 36 02 64  	ld (iy+002h),064h		;810b	fd 36 02 64 	. 6 . d
 668  810F DD 7E 03     	ld a,(ix+003h)		;810f	dd 7e 03 	. ~ .
 669  8112 07           	rlca			;8112	07 	.
 670  8113 E6 01        	and 001h		;8113	e6 01 	. .
 671  8115 FD 77 04     	ld (iy+004h),a		;8115	fd 77 04 	. w .
 672  8118 FD 36 03 00  	ld (iy+003h),000h		;8118	fd 36 03 00 	. 6 . .
 673  811C FD 36 05 01  	ld (iy+005h),001h		;811c	fd 36 05 01 	. 6 . .
 674  8120 C9           	ret			;8120	c9 	.
 675  8121              l8121h:
 676  8121 DD CB 03 7E  	bit 7,(ix+003h)		;8121	dd cb 03 7e 	. . . ~
 677  8125 28 13        	jr z,l813ah		;8125	28 13 	( .
 678  8127 DD CB 03 76  	bit 6,(ix+003h)		;8127	dd cb 03 76 	. . . v
 679  812B 20 05        	jr nz,l8132h		;812b	20 05 	  .
 680  812D DD CB 03 F6  	set 6,(ix+003h)		;812d	dd cb 03 f6 	. . . .
 681  8131 C9           	ret			;8131	c9 	.
 682  8132              l8132h:
 683  8132 DD CB 03 B6  	res 6,(ix+003h)		;8132	dd cb 03 b6 	. . . .
 684  8136 DD 34 00     	inc (ix+000h)		;8136	dd 34 00 	. 4 .
 685  8139 C9           	ret			;8139	c9 	.
 686  813A              l813ah:
 687  813A DD CB 03 76  	bit 6,(ix+003h)		;813a	dd cb 03 76 	. . . v
 688  813E 28 05        	jr z,l8145h		;813e	28 05 	( .
 689  8140 DD CB 03 B6  	res 6,(ix+003h)		;8140	dd cb 03 b6 	. . . .
 690  8144 C9           	ret			;8144	c9 	.
 691  8145              l8145h:
 692  8145 DD CB 03 F6  	set 6,(ix+003h)		;8145	dd cb 03 f6 	. . . .
 693  8149 DD 35 00     	dec (ix+000h)		;8149	dd 35 00 	. 5 .
 694  814C C9           	ret			;814c	c9 	.
 695  814D              sub_814dh:
 696  814D 21 3B 78     	ld hl,0783bh		;814d	21 3b 78 	! ; x
 697  8150 35           	dec (hl)			;8150	35 	5
 698  8151 C0           	ret nz			;8151	c0 	.
 699  8152 36 0F        	ld (hl),00fh		;8152	36 0f 	6 .
 700  8154 DD 21 B9 78  	ld ix,078b9h		;8154	dd 21 b9 78 	. ! . x
 701  8158 FD 21 D7 78  	ld iy,078d7h		;8158	fd 21 d7 78 	. ! . x
 702  815C 3E 05        	ld a,005h		;815c	3e 05 	> .
 703  815E              l815eh:
 704  815E F5           	push af			;815e	f5 	.
 705  815F CD 6E 81     	call sub_816eh		;815f	cd 6e 81 	. n .
 706  8162 01 06 00     	ld bc,00006h		;8162	01 06 00 	. . .
 707  8165 DD 09        	add ix,bc		;8165	dd 09 	. .
 708  8167 FD 09        	add iy,bc		;8167	fd 09 	. .
 709  8169 F1           	pop af			;8169	f1 	.
 710  816A 3D           	dec a			;816a	3d 	=
 711  816B 20 F1        	jr nz,l815eh		;816b	20 f1 	  .
 712  816D C9           	ret			;816d	c9 	.
 713  816E              sub_816eh:
 714  816E DD 7E 05     	ld a,(ix+005h)		;816e	dd 7e 05 	. ~ .
 715  8171 CB 7F        	bit 7,a		;8171	cb 7f 	. 
 716  8173 20 48        	jr nz,l81bdh		;8173	20 48 	  H
 717  8175 FD 7E 05     	ld a,(iy+005h)		;8175	fd 7e 05 	. ~ .
 718  8178 B7           	or a			;8178	b7 	.
 719  8179 C0           	ret nz			;8179	c0 	.
 720  817A DD 7E 05     	ld a,(ix+005h)		;817a	dd 7e 05 	. ~ .
 721  817D 3D           	dec a			;817d	3d 	=
 722  817E DD 77 05     	ld (ix+005h),a		;817e	dd 77 05 	. w .
 723  8181 28 01        	jr z,l8184h		;8181	28 01 	( .
 724  8183 C9           	ret			;8183	c9 	.
 725  8184              l8184h:
 726  8184 FD 7E 04     	ld a,(iy+004h)		;8184	fd 7e 04 	. ~ .
 727  8187 FD 46 00     	ld b,(iy+000h)		;8187	fd 46 00 	. F .
 728  818A 05           	dec b			;818a	05 	.
 729  818B E6 01        	and 001h		;818b	e6 01 	. .
 730  818D 28 07        	jr z,l8196h		;818d	28 07 	( .
 731  818F 04           	inc b			;818f	04 	.
 732  8190 04           	inc b			;8190	04 	.
 733  8191 04           	inc b			;8191	04 	.
 734  8192 04           	inc b			;8192	04 	.
 735  8193 04           	inc b			;8193	04 	.
 736  8194 04           	inc b			;8194	04 	.
 737  8195 04           	inc b			;8195	04 	.
 738  8196              l8196h:
 739  8196 DD 70 00     	ld (ix+000h),b		;8196	dd 70 00 	. p .
 740  8199 0F           	rrca			;8199	0f 	.
 741  819A 47           	ld b,a			;819a	47 	G
 742  819B ED 5F        	ld a,r		;819b	ed 5f 	. _
 743  819D E6 07        	and 007h		;819d	e6 07 	. .
 744  819F F6 03        	or 003h		;819f	f6 03 	. .
 745  81A1 C6 02        	add a,002h		;81a1	c6 02 	. .
 746  81A3 DD 77 02     	ld (ix+002h),a		;81a3	dd 77 02 	. w .
 747  81A6 B0           	or b			;81a6	b0 	.
 748  81A7 DD 77 03     	ld (ix+003h),a		;81a7	dd 77 03 	. w .
 749  81AA 3E 03        	ld a,003h		;81aa	3e 03 	> .
 750  81AC CB 78        	bit 7,b		;81ac	cb 78 	. x
 751  81AE 28 01        	jr z,l81b1h		;81ae	28 01 	( .
 752  81B0 AF           	xor a			;81b0	af 	.
 753  81B1              l81b1h:
 754  81B1 DD 77 04     	ld (ix+004h),a		;81b1	dd 77 04 	. w .
 755  81B4 DD CB 05 FE  	set 7,(ix+005h)		;81b4	dd cb 05 fe 	. . . .
 756  81B8 DD 36 01 01  	ld (ix+001h),001h		;81b8	dd 36 01 01 	. 6 . .
 757  81BC C9           	ret			;81bc	c9 	.
 758  81BD              l81bdh:
 759  81BD DD 7E 03     	ld a,(ix+003h)		;81bd	dd 7e 03 	. ~ .
 760  81C0 CB 7F        	bit 7,a		;81c0	cb 7f 	. 
 761  81C2 28 14        	jr z,l81d8h		;81c2	28 14 	( .
 762  81C4 DD 7E 04     	ld a,(ix+004h)		;81c4	dd 7e 04 	. ~ .
 763  81C7 3C           	inc a			;81c7	3c 	<
 764  81C8 DD 77 04     	ld (ix+004h),a		;81c8	dd 77 04 	. w .
 765  81CB FE 04        	cp 004h		;81cb	fe 04 	. .
 766  81CD 20 20        	jr nz,l81efh		;81cd	20 20
 767  81CF DD 34 00     	inc (ix+000h)		;81cf	dd 34 00 	. 4 .
 768  81D2 DD 36 04 00  	ld (ix+004h),000h		;81d2	dd 36 04 00 	. 6 . .
 769  81D6 18 17        	jr l81efh		;81d6	18 17 	. .
 770  81D8              l81d8h:
 771  81D8 DD 7E 04     	ld a,(ix+004h)		;81d8	dd 7e 04 	. ~ .
 772  81DB 3D           	dec a			;81db	3d 	=
 773  81DC DD 77 04     	ld (ix+004h),a		;81dc	dd 77 04 	. w .
 774  81DF 3C           	inc a			;81df	3c 	<
 775  81E0 20 0D        	jr nz,l81efh		;81e0	20 0d 	  .
 776  81E2 DD 36 04 03  	ld (ix+004h),003h		;81e2	dd 36 04 03 	. 6 . .
 777  81E6 DD 7E 00     	ld a,(ix+000h)		;81e6	dd 7e 00 	. ~ .
 778  81E9 B7           	or a			;81e9	b7 	.
 779  81EA 28 03        	jr z,l81efh		;81ea	28 03 	( .
 780  81EC DD 35 00     	dec (ix+000h)		;81ec	dd 35 00 	. 5 .
 781  81EF              l81efh:
 782  81EF DD 35 02     	dec (ix+002h)		;81ef	dd 35 02 	. 5 .
 783  81F2 C0           	ret nz			;81f2	c0 	.
 784  81F3 DD 7E 01     	ld a,(ix+001h)		;81f3	dd 7e 01 	. ~ .
 785  81F6 3C           	inc a			;81f6	3c 	<
 786  81F7 DD 77 01     	ld (ix+001h),a		;81f7	dd 77 01 	. w .
 787  81FA FE 09        	cp 009h		;81fa	fe 09 	. .
 788  81FC 28 09        	jr z,l8207h		;81fc	28 09 	( .
 789  81FE DD 7E 03     	ld a,(ix+003h)		;81fe	dd 7e 03 	. ~ .
 790  8201 E6 7F        	and 07fh		;8201	e6 7f 	. 
 791  8203 DD 77 02     	ld (ix+002h),a		;8203	dd 77 02 	. w .
 792  8206 C9           	ret			;8206	c9 	.
 793  8207              l8207h:
 794  8207 DD 7E 00     	ld a,(ix+000h)		;8207	dd 7e 00 	. ~ .
 795  820A CD F1 8C     	call sub_8cf1h		;820a	cd f1 8c 	. . .
 796  820D 20 0A        	jr nz,l8219h		;820d	20 0a 	  .
 797  820F 0E 00        	ld c,000h		;820f	0e 00 	. .
 798  8211 DD 46 00     	ld b,(ix+000h)		;8211	dd 46 00 	. F .
 799  8214 16 00        	ld d,000h		;8214	16 00 	. .
 800  8216 CD C3 89     	call sub_89c3h		;8216	cd c3 89 	. . .
 801  8219              l8219h:
 802  8219 ED 5F        	ld a,r		;8219	ed 5f 	. _
 803  821B E6 1F        	and 01fh		;821b	e6 1f 	. .
 804  821D F6 07        	or 007h		;821d	f6 07 	. .
 805  821F DD 77 05     	ld (ix+005h),a		;821f	dd 77 05 	. w .
 806  8222 C9           	ret			;8222	c9 	.
 807  8223              sub_8223h:
 808  8223 21 3F 78     	ld hl,0783fh		;8223	21 3f 78 	! ? x
 809  8226 35           	dec (hl)			;8226	35 	5
 810  8227 C0           	ret nz			;8227	c0 	.
 811  8228 36 3C        	ld (hl),03ch		;8228	36 3c 	6 <
 812  822A 3E 04        	ld a,004h		;822a	3e 04 	> .
 813  822C DD 21 9A 78  	ld ix,0789ah		;822c	dd 21 9a 78 	. ! . x
 814  8230              l8230h:
 815  8230 F5           	push af			;8230	f5 	.
 816  8231 CD 3E 82     	call sub_823eh		;8231	cd 3e 82 	. > .
 817  8234 01 07 00     	ld bc,00007h		;8234	01 07 00 	. . .
 818  8237 DD 09        	add ix,bc		;8237	dd 09 	. .
 819  8239 F1           	pop af			;8239	f1 	.
 820  823A 3D           	dec a			;823a	3d 	=
 821  823B 20 F3        	jr nz,l8230h		;823b	20 f3 	  .
 822  823D C9           	ret			;823d	c9 	.
 823  823E              sub_823eh:
 824  823E DD 7E 05     	ld a,(ix+005h)		;823e	dd 7e 05 	. ~ .
 825  8241 CB 7F        	bit 7,a		;8241	cb 7f 	. 
 826  8243 20 65        	jr nz,l82aah		;8243	20 65 	  e
 827  8245 B7           	or a			;8245	b7 	.
 828  8246 28 05        	jr z,l824dh		;8246	28 05 	( .
 829  8248 3D           	dec a			;8248	3d 	=
 830  8249 DD 77 05     	ld (ix+005h),a		;8249	dd 77 05 	. w .
 831  824C C9           	ret			;824c	c9 	.
 832  824D              l824dh:
 833  824D 00           	nop			;824d	00 	.
 834  824E DD CB 03 FE  	set 7,(ix+003h)		;824e	dd cb 03 fe 	. . . .
 835  8252 DD 7E 00     	ld a,(ix+000h)		;8252	dd 7e 00 	. ~ .
 836  8255 5F           	ld e,a			;8255	5f 	_
 837  8256 16 00        	ld d,000h		;8256	16 00 	. .
 838  8258 CD D2 83     	call sub_83d2h		;8258	cd d2 83 	. . .
 839  825B 6F           	ld l,a			;825b	6f 	o
 840  825C 26 00        	ld h,000h		;825c	26 00 	& .
 841  825E E5           	push hl			;825e	e5 	.
 842  825F B7           	or a			;825f	b7 	.
 843  8260 ED 52        	sbc hl,de		;8260	ed 52 	. R
 844  8262 C1           	pop bc			;8262	c1 	.
 845  8263 F2 70 82     	jp p,l8270h		;8263	f2 70 82 	. p .
 846  8266 C5           	push bc			;8266	c5 	.
 847  8267 E1           	pop hl			;8267	e1 	.
 848  8268 EB           	ex de,hl			;8268	eb 	.
 849  8269 B7           	or a			;8269	b7 	.
 850  826A ED 52        	sbc hl,de		;826a	ed 52 	. R
 851  826C DD CB 03 BE  	res 7,(ix+003h)		;826c	dd cb 03 be 	. . . .
 852  8270              l8270h:
 853  8270 7D           	ld a,l			;8270	7d 	}
 854  8271 CB 7F        	bit 7,a		;8271	cb 7f 	. 
 855  8273 20 6C        	jr nz,l82e1h		;8273	20 6c 	  l
 856  8275 FE 37        	cp 037h		;8275	fe 37 	. 7
 857  8277 F2 E1 82     	jp p,l82e1h		;8277	f2 e1 82 	. . .
 858  827A 3A 00 79     	ld a,(07900h)		;827a	3a 00 79 	: . y
 859  827D FE 32        	cp 032h		;827d	fe 32 	. 2
 860  827F F2 E1 82     	jp p,l82e1h		;827f	f2 e1 82 	. . .
 861  8282 67           	ld h,a			;8282	67 	g
 862  8283 3E 35        	ld a,035h		;8283	3e 35 	> 5
 863  8285 94           	sub h			;8285	94 	.
 864  8286 67           	ld h,a			;8286	67 	g
 865  8287 06 00        	ld b,000h		;8287	06 00 	. .
 866  8289 7D           	ld a,l			;8289	7d 	}
 867  828A B7           	or a			;828a	b7 	.
 868  828B 20 04        	jr nz,l8291h		;828b	20 04 	  .
 869  828D 06 3C        	ld b,03ch		;828d	06 3c 	. <
 870  828F 18 0A        	jr l829bh		;828f	18 0a 	. .
 871  8291              l8291h:
 872  8291 7C           	ld a,h			;8291	7c 	|
 873  8292 CB 25        	sla l		;8292	cb 25 	. %
 874  8294              l8294h:
 875  8294 95           	sub l			;8294	95 	.
 876  8295 FA 9B 82     	jp m,l829bh		;8295	fa 9b 82 	. . .
 877  8298 04           	inc b			;8298	04 	.
 878  8299 18 F9        	jr l8294h		;8299	18 f9 	. .
 879  829B              l829bh:
 880  829B 78           	ld a,b			;829b	78 	x
 881  829C DD 77 02     	ld (ix+002h),a		;829c	dd 77 02 	. w .
 882  829F DD B6 03     	or (ix+003h)		;829f	dd b6 03 	. . .
 883  82A2 DD 77 03     	ld (ix+003h),a		;82a2	dd 77 03 	. w .
 884  82A5 DD CB 05 FE  	set 7,(ix+005h)		;82a5	dd cb 05 fe 	. . . .
 885  82A9 C9           	ret			;82a9	c9 	.
 886  82AA              l82aah:
 887  82AA DD 7E 01     	ld a,(ix+001h)		;82aa	dd 7e 01 	. ~ .
 888  82AD 3C           	inc a			;82ad	3c 	<
 889  82AE FE 36        	cp 036h		;82ae	fe 36 	. 6
 890  82B0 28 25        	jr z,l82d7h		;82b0	28 25 	( %
 891  82B2 DD 77 01     	ld (ix+001h),a		;82b2	dd 77 01 	. w .
 892  82B5 DD 7E 02     	ld a,(ix+002h)		;82b5	dd 7e 02 	. ~ .
 893  82B8 B7           	or a			;82b8	b7 	.
 894  82B9 28 11        	jr z,l82cch		;82b9	28 11 	( .
 895  82BB 3D           	dec a			;82bb	3d 	=
 896  82BC DD 77 02     	ld (ix+002h),a		;82bc	dd 77 02 	. w .
 897  82BF C0           	ret nz			;82bf	c0 	.
 898  82C0 DD 7E 03     	ld a,(ix+003h)		;82c0	dd 7e 03 	. ~ .
 899  82C3 E6 7F        	and 07fh		;82c3	e6 7f 	. 
 900  82C5 DD 77 02     	ld (ix+002h),a		;82c5	dd 77 02 	. w .
 901  82C8 06 01        	ld b,001h		;82c8	06 01 	. .
 902  82CA 18 02        	jr l82ceh		;82ca	18 02 	. .
 903  82CC              l82cch:
 904  82CC 06 02        	ld b,002h		;82cc	06 02 	. .
 905  82CE              l82ceh:
 906  82CE DD 7E 03     	ld a,(ix+003h)		;82ce	dd 7e 03 	. ~ .
 907  82D1 CB 7F        	bit 7,a		;82d1	cb 7f 	. 
 908  82D3 28 3F        	jr z,l8314h		;82d3	28 3f 	( ?
 909  82D5 18 27        	jr l82feh		;82d5	18 27 	. '
 910  82D7              l82d7h:
 911  82D7 DD 46 00     	ld b,(ix+000h)		;82d7	dd 46 00 	. F .
 912  82DA 0E 3B        	ld c,03bh		;82da	0e 3b 	. ;
 913  82DC 16 40        	ld d,040h		;82dc	16 40 	. @
 914  82DE CD C3 89     	call sub_89c3h		;82de	cd c3 89 	. . .
 915  82E1              l82e1h:
 916  82E1 AF           	xor a			;82e1	af 	.
 917  82E2 DD 77 01     	ld (ix+001h),a		;82e2	dd 77 01 	. w .
 918  82E5 DD 77 02     	ld (ix+002h),a		;82e5	dd 77 02 	. w .
 919  82E8 DD 77 03     	ld (ix+003h),a		;82e8	dd 77 03 	. w .
 920  82EB DD 77 04     	ld (ix+004h),a		;82eb	dd 77 04 	. w .
 921  82EE DD 7E 06     	ld a,(ix+006h)		;82ee	dd 7e 06 	. ~ .
 922  82F1 DD 77 00     	ld (ix+000h),a		;82f1	dd 77 00 	. w .
 923  82F4 ED 5F        	ld a,r		;82f4	ed 5f 	. _
 924  82F6 E6 1F        	and 01fh		;82f6	e6 1f 	. .
 925  82F8 F6 03        	or 003h		;82f8	f6 03 	. .
 926  82FA DD 77 05     	ld (ix+005h),a		;82fa	dd 77 05 	. w .
 927  82FD C9           	ret			;82fd	c9 	.
 928  82FE              l82feh:
 929  82FE DD 7E 04     	ld a,(ix+004h)		;82fe	dd 7e 04 	. ~ .
 930  8301 B7           	or a			;8301	b7 	.
 931  8302 20 06        	jr nz,l830ah		;8302	20 06 	  .
 932  8304 3C           	inc a			;8304	3c 	<
 933  8305 DD 77 04     	ld (ix+004h),a		;8305	dd 77 04 	. w .
 934  8308 18 07        	jr l8311h		;8308	18 07 	. .
 935  830A              l830ah:
 936  830A AF           	xor a			;830a	af 	.
 937  830B DD 77 04     	ld (ix+004h),a		;830b	dd 77 04 	. w .
 938  830E DD 34 00     	inc (ix+000h)		;830e	dd 34 00 	. 4 .
 939  8311              l8311h:
 940  8311 10 EB        	djnz l82feh		;8311	10 eb 	. .
 941  8313 C9           	ret			;8313	c9 	.
 942  8314              l8314h:
 943  8314 DD 7E 04     	ld a,(ix+004h)		;8314	dd 7e 04 	. ~ .
 944  8317 B7           	or a			;8317	b7 	.
 945  8318 28 06        	jr z,l8320h		;8318	28 06 	( .
 946  831A AF           	xor a			;831a	af 	.
 947  831B DD 77 04     	ld (ix+004h),a		;831b	dd 77 04 	. w .
 948  831E 18 0F        	jr l832fh		;831e	18 0f 	. .
 949  8320              l8320h:
 950  8320 DD 7E 00     	ld a,(ix+000h)		;8320	dd 7e 00 	. ~ .
 951  8323 B7           	or a			;8323	b7 	.
 952  8324 28 09        	jr z,l832fh		;8324	28 09 	( .
 953  8326 3D           	dec a			;8326	3d 	=
 954  8327 DD 77 00     	ld (ix+000h),a		;8327	dd 77 00 	. w .
 955  832A 3E 01        	ld a,001h		;832a	3e 01 	> .
 956  832C DD 77 04     	ld (ix+004h),a		;832c	dd 77 04 	. w .
 957  832F              l832fh:
 958  832F 10 E3        	djnz l8314h		;832f	10 e3 	. .
 959  8331 C9           	ret			;8331	c9 	.
 960  8332              sub_8332h:
 961  8332 21 B7 78     	ld hl,078b7h		;8332	21 b7 78 	! . x
 962  8335 35           	dec (hl)			;8335	35 	5
 963  8336 C0           	ret nz			;8336	c0 	.
 964  8337 36 B4        	ld (hl),0b4h		;8337	36 b4 	6 .
 965  8339 DD 21 D7 78  	ld ix,078d7h		;8339	dd 21 d7 78 	. ! . x
 966  833D 3E 05        	ld a,005h		;833d	3e 05 	> .
 967  833F              l833fh:
 968  833F F5           	push af			;833f	f5 	.
 969  8340 CD 4D 83     	call sub_834dh		;8340	cd 4d 83 	. M .
 970  8343 01 06 00     	ld bc,00006h		;8343	01 06 00 	. . .
 971  8346 DD 09        	add ix,bc		;8346	dd 09 	. .
 972  8348 F1           	pop af			;8348	f1 	.
 973  8349 3D           	dec a			;8349	3d 	=
 974  834A 20 F3        	jr nz,l833fh		;834a	20 f3 	  .
 975  834C C9           	ret			;834c	c9 	.
 976  834D              sub_834dh:
 977  834D DD 7E 05     	ld a,(ix+005h)		;834d	dd 7e 05 	. ~ .
 978  8350 B7           	or a			;8350	b7 	.
 979  8351 28 05        	jr z,l8358h		;8351	28 05 	( .
 980  8353 3D           	dec a			;8353	3d 	=
 981  8354 DD 77 05     	ld (ix+005h),a		;8354	dd 77 05 	. w .
 982  8357 C9           	ret			;8357	c9 	.
 983  8358              l8358h:
 984  8358 DD 7E 04     	ld a,(ix+004h)		;8358	dd 7e 04 	. ~ .
 985  835B E6 01        	and 001h		;835b	e6 01 	. .
 986  835D 28 1A        	jr z,l8379h		;835d	28 1a 	( .
 987  835F DD 7E 03     	ld a,(ix+003h)		;835f	dd 7e 03 	. ~ .
 988  8362 B7           	or a			;8362	b7 	.
 989  8363 20 05        	jr nz,l836ah		;8363	20 05 	  .
 990  8365 3C           	inc a			;8365	3c 	<
 991  8366 DD 77 03     	ld (ix+003h),a		;8366	dd 77 03 	. w .
 992  8369 C9           	ret			;8369	c9 	.
 993  836A              l836ah:
 994  836A DD 7E 00     	ld a,(ix+000h)		;836a	dd 7e 00 	. ~ .
 995  836D DD BE 02     	cp (ix+002h)		;836d	dd be 02 	. . .
 996  8370 C8           	ret z			;8370	c8 	.
 997  8371 DD 34 00     	inc (ix+000h)		;8371	dd 34 00 	. 4 .
 998  8374 AF           	xor a			;8374	af 	.
 999  8375 DD 77 03     	ld (ix+003h),a		;8375	dd 77 03 	. w .
1000  8378 C9           	ret			;8378	c9 	.
1001  8379              l8379h:
1002  8379 DD 7E 03     	ld a,(ix+003h)		;8379	dd 7e 03 	. ~ .
1003  837C B7           	or a			;837c	b7 	.
1004  837D 28 05        	jr z,l8384h		;837d	28 05 	( .
1005  837F AF           	xor a			;837f	af 	.
1006  8380 DD 77 03     	ld (ix+003h),a		;8380	dd 77 03 	. w .
1007  8383 C9           	ret			;8383	c9 	.
1008  8384              l8384h:
1009  8384 DD 7E 00     	ld a,(ix+000h)		;8384	dd 7e 00 	. ~ .
1010  8387 DD BE 01     	cp (ix+001h)		;8387	dd be 01 	. . .
1011  838A C8           	ret z			;838a	c8 	.
1012  838B DD 35 00     	dec (ix+000h)		;838b	dd 35 00 	. 5 .
1013  838E 3E 01        	ld a,001h		;838e	3e 01 	> .
1014  8390 DD 77 03     	ld (ix+003h),a		;8390	dd 77 03 	. w .
1015  8393 C9           	ret			;8393	c9 	.
1016  8394              sub_8394h:
1017  8394 21 B8 78     	ld hl,078b8h		;8394	21 b8 78 	! . x
1018  8397 35           	dec (hl)			;8397	35 	5
1019  8398 C0           	ret nz			;8398	c0 	.
1020  8399 DD 21 D7 78  	ld ix,078d7h		;8399	dd 21 d7 78 	. ! . x
1021  839D 3E 05        	ld a,005h		;839d	3e 05 	> .
1022  839F              l839fh:
1023  839F F5           	push af			;839f	f5 	.
1024  83A0 CD AD 83     	call sub_83adh		;83a0	cd ad 83 	. . .
1025  83A3 01 06 00     	ld bc,00006h		;83a3	01 06 00 	. . .
1026  83A6 DD 09        	add ix,bc		;83a6	dd 09 	. .
1027  83A8 F1           	pop af			;83a8	f1 	.
1028  83A9 3D           	dec a			;83a9	3d 	=
1029  83AA 20 F3        	jr nz,l839fh		;83aa	20 f3 	  .
1030  83AC C9           	ret			;83ac	c9 	.
1031  83AD              sub_83adh:
1032  83AD DD 7E 04     	ld a,(ix+004h)		;83ad	dd 7e 04 	. ~ .
1033  83B0 47           	ld b,a			;83b0	47 	G
1034  83B1 E6 01        	and 001h		;83b1	e6 01 	. .
1035  83B3 4F           	ld c,a			;83b3	4f 	O
1036  83B4 78           	ld a,b			;83b4	78 	x
1037  83B5 0F           	rrca			;83b5	0f 	.
1038  83B6 E6 1F        	and 01fh		;83b6	e6 1f 	. .
1039  83B8 3D           	dec a			;83b8	3d 	=
1040  83B9 28 06        	jr z,l83c1h		;83b9	28 06 	( .
1041  83BB 07           	rlca			;83bb	07 	.
1042  83BC B1           	or c			;83bc	b1 	.
1043  83BD DD 77 04     	ld (ix+004h),a		;83bd	dd 77 04 	. w .
1044  83C0 C9           	ret			;83c0	c9 	.
1045  83C1              l83c1h:
1046  83C1 DD 7E 00     	ld a,(ix+000h)		;83c1	dd 7e 00 	. ~ .
1047  83C4 CD DE 83     	call sub_83deh		;83c4	cd de 83 	. . .
1048  83C7 ED 5F        	ld a,r		;83c7	ed 5f 	. _
1049  83C9 F6 03        	or 003h		;83c9	f6 03 	. .
1050  83CB E6 1E        	and 01eh		;83cb	e6 1e 	. .
1051  83CD B1           	or c			;83cd	b1 	.
1052  83CE DD 77 04     	ld (ix+004h),a		;83ce	dd 77 04 	. w .
1053  83D1 C9           	ret			;83d1	c9 	.
1054  83D2              sub_83d2h:
1055  83D2 3A 05 79     	ld a,(07905h)		;83d2	3a 05 79 	: . y
1056  83D5 06 0A        	ld b,00ah		;83d5	06 0a 	. .
1057  83D7              l83d7h:
1058  83D7 3C           	inc a			;83d7	3c 	<
1059  83D8 28 02        	jr z,l83dch		;83d8	28 02 	( .
1060  83DA 10 FB        	djnz l83d7h		;83da	10 fb 	. .
1061  83DC              l83dch:
1062  83DC 3D           	dec a			;83dc	3d 	=
1063  83DD C9           	ret			;83dd	c9 	.
1064  83DE              sub_83deh:
1065  83DE 5F           	ld e,a			;83de	5f 	_
1066  83DF 16 00        	ld d,000h		;83df	16 00 	. .
1067  83E1 CD D2 83     	call sub_83d2h		;83e1	cd d2 83 	. . .
1068  83E4 6F           	ld l,a			;83e4	6f 	o
1069  83E5 26 00        	ld h,000h		;83e5	26 00 	& .
1070  83E7 B7           	or a			;83e7	b7 	.
1071  83E8 ED 52        	sbc hl,de		;83e8	ed 52 	. R
1072  83EA FA FA 83     	jp m,l83fah		;83ea	fa fa 83 	. . .
1073  83ED 28 02        	jr z,l83f1h		;83ed	28 02 	( .
1074  83EF 18 06        	jr l83f7h		;83ef	18 06 	. .
1075  83F1              l83f1h:
1076  83F1 ED 5F        	ld a,r		;83f1	ed 5f 	. _
1077  83F3 E6 01        	and 001h		;83f3	e6 01 	. .
1078  83F5 28 03        	jr z,l83fah		;83f5	28 03 	( .
1079  83F7              l83f7h:
1080  83F7 0E 01        	ld c,001h		;83f7	0e 01 	. .
1081  83F9 C9           	ret			;83f9	c9 	.
1082  83FA              l83fah:
1083  83FA 0E 00        	ld c,000h		;83fa	0e 00 	. .
1084  83FC C9           	ret			;83fc	c9 	.
1085  83FD              sub_83fdh:
1086  83FD 3A 00 79     	ld a,(07900h)		;83fd	3a 00 79 	: . y
1087  8400 FE 35        	cp 035h		;8400	fe 35 	. 5
1088  8402 C8           	ret z			;8402	c8 	.
1089  8403 3A FD 78     	ld a,(078fdh)		;8403	3a fd 78 	: . x
1090  8406 B7           	or a			;8406	b7 	.
1091  8407 28 05        	jr z,l840eh		;8407	28 05 	( .
1092  8409 3D           	dec a			;8409	3d 	=
1093  840A 32 FD 78     	ld (078fdh),a		;840a	32 fd 78 	2 . x
1094  840D C9           	ret			;840d	c9 	.
1095  840E              l840eh:
1096  840E CD F0 8E     	call sub_8ef0h		;840e	cd f0 8e 	. . .
1097  8411 CB 6F        	bit 5,a		;8411	cb 6f 	. o
1098  8413 C8           	ret z			;8413	c8 	.
1099  8414 3E C8        	ld a,0c8h		;8414	3e c8 	> .
1100  8416 32 FD 78     	ld (078fdh),a		;8416	32 fd 78 	2 . x
1101  8419              sub_8419h:
1102  8419 3A 02 79     	ld a,(07902h)		;8419	3a 02 79 	: . y
1103  841C 0F           	rrca			;841c	0f 	.
1104  841D 0F           	rrca			;841d	0f 	.
1105  841E 32 02 79     	ld (07902h),a		;841e	32 02 79 	2 . y
1106  8421 C9           	ret			;8421	c9 	.
1107  8422              sub_8422h:
1108  8422 21 FB 78     	ld hl,078fbh		;8422	21 fb 78 	! . x
1109  8425 35           	dec (hl)			;8425	35 	5
1110  8426 C0           	ret nz			;8426	c0 	.
1111  8427 3A F7 78     	ld a,(078f7h)		;8427	3a f7 78 	: . x
1112  842A 77           	ld (hl),a			;842a	77 	w
1113  842B CD F0 8E     	call sub_8ef0h		;842b	cd f0 8e 	. . .
1114  842E E6 03        	and 003h		;842e	e6 03 	. .
1115  8430 28 69        	jr z,l849bh		;8430	28 69 	( i
1116  8432 47           	ld b,a			;8432	47 	G
1117  8433 3A F5 78     	ld a,(078f5h)		;8433	3a f5 78 	: . x
1118  8436 B8           	cp b			;8436	b8 	.
1119  8437 28 05        	jr z,l843eh		;8437	28 05 	( .
1120  8439 3E 96        	ld a,096h		;8439	3e 96 	> .
1121  843B 32 F7 78     	ld (078f7h),a		;843b	32 f7 78 	2 . x
1122  843E              l843eh:
1123  843E 78           	ld a,b			;843e	78 	x
1124  843F 32 F5 78     	ld (078f5h),a		;843f	32 f5 78 	2 . x
1125  8442 F5           	push af			;8442	f5 	.
1126  8443 3A F7 78     	ld a,(078f7h)		;8443	3a f7 78 	: . x
1127  8446 FE 1E        	cp 01eh		;8446	fe 1e 	. .
1128  8448 28 05        	jr z,l844fh		;8448	28 05 	( .
1129  844A D6 1E        	sub 01eh		;844a	d6 1e 	. .
1130  844C 32 F7 78     	ld (078f7h),a		;844c	32 f7 78 	2 . x
1131  844F              l844fh:
1132  844F F1           	pop af			;844f	f1 	.
1133  8450              l8450h:
1134  8450 CB 47        	bit 0,a		;8450	cb 47 	. G
1135  8452 20 57        	jr nz,l84abh		;8452	20 57 	  W
1136  8454 18 6B        	jr l84c1h		;8454	18 6b 	. k
1137  8456              sub_8456h:
1138  8456 21 FC 78     	ld hl,078fch		;8456	21 fc 78 	! . x
1139  8459 35           	dec (hl)			;8459	35 	5
1140  845A C0           	ret nz			;845a	c0 	.
1141  845B 3A F8 78     	ld a,(078f8h)		;845b	3a f8 78 	: . x
1142  845E 77           	ld (hl),a			;845e	77 	w
1143  845F CD F0 8E     	call sub_8ef0h		;845f	cd f0 8e 	. . .
1144  8462 E6 0C        	and 00ch		;8462	e6 0c 	. .
1145  8464 28 25        	jr z,l848bh		;8464	28 25 	( %
1146  8466 47           	ld b,a			;8466	47 	G
1147  8467 3A F6 78     	ld a,(078f6h)		;8467	3a f6 78 	: . x
1148  846A B8           	cp b			;846a	b8 	.
1149  846B 28 05        	jr z,l8472h		;846b	28 05 	( .
1150  846D 3E 96        	ld a,096h		;846d	3e 96 	> .
1151  846F 32 F8 78     	ld (078f8h),a		;846f	32 f8 78 	2 . x
1152  8472              l8472h:
1153  8472 78           	ld a,b			;8472	78 	x
1154  8473 32 F6 78     	ld (078f6h),a		;8473	32 f6 78 	2 . x
1155  8476 F5           	push af			;8476	f5 	.
1156  8477 3A F8 78     	ld a,(078f8h)		;8477	3a f8 78 	: . x
1157  847A FE 1E        	cp 01eh		;847a	fe 1e 	. .
1158  847C 28 05        	jr z,l8483h		;847c	28 05 	( .
1159  847E D6 1E        	sub 01eh		;847e	d6 1e 	. .
1160  8480 32 F8 78     	ld (078f8h),a		;8480	32 f8 78 	2 . x
1161  8483              l8483h:
1162  8483 F1           	pop af			;8483	f1 	.
1163  8484              l8484h:
1164  8484 CB 57        	bit 2,a		;8484	cb 57 	. W
1165  8486 20 4E        	jr nz,l84d6h		;8486	20 4e 	  N
1166  8488 C3 2B 85     	jp l852bh		;8488	c3 2b 85 	. + .
1167  848B              l848bh:
1168  848B 3A F8 78     	ld a,(078f8h)		;848b	3a f8 78 	: . x
1169  848E FE 96        	cp 096h		;848e	fe 96 	. .
1170  8490 C8           	ret z			;8490	c8 	.
1171  8491 C6 1E        	add a,01eh		;8491	c6 1e 	. .
1172  8493 32 F8 78     	ld (078f8h),a		;8493	32 f8 78 	2 . x
1173  8496 3A F6 78     	ld a,(078f6h)		;8496	3a f6 78 	: . x
1174  8499 18 E9        	jr l8484h		;8499	18 e9 	. .
1175  849B              l849bh:
1176  849B 3A F7 78     	ld a,(078f7h)		;849b	3a f7 78 	: . x
1177  849E FE 96        	cp 096h		;849e	fe 96 	. .
1178  84A0 C8           	ret z			;84a0	c8 	.
1179  84A1 C6 1E        	add a,01eh		;84a1	c6 1e 	. .
1180  84A3 32 F7 78     	ld (078f7h),a		;84a3	32 f7 78 	2 . x
1181  84A6 3A F5 78     	ld a,(078f5h)		;84a6	3a f5 78 	: . x
1182  84A9 18 A5        	jr l8450h		;84a9	18 a5 	. .
1183  84AB              l84abh:
1184  84AB 3A 00 79     	ld a,(07900h)		;84ab	3a 00 79 	: . y
1185  84AE B7           	or a			;84ae	b7 	.
1186  84AF C8           	ret z			;84af	c8 	.
1187  84B0 3D           	dec a			;84b0	3d 	=
1188  84B1 32 00 79     	ld (07900h),a		;84b1	32 00 79 	2 . y
1189  84B4 2A FE 78     	ld hl,(078feh)		;84b4	2a fe 78 	* . x
1190  84B7 11 2C 00     	ld de,0002ch		;84b7	11 2c 00 	. , .
1191  84BA B7           	or a			;84ba	b7 	.
1192  84BB ED 52        	sbc hl,de		;84bb	ed 52 	. R
1193  84BD 22 FE 78     	ld (078feh),hl		;84bd	22 fe 78 	" . x
1194  84C0 C9           	ret			;84c0	c9 	.
1195  84C1              l84c1h:
1196  84C1 3A 00 79     	ld a,(07900h)		;84c1	3a 00 79 	: . y
1197  84C4 FE 35        	cp 035h		;84c4	fe 35 	. 5
1198  84C6 C8           	ret z			;84c6	c8 	.
1199  84C7 3C           	inc a			;84c7	3c 	<
1200  84C8 32 00 79     	ld (07900h),a		;84c8	32 00 79 	2 . y
1201  84CB 2A FE 78     	ld hl,(078feh)		;84cb	2a fe 78 	* . x
1202  84CE 11 2C 00     	ld de,0002ch		;84ce	11 2c 00 	. , .
1203  84D1 19           	add hl,de			;84d1	19 	.
1204  84D2 22 FE 78     	ld (078feh),hl		;84d2	22 fe 78 	" . x
1205  84D5 C9           	ret			;84d5	c9 	.
1206  84D6              l84d6h:
1207  84D6 3A 00 79     	ld a,(07900h)		;84d6	3a 00 79 	: . y
1208  84D9 FE 35        	cp 035h		;84d9	fe 35 	. 5
1209  84DB C8           	ret z			;84db	c8 	.
1210  84DC 3A 04 79     	ld a,(07904h)		;84dc	3a 04 79 	: . y
1211  84DF B7           	or a			;84df	b7 	.
1212  84E0 28 05        	jr z,l84e7h		;84e0	28 05 	( .
1213  84E2 AF           	xor a			;84e2	af 	.
1214  84E3 32 04 79     	ld (07904h),a		;84e3	32 04 79 	2 . y
1215  84E6 C9           	ret			;84e6	c9 	.
1216  84E7              l84e7h:
1217  84E7 3A 01 79     	ld a,(07901h)		;84e7	3a 01 79 	: . y
1218  84EA B7           	or a			;84ea	b7 	.
1219  84EB 28 2B        	jr z,l8518h		;84eb	28 2b 	( +
1220  84ED 3D           	dec a			;84ed	3d 	=
1221  84EE 32 01 79     	ld (07901h),a		;84ee	32 01 79 	2 . y
1222  84F1 3E 01        	ld a,001h		;84f1	3e 01 	> .
1223  84F3 32 04 79     	ld (07904h),a		;84f3	32 04 79 	2 . y
1224  84F6 2A FE 78     	ld hl,(078feh)		;84f6	2a fe 78 	* . x
1225  84F9 2B           	dec hl			;84f9	2b 	+
1226  84FA 22 FE 78     	ld (078feh),hl		;84fa	22 fe 78 	" . x
1227  84FD CD 60 85     	call sub_8560h		;84fd	cd 60 85 	. ` .
1228  8500              l8500h:
1229  8500 3A 05 79     	ld a,(07905h)		;8500	3a 05 79 	: . y
1230  8503 3D           	dec a			;8503	3d 	=
1231  8504 32 05 79     	ld (07905h),a		;8504	32 05 79 	2 . y
1232  8507 CD 0B 85     	call sub_850bh		;8507	cd 0b 85 	. . .
1233  850A C9           	ret			;850a	c9 	.
1234  850B              sub_850bh:
1235  850B 21 6A 78     	ld hl,0786ah		;850b	21 6a 78 	! j x
1236  850E 11 04 00     	ld de,00004h		;850e	11 04 00 	. . .
1237  8511 06 06        	ld b,006h		;8511	06 06 	. .
1238  8513              l8513h:
1239  8513 35           	dec (hl)			;8513	35 	5
1240  8514 19           	add hl,de			;8514	19 	.
1241  8515 10 FC        	djnz l8513h		;8515	10 fc 	. .
1242  8517 C9           	ret			;8517	c9 	.
1243  8518              l8518h:
1244  8518 3A 08 79     	ld a,(07908h)		;8518	3a 08 79 	: . y
1245  851B FE 06        	cp 006h		;851b	fe 06 	. .
1246  851D C8           	ret z			;851d	c8 	.
1247  851E 3D           	dec a			;851e	3d 	=
1248  851F 32 08 79     	ld (07908h),a		;851f	32 08 79 	2 . y
1249  8522 2A 06 79     	ld hl,(07906h)		;8522	2a 06 79 	* . y
1250  8525 2B           	dec hl			;8525	2b 	+
1251  8526 22 06 79     	ld (07906h),hl		;8526	22 06 79 	" . y
1252  8529 18 D5        	jr l8500h		;8529	18 d5 	. .
1253  852B              l852bh:
1254  852B 3A 00 79     	ld a,(07900h)		;852b	3a 00 79 	: . y
1255  852E FE 35        	cp 035h		;852e	fe 35 	. 5
1256  8530 C8           	ret z			;8530	c8 	.
1257  8531 3A 04 79     	ld a,(07904h)		;8531	3a 04 79 	: . y
1258  8534 B7           	or a			;8534	b7 	.
1259  8535 20 05        	jr nz,l853ch		;8535	20 05 	  .
1260  8537 3C           	inc a			;8537	3c 	<
1261  8538 32 04 79     	ld (07904h),a		;8538	32 04 79 	2 . y
1262  853B C9           	ret			;853b	c9 	.
1263  853C              l853ch:
1264  853C 3A 01 79     	ld a,(07901h)		;853c	3a 01 79 	: . y
1265  853F FE 0C        	cp 00ch		;853f	fe 0c 	. .
1266  8541 28 2A        	jr z,l856dh		;8541	28 2a 	( *
1267  8543 3C           	inc a			;8543	3c 	<
1268  8544 32 01 79     	ld (07901h),a		;8544	32 01 79 	2 . y
1269  8547 AF           	xor a			;8547	af 	.
1270  8548 32 04 79     	ld (07904h),a		;8548	32 04 79 	2 . y
1271  854B 2A FE 78     	ld hl,(078feh)		;854b	2a fe 78 	* . x
1272  854E 23           	inc hl			;854e	23 	#
1273  854F 22 FE 78     	ld (078feh),hl		;854f	22 fe 78 	" . x
1274  8552 CD 0B 85     	call sub_850bh		;8552	cd 0b 85 	. . .
1275  8555              l8555h:
1276  8555 3A 05 79     	ld a,(07905h)		;8555	3a 05 79 	: . y
1277  8558 3C           	inc a			;8558	3c 	<
1278  8559 32 05 79     	ld (07905h),a		;8559	32 05 79 	2 . y
1279  855C CD 60 85     	call sub_8560h		;855c	cd 60 85 	. ` .
1280  855F C9           	ret			;855f	c9 	.
1281  8560              sub_8560h:
1282  8560 21 6A 78     	ld hl,0786ah		;8560	21 6a 78 	! j x
1283  8563 11 04 00     	ld de,00004h		;8563	11 04 00 	. . .
1284  8566 06 06        	ld b,006h		;8566	06 06 	. .
1285  8568              l8568h:
1286  8568 34           	inc (hl)			;8568	34 	4
1287  8569 19           	add hl,de			;8569	19 	.
1288  856A 10 FC        	djnz l8568h		;856a	10 fc 	. .
1289  856C C9           	ret			;856c	c9 	.
1290  856D              l856dh:
1291  856D 3A 08 79     	ld a,(07908h)		;856d	3a 08 79 	: . y
1292  8570 FE F2        	cp 0f2h		;8570	fe f2 	. .
1293  8572 C8           	ret z			;8572	c8 	.
1294  8573 3C           	inc a			;8573	3c 	<
1295  8574 32 08 79     	ld (07908h),a		;8574	32 08 79 	2 . y
1296  8577 2A 06 79     	ld hl,(07906h)		;8577	2a 06 79 	* . y
1297  857A 23           	inc hl			;857a	23 	#
1298  857B 22 06 79     	ld (07906h),hl		;857b	22 06 79 	" . y
1299  857E 18 D5        	jr l8555h		;857e	18 d5 	. .
1300  8580              sub_8580h:
1301  8580 21 FA 78     	ld hl,078fah		;8580	21 fa 78 	! . x
1302  8583 35           	dec (hl)			;8583	35 	5
1303  8584 C0           	ret nz			;8584	c0 	.
1304  8585 36 64        	ld (hl),064h		;8585	36 64 	6 d
1305  8587 3A 03 79     	ld a,(07903h)		;8587	3a 03 79 	: . y
1306  858A EE 01        	xor 001h		;858a	ee 01 	. .
1307  858C 32 03 79     	ld (07903h),a		;858c	32 03 79 	2 . y
1308  858F 3A 85 78     	ld a,(07885h)		;858f	3a 85 78 	: . x
1309  8592 EE 20        	xor 020h		;8592	ee 20 	.
1310  8594 32 85 78     	ld (07885h),a		;8594	32 85 78 	2 . x
1311  8597 3A 8B 78     	ld a,(0788bh)		;8597	3a 8b 78 	: . x
1312  859A EE 20        	xor 020h		;859a	ee 20 	.
1313  859C 32 8B 78     	ld (0788bh),a		;859c	32 8b 78 	2 . x
1314  859F C9           	ret			;859f	c9 	.
1315  85A0
1316  85A0              ;***********************************************************************************************
1317  85A0              ; DEAD CODE (never used)
1318  85A0              ; Perform Delay of 30 loops
1319  85A0 01 1E 00     	ld bc,30			; bc - delay value											;85a0	01 1e 00
1320  85A3
1321  85A3              ;***********************************************************************************************
1322  85A3              ; DEAD CODE (never used)
1323  85A3              ; Perform Delay of number of loops given in bc
1324  85A3              ; IN: bc - delay value
1325  85A3              DELAY_BC:
1326  85A3 0B           	dec bc				; decrement bc - delay counter								;85a3	0b
1327  85A4 78           	ld a,b				; check if bc is 0											;85a4	78
1328  85A5 B1           	or c				;															;85a5	b1
1329  85A6 20 FB        	jr nz,DELAY_BC		; no - wait more											;85a6	20 fb
1330  85A8 C9           	ret					; ------------------ End of Proc --------------------------	;85a8	c9
1331  85A9
1332  85A9
1333  85A9              sub_85a9h:
1334  85A9 00           	nop			;85a9	00 	.
1335  85AA 21 F9 78     	ld hl,078f9h		;85aa	21 f9 78 	! . x
1336  85AD 35           	dec (hl)			;85ad	35 	5
1337  85AE C0           	ret nz			;85ae	c0 	.
1338  85AF 36 1E        	ld (hl),01eh		;85af	36 1e 	6 .
1339  85B1 CD ED 86     	call sub_86edh		;85b1	cd ed 86 	. . .
1340  85B4 CD 88 87     	call sub_8788h		;85b4	cd 88 87 	. . .
1341  85B7 CD 70 8F     	call JMP_PRINT_STATBAR	; print Status Bar at the Top of Screen					;85b7	cd 70 8f
1342  85BA CD 81 8D     	call sub_8d81h		;85ba	cd 81 8d 	. . .
1343  85BD CD 39 8C     	call sub_8c39h		;85bd	cd 39 8c 	. 9 .
1344  85C0 CD 88 8C     	call sub_8c88h		;85c0	cd 88 8c 	. . .
1345  85C3 CD 4D 8C     	call sub_8c4dh		;85c3	cd 4d 8c 	. M .
1346  85C6 CD 40 8B     	call sub_8b40h		;85c6	cd 40 8b 	. @ .
1347  85C9 CD 77 86     	call sub_8677h		;85c9	cd 77 86 	. w .
1348  85CC CD FE 8D     	call sub_8dfeh		;85cc	cd fe 8d 	. . .
1349  85CF CD 24 8E     	call sub_8e24h		;85cf	cd 24 8e 	. $ .
1350  85D2 CD 4B 8E     	call sub_8e4bh		;85d2	cd 4b 8e 	. K .
1351  85D5 CD 24 86     	call sub_8624h		;85d5	cd 24 86 	. $ .
1352  85D8 3E 01        	ld a,001h		;85d8	3e 01 	> .
1353  85DA 32 A5 8B     	ld (l8ba5h),a		;85da	32 a5 8b 	2 . .
1354  85DD CD A6 8B     	call sub_8ba6h		;85dd	cd a6 8b 	. . .
1355  85E0 CD 43 8D     	call sub_8d43h		;85e0	cd 43 8d 	. C .
1356  85E3 AF           	xor a			;85e3	af 	.
1357  85E4 32 A5 8B     	ld (l8ba5h),a		;85e4	32 a5 8b 	2 . .
1358  85E7 CD A6 8B     	call sub_8ba6h		;85e7	cd a6 8b 	. . .
1359  85EA CD C3 8A     	call sub_8ac3h		;85ea	cd c3 8a 	. . .
1360  85ED CD 26 8A     	call sub_8a26h		;85ed	cd 26 8a 	. & .
1361  85F0 CD 15 87     	call sub_8715h		;85f0	cd 15 87 	. . .
1362  85F3 CD B9 8D     	call sub_8db9h		;85f3	cd b9 8d 	. . .
1363  85F6 CD 44 86     	call sub_8644h		;85f6	cd 44 86 	. D .
1364  85F9 CD 5B 87     	call sub_875bh		;85f9	cd 5b 87 	. [ .
1365  85FC CD 68 8A     	call sub_8a68h		;85fc	cd 68 8a 	. h .
1366  85FF CD 81 8D     	call sub_8d81h		;85ff	cd 81 8d 	. . .
1367  8602 CD CA 8C     	call sub_8ccah		;8602	cd ca 8c 	. . .
1368  8605 CD 0D 8C     	call sub_8c0dh		;8605	cd 0d 8c 	. . .
1369  8608 CD 7E 8B     	call sub_8b7eh		;8608	cd 7e 8b 	. ~ .
1370  860B CD 16 8B     	call sub_8b16h		;860b	cd 16 8b 	. . .
1371  860E CD 07 87     	call sub_8707h		;860e	cd 07 87 	. . .
1372  8611 CD 74 8E     	call sub_8e74h		;8611	cd 74 8e 	. t .
1373  8614 CD 97 8E     	call sub_8e97h		;8614	cd 97 8e 	. . .
1374  8617 CD BB 8E     	call sub_8ebbh		;8617	cd bb 8e 	. . .
1375  861A CD 9E 86     	call sub_869eh		;861a	cd 9e 86 	. . .
1376  861D CD C7 86     	call sub_86c7h		;861d	cd c7 86 	. . .
1377  8620 CD 8C 86     	call sub_868ch		;8620	cd 8c 86 	. . .
1378  8623 C9           	ret			;8623	c9 	.
1379  8624              sub_8624h:
1380  8624 CD 5E 86     	call sub_865eh		;8624	cd 5e 86 	. ^ .
1381  8627 E5           	push hl			;8627	e5 	.
1382  8628 EB           	ex de,hl			;8628	eb 	.
1383  8629 21 17 A4     	ld hl,la417h		;8629	21 17 a4 	! . .
1384  862C 06 0E        	ld b,00eh		;862c	06 0e 	. .
1385  862E 0E 08        	ld c,008h		;862e	0e 08 	. .
1386  8630 CD A2 8D     	call sub_8da2h		;8630	cd a2 8d 	. . .
1387  8633 E1           	pop hl			;8633	e1 	.
1388  8634 11 08 00     	ld de,00008h		;8634	11 08 00 	. . .
1389  8637 19           	add hl,de			;8637	19 	.
1390  8638 EB           	ex de,hl			;8638	eb 	.
1391  8639 21 87 A4     	ld hl,la487h		;8639	21 87 a4 	! . .
1392  863C 06 0E        	ld b,00eh		;863c	06 0e 	. .
1393  863E 0E 08        	ld c,008h		;863e	0e 08 	. .
1394  8640 CD A2 8D     	call sub_8da2h		;8640	cd a2 8d 	. . .
1395  8643 C9           	ret			;8643	c9 	.
1396  8644              sub_8644h:
1397  8644 CD 5E 86     	call sub_865eh		;8644	cd 5e 86 	. ^ .
1398  8647 EB           	ex de,hl			;8647	eb 	.
1399  8648 3E 10        	ld a,010h		;8648	3e 10 	> .
1400  864A 01 08 00     	ld bc,00008h		;864a	01 08 00 	. . .
1401  864D F5           	push af			;864d	f5 	.
1402  864E C5           	push bc			;864e	c5 	.
1403  864F D5           	push de			;864f	d5 	.
1404  8650 CD 8A 8D     	call sub_8d8ah		;8650	cd 8a 8d 	. . .
1405  8653 E1           	pop hl			;8653	e1 	.
1406  8654 11 08 00     	ld de,00008h		;8654	11 08 00 	. . .
1407  8657 19           	add hl,de			;8657	19 	.
1408  8658 EB           	ex de,hl			;8658	eb 	.
1409  8659 C1           	pop bc			;8659	c1 	.
1410  865A F1           	pop af			;865a	f1 	.
1411  865B C3 8A 8D     	jp sub_8d8ah		;865b	c3 8a 8d 	. . .
1412  865E              sub_865eh:
1413  865E 3A 08 79     	ld a,(07908h)		;865e	3a 08 79 	: . y
1414  8661 CB 7F        	bit 7,a		;8661	cb 7f 	. 
1415  8663 28 10        	jr z,l8675h		;8663	28 10 	( .
1416  8665 CB BF        	res 7,a		;8665	cb bf 	. .
1417  8667 D6 66        	sub 066h		;8667	d6 66 	. f
1418  8669 FA 75 86     	jp m,l8675h		;8669	fa 75 86 	. u .
1419  866C 3C           	inc a			;866c	3c 	<
1420  866D 21 0E B3     	ld hl,0b30eh		;866d	21 0e b3 	! . .
1421  8670              l8670h:
1422  8670 3D           	dec a			;8670	3d 	=
1423  8671 C8           	ret z			;8671	c8 	.
1424  8672 2B           	dec hl			;8672	2b 	+
1425  8673 18 FB        	jr l8670h		;8673	18 fb 	. .
1426  8675              l8675h:
1427  8675 F1           	pop af			;8675	f1 	.
1428  8676 C9           	ret			;8676	c9 	.
1429  8677              sub_8677h:
1430  8677 3E F5        	ld a,0f5h		;8677	3e f5 	> .
1431  8679 CD F1 8C     	call sub_8cf1h		;8679	cd f1 8c 	. . .
1432  867C C0           	ret nz			;867c	c0 	.
1433  867D CD E1 8E     	call sub_8ee1h		;867d	cd e1 8e 	. . .
1434  8680 11 F7 A4     	ld de,la4f7h		;8680	11 f7 a4 	. . .
1435  8683 EB           	ex de,hl			;8683	eb 	.
1436  8684 06 10        	ld b,010h		;8684	06 10 	. .
1437  8686 0E 03        	ld c,003h		;8686	0e 03 	. .
1438  8688 CD A2 8D     	call sub_8da2h		;8688	cd a2 8d 	. . .
1439  868B C9           	ret			;868b	c9 	.
1440  868C              sub_868ch:
1441  868C 3E F5        	ld a,0f5h		;868c	3e f5 	> .
1442  868E CD F1 8C     	call sub_8cf1h		;868e	cd f1 8c 	. . .
1443  8691 C0           	ret nz			;8691	c0 	.
1444  8692 CD E1 8E     	call sub_8ee1h		;8692	cd e1 8e 	. . .
1445  8695 3E 10        	ld a,010h		;8695	3e 10 	> .
1446  8697 01 03 00     	ld bc,00003h		;8697	01 03 00 	. . .
1447  869A EB           	ex de,hl			;869a	eb 	.
1448  869B C3 8A 8D     	jp sub_8d8ah		;869b	c3 8a 8d 	. . .
1449  869E              sub_869eh:
1450  869E DD 21 D7 78  	ld ix,078d7h		;869e	dd 21 d7 78 	. ! . x
1451  86A2 3E 05        	ld a,005h		;86a2	3e 05 	> .
1452  86A4              l86a4h:
1453  86A4 F5           	push af			;86a4	f5 	.
1454  86A5 CD B2 86     	call sub_86b2h		;86a5	cd b2 86 	. . .
1455  86A8 F1           	pop af			;86a8	f1 	.
1456  86A9 01 06 00     	ld bc,00006h		;86a9	01 06 00 	. . .
1457  86AC DD 09        	add ix,bc		;86ac	dd 09 	. .
1458  86AE 3D           	dec a			;86ae	3d 	=
1459  86AF 20 F3        	jr nz,l86a4h		;86af	20 f3 	  .
1460  86B1 C9           	ret			;86b1	c9 	.
1461  86B2              sub_86b2h:
1462  86B2 DD 7E 05     	ld a,(ix+005h)		;86b2	dd 7e 05 	. ~ .
1463  86B5 B7           	or a			;86b5	b7 	.
1464  86B6 C0           	ret nz			;86b6	c0 	.
1465  86B7 DD 7E 00     	ld a,(ix+000h)		;86b7	dd 7e 00 	. ~ .
1466  86BA CD F1 8C     	call sub_8cf1h		;86ba	cd f1 8c 	. . .
1467  86BD C0           	ret nz			;86bd	c0 	.
1468  86BE EB           	ex de,hl			;86be	eb 	.
1469  86BF 3E 09        	ld a,009h		;86bf	3e 09 	> .
1470  86C1 01 06 00     	ld bc,00006h		;86c1	01 06 00 	. . .
1471  86C4 C3 8A 8D     	jp sub_8d8ah		;86c4	c3 8a 8d 	. . .
1472  86C7              sub_86c7h:
1473  86C7 3E 05        	ld a,005h		;86c7	3e 05 	> .
1474  86C9 DD 21 B9 78  	ld ix,078b9h		;86c9	dd 21 b9 78 	. ! . x
1475  86CD              l86cdh:
1476  86CD F5           	push af			;86cd	f5 	.
1477  86CE CD DB 86     	call sub_86dbh		;86ce	cd db 86 	. . .
1478  86D1 F1           	pop af			;86d1	f1 	.
1479  86D2 01 06 00     	ld bc,00006h		;86d2	01 06 00 	. . .
1480  86D5 DD 09        	add ix,bc		;86d5	dd 09 	. .
1481  86D7 3D           	dec a			;86d7	3d 	=
1482  86D8 20 F3        	jr nz,l86cdh		;86d8	20 f3 	  .
1483  86DA C9           	ret			;86da	c9 	.
1484  86DB              sub_86dbh:
1485  86DB DD CB 05 7E  	bit 7,(ix+005h)		;86db	dd cb 05 7e 	. . . ~
1486  86DF C8           	ret z			;86df	c8 	.
1487  86E0 DD 7E 00     	ld a,(ix+000h)		;86e0	dd 7e 00 	. ~ .
1488  86E3 CD F1 8C     	call sub_8cf1h		;86e3	cd f1 8c 	. . .
1489  86E6 C0           	ret nz			;86e6	c0 	.
1490  86E7 CD 7D 8C     	call sub_8c7dh		;86e7	cd 7d 8c 	. } .
1491  86EA 36 00        	ld (hl),000h		;86ea	36 00 	6 .
1492  86EC C9           	ret			;86ec	c9 	.
1493  86ED              sub_86edh:
1494  86ED 3A 35 78     	ld a,(07835h)		;86ed	3a 35 78 	: 5 x
1495  86F0 B7           	or a			;86f0	b7 	.
1496  86F1 C0           	ret nz			;86f1	c0 	.
1497  86F2 3A 00 79     	ld a,(07900h)		;86f2	3a 00 79 	: . y
1498  86F5 FE 35        	cp 035h		;86f5	fe 35 	. 5
1499  86F7 C0           	ret nz			;86f7	c0 	.
1500  86F8 CD D2 83     	call sub_83d2h		;86f8	cd d2 83 	. . .
1501  86FB CB 7F        	bit 7,a		;86fb	cb 7f 	. 
1502  86FD C8           	ret z			;86fd	c8 	.
1503  86FE CB BF        	res 7,a		;86fe	cb bf 	. .
1504  8700 FE 76        	cp 076h		;8700	fe 76 	. v
1505  8702 F8           	ret m			;8702	f8 	.
1506  8703 CD 79 8F     	call sub_8f79h		;8703	cd 79 8f 	. y .
1507  8706 C9           	ret			;8706	c9 	.
1508  8707              sub_8707h:
1509  8707 21 86 AA     	ld hl,0aa86h		;8707	21 86 aa 	! . .
1510  870A 11 87 AA     	ld de,0aa87h		;870a	11 87 aa 	. . .
1511  870D 01 D0 00     	ld bc,000d0h		;870d	01 d0 00 	. . .
1512  8710 36 00        	ld (hl),000h		;8710	36 00 	6 .
1513  8712 ED B0        	ldir		;8712	ed b0 	. .
1514  8714 C9           	ret			;8714	c9 	.
1515  8715              sub_8715h:
1516  8715 DD 21 01 78  	ld ix,07801h		;8715	dd 21 01 78 	. ! . x
1517  8719 3E 04        	ld a,004h		;8719	3e 04 	> .
1518  871B              l871bh:
1519  871B F5           	push af			;871b	f5 	.
1520  871C CD 29 87     	call sub_8729h		;871c	cd 29 87 	. ) .
1521  871F F1           	pop af			;871f	f1 	.
1522  8720 01 04 00     	ld bc,00004h		;8720	01 04 00 	. . .
1523  8723 DD 09        	add ix,bc		;8723	dd 09 	. .
1524  8725 3D           	dec a			;8725	3d 	=
1525  8726 20 F3        	jr nz,l871bh		;8726	20 f3 	  .
1526  8728 C9           	ret			;8728	c9 	.
1527  8729              sub_8729h:
1528  8729 DD CB 03 46  	bit 0,(ix+003h)		;8729	dd cb 03 46 	. . . F
1529  872D C8           	ret z			;872d	c8 	.
1530  872E CD 45 7E     	call sub_7e45h		;872e	cd 45 7e 	. E ~
1531  8731 21 DF A3     	ld hl,la3dfh		;8731	21 df a3 	! . .
1532  8734 11 1C 00     	ld de,0001ch		;8734	11 1c 00 	. . .
1533  8737 28 01        	jr z,l873ah		;8737	28 01 	( .
1534  8739 19           	add hl,de			;8739	19 	.
1535  873A              l873ah:
1536  873A 11 0E 00     	ld de,0000eh		;873a	11 0e 00 	. . .
1537  873D DD CB 03 4E  	bit 1,(ix+003h)		;873d	dd cb 03 4e 	. . . N
1538  8741 28 01        	jr z,l8744h		;8741	28 01 	( .
1539  8743 19           	add hl,de			;8743	19 	.
1540  8744              l8744h:
1541  8744 E5           	push hl			;8744	e5 	.
1542  8745 DD 7E 00     	ld a,(ix+000h)		;8745	dd 7e 00 	. ~ .
1543  8748 CD F1 8C     	call sub_8cf1h		;8748	cd f1 8c 	. . .
1544  874B D1           	pop de			;874b	d1 	.
1545  874C C0           	ret nz			;874c	c0 	.
1546  874D 01 58 00     	ld bc,00058h		;874d	01 58 00 	. X .
1547  8750 09           	add hl,bc			;8750	09 	.
1548  8751 EB           	ex de,hl			;8751	eb 	.
1549  8752 01 02 00     	ld bc,00002h		;8752	01 02 00 	. . .
1550  8755 3E 07        	ld a,007h		;8755	3e 07 	> .
1551  8757 CD 91 8D     	call sub_8d91h		;8757	cd 91 8d 	. . .
1552  875A C9           	ret			;875a	c9 	.
1553  875B              sub_875bh:
1554  875B DD 21 01 78  	ld ix,07801h		;875b	dd 21 01 78 	. ! . x
1555  875F 3E 04        	ld a,004h		;875f	3e 04 	> .
1556  8761              l8761h:
1557  8761 F5           	push af			;8761	f5 	.
1558  8762 CD 6F 87     	call sub_876fh		;8762	cd 6f 87 	. o .
1559  8765 F1           	pop af			;8765	f1 	.
1560  8766 01 04 00     	ld bc,00004h		;8766	01 04 00 	. . .
1561  8769 DD 09        	add ix,bc		;8769	dd 09 	. .
1562  876B 3D           	dec a			;876b	3d 	=
1563  876C 20 F3        	jr nz,l8761h		;876c	20 f3 	  .
1564  876E C9           	ret			;876e	c9 	.
1565  876F              sub_876fh:
1566  876F DD CB 03 46  	bit 0,(ix+003h)		;876f	dd cb 03 46 	. . . F
1567  8773 C8           	ret z			;8773	c8 	.
1568  8774 DD 7E 00     	ld a,(ix+000h)		;8774	dd 7e 00 	. ~ .
1569  8777 CD F1 8C     	call sub_8cf1h		;8777	cd f1 8c 	. . .
1570  877A C0           	ret nz			;877a	c0 	.
1571  877B 01 58 00     	ld bc,00058h		;877b	01 58 00 	. X .
1572  877E 09           	add hl,bc			;877e	09 	.
1573  877F EB           	ex de,hl			;877f	eb 	.
1574  8780 3E 07        	ld a,007h		;8780	3e 07 	> .
1575  8782 01 02 00     	ld bc,00002h		;8782	01 02 00 	. . .
1576  8785 C3 8A 8D     	jp sub_8d8ah		;8785	c3 8a 8d 	. . .
1577  8788              sub_8788h:
1578  8788 DD 21 6A 78  	ld ix,0786ah		;8788	dd 21 6a 78 	. ! j x
1579  878C 3E 06        	ld a,006h		;878c	3e 06 	> .
1580  878E              l878eh:
1581  878E F5           	push af			;878e	f5 	.
1582  878F CD 9C 87     	call sub_879ch		;878f	cd 9c 87 	. . .
1583  8792 01 04 00     	ld bc,00004h		;8792	01 04 00 	. . .
1584  8795 DD 09        	add ix,bc		;8795	dd 09 	. .
1585  8797 F1           	pop af			;8797	f1 	.
1586  8798 3D           	dec a			;8798	3d 	=
1587  8799 20 F3        	jr nz,l878eh		;8799	20 f3 	  .
1588  879B C9           	ret			;879b	c9 	.
1589  879C              sub_879ch:
1590  879C DD 7E 03     	ld a,(ix+003h)		;879c	dd 7e 03 	. ~ .
1591  879F CB 5F        	bit 3,a		;879f	cb 5f 	. _
1592  87A1 C8           	ret z			;87a1	c8 	.
1593  87A2 CD AC 87     	call sub_87ach		;87a2	cd ac 87 	. . .
1594  87A5 CD 19 88     	call sub_8819h		;87a5	cd 19 88 	. . .
1595  87A8 CD 8E 88     	call sub_888eh		;87a8	cd 8e 88 	. . .
1596  87AB C9           	ret			;87ab	c9 	.
1597  87AC              sub_87ach:
1598  87AC 3E 04        	ld a,004h		;87ac	3e 04 	> .
1599  87AE FD 21 9A 78  	ld iy,0789ah		;87ae	fd 21 9a 78 	. ! . x
1600  87B2              l87b2h:
1601  87B2 F5           	push af			;87b2	f5 	.
1602  87B3 CD C0 87     	call sub_87c0h		;87b3	cd c0 87 	. . .
1603  87B6 01 07 00     	ld bc,00007h		;87b6	01 07 00 	. . .
1604  87B9 FD 09        	add iy,bc		;87b9	fd 09 	. .
1605  87BB F1           	pop af			;87bb	f1 	.
1606  87BC 3D           	dec a			;87bc	3d 	=
1607  87BD 20 F3        	jr nz,l87b2h		;87bd	20 f3 	  .
1608  87BF C9           	ret			;87bf	c9 	.
1609  87C0              sub_87c0h:
1610  87C0 FD CB 05 7E  	bit 7,(iy+005h)		;87c0	fd cb 05 7e 	. . . ~
1611  87C4 C8           	ret z			;87c4	c8 	.
1612  87C5 DD 46 00     	ld b,(ix+000h)		;87c5	dd 46 00 	. F .
1613  87C8 FD 7E 00     	ld a,(iy+000h)		;87c8	fd 7e 00 	. ~ .
1614  87CB B8           	cp b			;87cb	b8 	.
1615  87CC 28 05        	jr z,l87d3h		;87cc	28 05 	( .
1616  87CE 3C           	inc a			;87ce	3c 	<
1617  87CF B8           	cp b			;87cf	b8 	.
1618  87D0 28 01        	jr z,l87d3h		;87d0	28 01 	( .
1619  87D2 C9           	ret			;87d2	c9 	.
1620  87D3              l87d3h:
1621  87D3 DD 4E 01     	ld c,(ix+001h)		;87d3	dd 4e 01 	. N .
1622  87D6 FD 7E 01     	ld a,(iy+001h)		;87d6	fd 7e 01 	. ~ .
1623  87D9 C6 08        	add a,008h		;87d9	c6 08 	. .
1624  87DB 06 09        	ld b,009h		;87db	06 09 	. .
1625  87DD              l87ddh:
1626  87DD B9           	cp c			;87dd	b9 	.
1627  87DE 28 04        	jr z,l87e4h		;87de	28 04 	( .
1628  87E0 3D           	dec a			;87e0	3d 	=
1629  87E1 10 FA        	djnz l87ddh		;87e1	10 fa 	. .
1630  87E3 C9           	ret			;87e3	c9 	.
1631  87E4              l87e4h:
1632  87E4 DD 36 03 00  	ld (ix+003h),000h		;87e4	dd 36 03 00 	. 6 . .
1633  87E8 FD 7E 01     	ld a,(iy+001h)		;87e8	fd 7e 01 	. ~ .
1634  87EB C6 08        	add a,008h		;87eb	c6 08 	. .
1635  87ED 4F           	ld c,a			;87ed	4f 	O
1636  87EE FD 46 00     	ld b,(iy+000h)		;87ee	fd 46 00 	. F .
1637  87F1 16 80        	ld d,080h		;87f1	16 80 	. .
1638  87F3 CD C3 89     	call sub_89c3h		;87f3	cd c3 89 	. . .
1639  87F6 FD 7E 06     	ld a,(iy+006h)		;87f6	fd 7e 06 	. ~ .
1640  87F9 FD 77 00     	ld (iy+000h),a		;87f9	fd 77 00 	. w .
1641  87FC AF           	xor a			;87fc	af 	.
1642  87FD FD 77 01     	ld (iy+001h),a		;87fd	fd 77 01 	. w .
1643  8800 FD 77 02     	ld (iy+002h),a		;8800	fd 77 02 	. w .
1644  8803 FD 77 03     	ld (iy+003h),a		;8803	fd 77 03 	. w .
1645  8806 FD 77 04     	ld (iy+004h),a		;8806	fd 77 04 	. w .
1646  8809 ED 5F        	ld a,r		;8809	ed 5f 	. _
1647  880B E6 3F        	and 03fh		;880b	e6 3f 	. ?
1648  880D F6 07        	or 007h		;880d	f6 07 	. .
1649  880F FD 77 05     	ld (iy+005h),a		;880f	fd 77 05 	. w .
1650  8812 CD 85 8F     	call sub_8f85h		;8812	cd 85 8f 	. . .
1651  8815 CD 85 8F     	call sub_8f85h		;8815	cd 85 8f 	. . .
1652  8818 C9           	ret			;8818	c9 	.
1653  8819              sub_8819h:
1654  8819 3E 05        	ld a,005h		;8819	3e 05 	> .
1655  881B FD 21 D7 78  	ld iy,078d7h		;881b	fd 21 d7 78 	. ! . x
1656  881F              l881fh:
1657  881F F5           	push af			;881f	f5 	.
1658  8820 CD 2D 88     	call sub_882dh		;8820	cd 2d 88 	. - .
1659  8823 01 06 00     	ld bc,00006h		;8823	01 06 00 	. . .
1660  8826 FD 09        	add iy,bc		;8826	fd 09 	. .
1661  8828 F1           	pop af			;8828	f1 	.
1662  8829 3D           	dec a			;8829	3d 	=
1663  882A 20 F3        	jr nz,l881fh		;882a	20 f3 	  .
1664  882C C9           	ret			;882c	c9 	.
1665  882D              sub_882dh:
1666  882D FD 7E 05     	ld a,(iy+005h)		;882d	fd 7e 05 	. ~ .
1667  8830 E6 3F        	and 03fh		;8830	e6 3f 	. ?
1668  8832 C0           	ret nz			;8832	c0 	.
1669  8833 DD 4E 00     	ld c,(ix+000h)		;8833	dd 4e 00 	. N .
1670  8836 FD 7E 00     	ld a,(iy+000h)		;8836	fd 7e 00 	. ~ .
1671  8839 06 06        	ld b,006h		;8839	06 06 	. .
1672  883B              l883bh:
1673  883B B9           	cp c			;883b	b9 	.
1674  883C 28 04        	jr z,l8842h		;883c	28 04 	( .
1675  883E 3C           	inc a			;883e	3c 	<
1676  883F 10 FA        	djnz l883bh		;883f	10 fa 	. .
1677  8841 C9           	ret			;8841	c9 	.
1678  8842              l8842h:
1679  8842 DD 7E 01     	ld a,(ix+001h)		;8842	dd 7e 01 	. ~ .
1680  8845 FE 09        	cp 009h		;8845	fe 09 	. .
1681  8847 F0           	ret p			;8847	f0 	.
1682  8848 DD 46 00     	ld b,(ix+000h)		;8848	dd 46 00 	. F .
1683  884B DD 4E 01     	ld c,(ix+001h)		;884b	dd 4e 01 	. N .
1684  884E 16 40        	ld d,040h		;884e	16 40 	. @
1685  8850 CD C3 89     	call sub_89c3h		;8850	cd c3 89 	. . .
1686  8853 DD 36 03 00  	ld (ix+003h),000h		;8853	dd 36 03 00 	. 6 . .
1687  8857 FD 46 00     	ld b,(iy+000h)		;8857	fd 46 00 	. F .
1688  885A 0E 06        	ld c,006h		;885a	0e 06 	. .
1689  885C 16 80        	ld d,080h		;885c	16 80 	. .
1690  885E CD C3 89     	call sub_89c3h		;885e	cd c3 89 	. . .
1691  8861 FD 7E 01     	ld a,(iy+001h)		;8861	fd 7e 01 	. ~ .
1692  8864 06 02        	ld b,002h		;8864	06 02 	. .
1693  8866 FE 01        	cp 001h		;8866	fe 01 	. .
1694  8868 28 14        	jr z,l887eh		;8868	28 14 	( .
1695  886A 06 3C        	ld b,03ch		;886a	06 3c 	. <
1696  886C FE 31        	cp 031h		;886c	fe 31 	. 1
1697  886E 28 0E        	jr z,l887eh		;886e	28 0e 	( .
1698  8870 06 73        	ld b,073h		;8870	06 73 	. s
1699  8872 FE 68        	cp 068h		;8872	fe 68 	. h
1700  8874 28 08        	jr z,l887eh		;8874	28 08 	( .
1701  8876 06 A6        	ld b,0a6h		;8876	06 a6 	. .
1702  8878 FE 9B        	cp 09bh		;8878	fe 9b 	. .
1703  887A 28 02        	jr z,l887eh		;887a	28 02 	( .
1704  887C 06 ED        	ld b,0edh		;887c	06 ed 	. .
1705  887E              l887eh:
1706  887E FD 70 00     	ld (iy+000h),b		;887e	fd 70 00 	. p .
1707  8881 ED 5F        	ld a,r		;8881	ed 5f 	. _
1708  8883 E6 C0        	and 0c0h		;8883	e6 c0 	. .
1709  8885 F6 3F        	or 03fh		;8885	f6 3f 	. ?
1710  8887 FD 77 05     	ld (iy+005h),a		;8887	fd 77 05 	. w .
1711  888A CD 85 8F     	call sub_8f85h		;888a	cd 85 8f 	. . .
1712  888D C9           	ret			;888d	c9 	.
1713  888E              sub_888eh:
1714  888E 3E 04        	ld a,004h		;888e	3e 04 	> .
1715  8890 FD 21 8E 78  	ld iy,0788eh		;8890	fd 21 8e 78 	. ! . x
1716  8894              l8894h:
1717  8894 F5           	push af			;8894	f5 	.
1718  8895 CD A2 88     	call sub_88a2h		;8895	cd a2 88 	. . .
1719  8898 01 06 00     	ld bc,00006h		;8898	01 06 00 	. . .
1720  889B FD 09        	add iy,bc		;889b	fd 09 	. .
1721  889D F1           	pop af			;889d	f1 	.
1722  889E 3D           	dec a			;889e	3d 	=
1723  889F 20 F3        	jr nz,l8894h		;889f	20 f3 	  .
1724  88A1 C9           	ret			;88a1	c9 	.
1725  88A2              sub_88a2h:
1726  88A2 FD 7E 05     	ld a,(iy+005h)		;88a2	fd 7e 05 	. ~ .
1727  88A5 B7           	or a			;88a5	b7 	.
1728  88A6 C8           	ret z			;88a6	c8 	.
1729  88A7 DD 7E 00     	ld a,(ix+000h)		;88a7	dd 7e 00 	. ~ .
1730  88AA FD 4E 00     	ld c,(iy+000h)		;88aa	fd 4e 00 	. N .
1731  88AD B9           	cp c			;88ad	b9 	.
1732  88AE 28 07        	jr z,l88b7h		;88ae	28 07 	( .
1733  88B0 0C           	inc c			;88b0	0c 	.
1734  88B1 B9           	cp c			;88b1	b9 	.
1735  88B2 28 03        	jr z,l88b7h		;88b2	28 03 	( .
1736  88B4 0C           	inc c			;88b4	0c 	.
1737  88B5 B9           	cp c			;88b5	b9 	.
1738  88B6 C0           	ret nz			;88b6	c0 	.
1739  88B7              l88b7h:
1740  88B7 FD 7E 01     	ld a,(iy+001h)		;88b7	fd 7e 01 	. ~ .
1741  88BA C6 08        	add a,008h		;88ba	c6 08 	. .
1742  88BC DD 4E 01     	ld c,(ix+001h)		;88bc	dd 4e 01 	. N .
1743  88BF B9           	cp c			;88bf	b9 	.
1744  88C0 28 07        	jr z,l88c9h		;88c0	28 07 	( .
1745  88C2 3D           	dec a			;88c2	3d 	=
1746  88C3 B9           	cp c			;88c3	b9 	.
1747  88C4 28 03        	jr z,l88c9h		;88c4	28 03 	( .
1748  88C6 3D           	dec a			;88c6	3d 	=
1749  88C7 B9           	cp c			;88c7	b9 	.
1750  88C8 C0           	ret nz			;88c8	c0 	.
1751  88C9              l88c9h:
1752  88C9 C6 03        	add a,003h		;88c9	c6 03 	. .
1753  88CB FD 46 00     	ld b,(iy+000h)		;88cb	fd 46 00 	. F .
1754  88CE 4F           	ld c,a			;88ce	4f 	O
1755  88CF 16 80        	ld d,080h		;88cf	16 80 	. .
1756  88D1 CD C3 89     	call sub_89c3h		;88d1	cd c3 89 	. . .
1757  88D4 FD 36 05 00  	ld (iy+005h),000h		;88d4	fd 36 05 00 	. 6 . .
1758  88D8 DD 36 03 00  	ld (ix+003h),000h		;88d8	dd 36 03 00 	. 6 . .
1759  88DC CD 85 8F     	call sub_8f85h		;88dc	cd 85 8f 	. . .
1760  88DF CD 85 8F     	call sub_8f85h		;88df	cd 85 8f 	. . .
1761  88E2 CD 85 8F     	call sub_8f85h		;88e2	cd 85 8f 	. . .
1762  88E5 C9           	ret			;88e5	c9 	.
1763  88E6              sub_88e6h:
1764  88E6 3A 35 78     	ld a,(07835h)		;88e6	3a 35 78 	: 5 x
1765  88E9 B7           	or a			;88e9	b7 	.
1766  88EA C0           	ret nz			;88ea	c0 	.
1767  88EB E5           	push hl			;88eb	e5 	.
1768  88EC D5           	push de			;88ec	d5 	.
1769  88ED 06 09        	ld b,009h		;88ed	06 09 	. .
1770  88EF              l88efh:
1771  88EF 0E 06        	ld c,006h		;88ef	0e 06 	. .
1772  88F1              l88f1h:
1773  88F1 7E           	ld a,(hl)			;88f1	7e 	~
1774  88F2 B7           	or a			;88f2	b7 	.
1775  88F3 28 04        	jr z,l88f9h		;88f3	28 04 	( .
1776  88F5 1A           	ld a,(de)			;88f5	1a 	.
1777  88F6 B7           	or a			;88f6	b7 	.
1778  88F7 20 11        	jr nz,l890ah		;88f7	20 11 	  .
1779  88F9              l88f9h:
1780  88F9 23           	inc hl			;88f9	23 	#
1781  88FA 13           	inc de			;88fa	13 	.
1782  88FB 0D           	dec c			;88fb	0d 	.
1783  88FC 20 F3        	jr nz,l88f1h		;88fc	20 f3 	  .
1784  88FE E5           	push hl			;88fe	e5 	.
1785  88FF 21 26 00     	ld hl,00026h		;88ff	21 26 00 	! & .
1786  8902 19           	add hl,de			;8902	19 	.
1787  8903 EB           	ex de,hl			;8903	eb 	.
1788  8904 E1           	pop hl			;8904	e1 	.
1789  8905 10 E8        	djnz l88efh		;8905	10 e8 	. .
1790  8907 D1           	pop de			;8907	d1 	.
1791  8908 E1           	pop hl			;8908	e1 	.
1792  8909 C9           	ret			;8909	c9 	.
1793  890A              l890ah:
1794  890A 3E 0A        	ld a,00ah		;890a	3e 0a 	> .
1795  890C 32 35 78     	ld (07835h),a		;890c	32 35 78 	2 5 x
1796  890F CD CA 8C     	call sub_8ccah		;890f	cd ca 8c 	. . .
1797  8912 CD 7E 8B     	call sub_8b7eh		;8912	cd 7e 8b 	. ~ .
1798  8915 DD 21 9A 78  	ld ix,0789ah		;8915	dd 21 9a 78 	. ! . x
1799  8919 11 07 00     	ld de,00007h		;8919	11 07 00 	. . .
1800  891C 06 04        	ld b,004h		;891c	06 04 	. .
1801  891E              l891eh:
1802  891E CD E1 82     	call l82e1h		;891e	cd e1 82 	. . .
1803  8921 DD 19        	add ix,de		;8921	dd 19 	. .
1804  8923 10 F9        	djnz l891eh		;8923	10 f9 	. .
1805  8925 21 BE 78     	ld hl,078beh		;8925	21 be 78 	! . x
1806  8928 11 06 00     	ld de,00006h		;8928	11 06 00 	. . .
1807  892B 06 05        	ld b,005h		;892b	06 05 	. .
1808  892D              l892dh:
1809  892D 36 7F        	ld (hl),07fh		;892d	36 7f 	6 
1810  892F 19           	add hl,de			;892f	19 	.
1811  8930 10 FB        	djnz l892dh		;8930	10 fb 	. .
1812  8932 AF           	xor a			;8932	af 	.
1813  8933 32 93 78     	ld (07893h),a		;8933	32 93 78 	2 . x
1814  8936 32 99 78     	ld (07899h),a		;8936	32 99 78 	2 . x
1815  8939 CD D2 83     	call sub_83d2h		;8939	cd d2 83 	. . .
1816  893C 47           	ld b,a			;893c	47 	G
1817  893D 3A 00 79     	ld a,(07900h)		;893d	3a 00 79 	: . y
1818  8940 4F           	ld c,a			;8940	4f 	O
1819  8941 3E 3B        	ld a,03bh		;8941	3e 3b 	> ;
1820  8943 91           	sub c			;8943	91 	.
1821  8944 4F           	ld c,a			;8944	4f 	O
1822  8945 04           	inc b			;8945	04 	.
1823  8946 16 80        	ld d,080h		;8946	16 80 	. .
1824  8948 CD C3 89     	call sub_89c3h		;8948	cd c3 89 	. . .
1825  894B D1           	pop de			;894b	d1 	.
1826  894C E1           	pop hl			;894c	e1 	.
1827  894D C9           	ret			;894d	c9 	.
1828  894E              sub_894eh:
1829  894E 21 3E 78     	ld hl,0783eh		;894e	21 3e 78 	! > x
1830  8951 35           	dec (hl)			;8951	35 	5
1831  8952 C0           	ret nz			;8952	c0 	.
1832  8953 36 19        	ld (hl),019h		;8953	36 19 	6 .
1833  8955 DD 21 6A 78  	ld ix,0786ah		;8955	dd 21 6a 78 	. ! j x
1834  8959 3E 06        	ld a,006h		;8959	3e 06 	> .
1835  895B              l895bh:
1836  895B F5           	push af			;895b	f5 	.
1837  895C CD 69 89     	call sub_8969h		;895c	cd 69 89 	. i .
1838  895F 01 04 00     	ld bc,00004h		;895f	01 04 00 	. . .
1839  8962 DD 09        	add ix,bc		;8962	dd 09 	. .
1840  8964 F1           	pop af			;8964	f1 	.
1841  8965 3D           	dec a			;8965	3d 	=
1842  8966 20 F3        	jr nz,l895bh		;8966	20 f3 	  .
1843  8968 C9           	ret			;8968	c9 	.
1844  8969              sub_8969h:
1845  8969 DD CB 03 5E  	bit 3,(ix+003h)		;8969	dd cb 03 5e 	. . . ^
1846  896D C8           	ret z			;896d	c8 	.
1847  896E DD 7E 02     	ld a,(ix+002h)		;896e	dd 7e 02 	. ~ .
1848  8971 3D           	dec a			;8971	3d 	=
1849  8972 DD 77 02     	ld (ix+002h),a		;8972	dd 77 02 	. w .
1850  8975 20 10        	jr nz,l8987h		;8975	20 10 	  .
1851  8977              l8977h:
1852  8977 DD 36 03 00  	ld (ix+003h),000h		;8977	dd 36 03 00 	. 6 . .
1853  897B DD 46 00     	ld b,(ix+000h)		;897b	dd 46 00 	. F .
1854  897E DD 4E 01     	ld c,(ix+001h)		;897e	dd 4e 01 	. N .
1855  8981 16 00        	ld d,000h		;8981	16 00 	. .
1856  8983 CD C3 89     	call sub_89c3h		;8983	cd c3 89 	. . .
1857  8986 C9           	ret			;8986	c9 	.
1858  8987              l8987h:
1859  8987 DD 7E 03     	ld a,(ix+003h)		;8987	dd 7e 03 	. ~ .
1860  898A E6 03        	and 003h		;898a	e6 03 	. .
1861  898C 28 1D        	jr z,l89abh		;898c	28 1d 	( .
1862  898E FE 01        	cp 001h		;898e	fe 01 	. .
1863  8990 28 06        	jr z,l8998h		;8990	28 06 	( .
1864  8992 DD 35 01     	dec (ix+001h)		;8992	dd 35 01 	. 5 .
1865  8995 28 E0        	jr z,l8977h		;8995	28 e0 	( .
1866  8997 C9           	ret			;8997	c9 	.
1867  8998              l8998h:
1868  8998 DD CB 03 56  	bit 2,(ix+003h)		;8998	dd cb 03 56 	. . . V
1869  899C 20 05        	jr nz,l89a3h		;899c	20 05 	  .
1870  899E DD CB 03 D6  	set 2,(ix+003h)		;899e	dd cb 03 d6 	. . . .
1871  89A2 C9           	ret			;89a2	c9 	.
1872  89A3              l89a3h:
1873  89A3 DD CB 03 96  	res 2,(ix+003h)		;89a3	dd cb 03 96 	. . . .
1874  89A7 DD 34 00     	inc (ix+000h)		;89a7	dd 34 00 	. 4 .
1875  89AA C9           	ret			;89aa	c9 	.
1876  89AB              l89abh:
1877  89AB DD CB 03 56  	bit 2,(ix+003h)		;89ab	dd cb 03 56 	. . . V
1878  89AF 28 05        	jr z,l89b6h		;89af	28 05 	( .
1879  89B1 DD CB 03 96  	res 2,(ix+003h)		;89b1	dd cb 03 96 	. . . .
1880  89B5 C9           	ret			;89b5	c9 	.
1881  89B6              l89b6h:
1882  89B6 DD 7E 00     	ld a,(ix+000h)		;89b6	dd 7e 00 	. ~ .
1883  89B9 B7           	or a			;89b9	b7 	.
1884  89BA C8           	ret z			;89ba	c8 	.
1885  89BB DD 35 00     	dec (ix+000h)		;89bb	dd 35 00 	. 5 .
1886  89BE DD CB 03 D6  	set 2,(ix+003h)		;89be	dd cb 03 d6 	. . . .
1887  89C2 C9           	ret			;89c2	c9 	.
1888  89C3              sub_89c3h:
1889  89C3 00           	nop			;89c3	00 	.
1890  89C4 3E 0E        	ld a,00eh		;89c4	3e 0e 	> .
1891  89C6 DD E5        	push ix		;89c6	dd e5 	. .
1892  89C8 DD 21 40 78  	ld ix,07840h		;89c8	dd 21 40 78 	. ! @ x
1893  89CC              l89cch:
1894  89CC F5           	push af			;89cc	f5 	.
1895  89CD CD DD 89     	call sub_89ddh		;89cd	cd dd 89 	. . .
1896  89D0 DD 23        	inc ix		;89d0	dd 23 	. #
1897  89D2 DD 23        	inc ix		;89d2	dd 23 	. #
1898  89D4 DD 23        	inc ix		;89d4	dd 23 	. #
1899  89D6 F1           	pop af			;89d6	f1 	.
1900  89D7 3D           	dec a			;89d7	3d 	=
1901  89D8 20 F2        	jr nz,l89cch		;89d8	20 f2 	  .
1902  89DA DD E1        	pop ix		;89da	dd e1 	. .
1903  89DC C9           	ret			;89dc	c9 	.
1904  89DD              sub_89ddh:
1905  89DD DD 7E 02     	ld a,(ix+002h)		;89dd	dd 7e 02 	. ~ .
1906  89E0 B7           	or a			;89e0	b7 	.
1907  89E1 C0           	ret nz			;89e1	c0 	.
1908  89E2 DD 70 00     	ld (ix+000h),b		;89e2	dd 70 00 	. p .
1909  89E5 DD 71 01     	ld (ix+001h),c		;89e5	dd 71 01 	. q .
1910  89E8 3E 02        	ld a,002h		;89e8	3e 02 	> .
1911  89EA B2           	or d			;89ea	b2 	.
1912  89EB DD 77 02     	ld (ix+002h),a		;89eb	dd 77 02 	. w .
1913  89EE 7A           	ld a,d			;89ee	7a 	z
1914  89EF 07           	rlca			;89ef	07 	.
1915  89F0 07           	rlca			;89f0	07 	.
1916  89F1 E6 03        	and 003h		;89f1	e6 03 	. .
1917  89F3 3C           	inc a			;89f3	3c 	<
1918  89F4 CD 41 8F     	call SND_PLAY		; play one of Sound (1..4)									;89f4	cd 41 8f
1919  89F7 E1           	pop hl			;89f7	e1 	.
1920  89F8 E1           	pop hl			;89f8	e1 	.
1921  89F9 DD E1        	pop ix		;89f9	dd e1 	. .
1922  89FB C9           	ret			;89fb	c9 	.
1923  89FC              sub_89fch:
1924  89FC 00           	nop			;89fc	00 	.
1925  89FD 21 37 78     	ld hl,07837h		;89fd	21 37 78 	! 7 x
1926  8A00 35           	dec (hl)			;8a00	35 	5
1927  8A01 C0           	ret nz			;8a01	c0 	.
1928  8A02 06 0E        	ld b,00eh		;8a02	06 0e 	. .
1929  8A04 DD 21 40 78  	ld ix,07840h		;8a04	dd 21 40 78 	. ! @ x
1930  8A08              l8a08h:
1931  8A08 DD 7E 02     	ld a,(ix+002h)		;8a08	dd 7e 02 	. ~ .
1932  8A0B F5           	push af			;8a0b	f5 	.
1933  8A0C E6 C0        	and 0c0h		;8a0c	e6 c0 	. .
1934  8A0E 4F           	ld c,a			;8a0e	4f 	O
1935  8A0F F1           	pop af			;8a0f	f1 	.
1936  8A10 E6 3F        	and 03fh		;8a10	e6 3f 	. ?
1937  8A12 28 09        	jr z,l8a1dh		;8a12	28 09 	( .
1938  8A14 3D           	dec a			;8a14	3d 	=
1939  8A15 20 02        	jr nz,l8a19h		;8a15	20 02 	  .
1940  8A17 0E 00        	ld c,000h		;8a17	0e 00 	. .
1941  8A19              l8a19h:
1942  8A19 B1           	or c			;8a19	b1 	.
1943  8A1A DD 77 02     	ld (ix+002h),a		;8a1a	dd 77 02 	. w .
1944  8A1D              l8a1dh:
1945  8A1D DD 23        	inc ix		;8a1d	dd 23 	. #
1946  8A1F DD 23        	inc ix		;8a1f	dd 23 	. #
1947  8A21 DD 23        	inc ix		;8a21	dd 23 	. #
1948  8A23 10 E3        	djnz l8a08h		;8a23	10 e3 	. .
1949  8A25 C9           	ret			;8a25	c9 	.
1950  8A26              sub_8a26h:
1951  8A26 3E 0E        	ld a,00eh		;8a26	3e 0e 	> .
1952  8A28 DD 21 40 78  	ld ix,07840h		;8a28	dd 21 40 78 	. ! @ x
1953  8A2C              l8a2ch:
1954  8A2C F5           	push af			;8a2c	f5 	.
1955  8A2D CD 3B 8A     	call sub_8a3bh		;8a2d	cd 3b 8a 	. ; .
1956  8A30 DD 23        	inc ix		;8a30	dd 23 	. #
1957  8A32 DD 23        	inc ix		;8a32	dd 23 	. #
1958  8A34 DD 23        	inc ix		;8a34	dd 23 	. #
1959  8A36 F1           	pop af			;8a36	f1 	.
1960  8A37 3D           	dec a			;8a37	3d 	=
1961  8A38 20 F2        	jr nz,l8a2ch		;8a38	20 f2 	  .
1962  8A3A C9           	ret			;8a3a	c9 	.
1963  8A3B              sub_8a3bh:
1964  8A3B DD 7E 02     	ld a,(ix+002h)		;8a3b	dd 7e 02 	. ~ .
1965  8A3E E6 3F        	and 03fh		;8a3e	e6 3f 	. ?
1966  8A40 C8           	ret z			;8a40	c8 	.
1967  8A41 CD 90 8A     	call sub_8a90h		;8a41	cd 90 8a 	. . .
1968  8A44 C0           	ret nz			;8a44	c0 	.
1969  8A45 E5           	push hl			;8a45	e5 	.
1970  8A46 06 04        	ld b,004h		;8a46	06 04 	. .
1971  8A48 0E 02        	ld c,002h		;8a48	0e 02 	. .
1972  8A4A 21 93 A9     	ld hl,la993h		;8a4a	21 93 a9 	! . .
1973  8A4D DD 7E 02     	ld a,(ix+002h)		;8a4d	dd 7e 02 	. ~ .
1974  8A50 11 08 00     	ld de,00008h		;8a50	11 08 00 	. . .
1975  8A53 07           	rlca			;8a53	07 	.
1976  8A54 07           	rlca			;8a54	07 	.
1977  8A55 E6 03        	and 003h		;8a55	e6 03 	. .
1978  8A57 28 0A        	jr z,l8a63h		;8a57	28 0a 	( .
1979  8A59 19           	add hl,de			;8a59	19 	.
1980  8A5A FE 01        	cp 001h		;8a5a	fe 01 	. .
1981  8A5C 28 05        	jr z,l8a63h		;8a5c	28 05 	( .
1982  8A5E 19           	add hl,de			;8a5e	19 	.
1983  8A5F 06 08        	ld b,008h		;8a5f	06 08 	. .
1984  8A61 0E 04        	ld c,004h		;8a61	0e 04 	. .
1985  8A63              l8a63h:
1986  8A63 D1           	pop de			;8a63	d1 	.
1987  8A64 CD A2 8D     	call sub_8da2h		;8a64	cd a2 8d 	. . .
1988  8A67 C9           	ret			;8a67	c9 	.
1989  8A68              sub_8a68h:
1990  8A68 3E 0E        	ld a,00eh		;8a68	3e 0e 	> .
1991  8A6A DD 21 40 78  	ld ix,07840h		;8a6a	dd 21 40 78 	. ! @ x
1992  8A6E              l8a6eh:
1993  8A6E F5           	push af			;8a6e	f5 	.
1994  8A6F CD 7D 8A     	call sub_8a7dh		;8a6f	cd 7d 8a 	. } .
1995  8A72 DD 23        	inc ix		;8a72	dd 23 	. #
1996  8A74 DD 23        	inc ix		;8a74	dd 23 	. #
1997  8A76 DD 23        	inc ix		;8a76	dd 23 	. #
1998  8A78 F1           	pop af			;8a78	f1 	.
1999  8A79 3D           	dec a			;8a79	3d 	=
2000  8A7A 20 F2        	jr nz,l8a6eh		;8a7a	20 f2 	  .
2001  8A7C C9           	ret			;8a7c	c9 	.
2002  8A7D              sub_8a7dh:
2003  8A7D DD 7E 02     	ld a,(ix+002h)		;8a7d	dd 7e 02 	. ~ .
2004  8A80 E6 3F        	and 03fh		;8a80	e6 3f 	. ?
2005  8A82 C8           	ret z			;8a82	c8 	.
2006  8A83 CD 90 8A     	call sub_8a90h		;8a83	cd 90 8a 	. . .
2007  8A86 C0           	ret nz			;8a86	c0 	.
2008  8A87 EB           	ex de,hl			;8a87	eb 	.
2009  8A88 01 04 00     	ld bc,00004h		;8a88	01 04 00 	. . .
2010  8A8B 3E 08        	ld a,008h		;8a8b	3e 08 	> .
2011  8A8D C3 8A 8D     	jp sub_8d8ah		;8a8d	c3 8a 8d 	. . .
2012  8A90              sub_8a90h:
2013  8A90 DD 6E 00     	ld l,(ix+000h)		;8a90	dd 6e 00 	. n .
2014  8A93 26 00        	ld h,000h		;8a93	26 00 	& .
2015  8A95 3A 08 79     	ld a,(07908h)		;8a95	3a 08 79 	: . y
2016  8A98 D6 06        	sub 006h		;8a98	d6 06 	. .
2017  8A9A 5F           	ld e,a			;8a9a	5f 	_
2018  8A9B 16 00        	ld d,000h		;8a9b	16 00 	. .
2019  8A9D B7           	or a			;8a9d	b7 	.
2020  8A9E ED 52        	sbc hl,de		;8a9e	ed 52 	. R
2021  8AA0 FA BF 8A     	jp m,l8abfh		;8aa0	fa bf 8a 	. . .
2022  8AA3 EB           	ex de,hl			;8aa3	eb 	.
2023  8AA4 21 25 00     	ld hl,00025h		;8aa4	21 25 00 	! % .
2024  8AA7 B7           	or a			;8aa7	b7 	.
2025  8AA8 ED 52        	sbc hl,de		;8aa8	ed 52 	. R
2026  8AAA FA BF 8A     	jp m,l8abfh		;8aaa	fa bf 8a 	. . .
2027  8AAD 21 A4 B4     	ld hl,0b4a4h		;8aad	21 a4 b4 	! . .
2028  8AB0 19           	add hl,de			;8ab0	19 	.
2029  8AB1 11 2C 00     	ld de,0002ch		;8ab1	11 2c 00 	. , .
2030  8AB4 DD 7E 01     	ld a,(ix+001h)		;8ab4	dd 7e 01 	. ~ .
2031  8AB7 3C           	inc a			;8ab7	3c 	<
2032  8AB8              l8ab8h:
2033  8AB8 3D           	dec a			;8ab8	3d 	=
2034  8AB9 C8           	ret z			;8ab9	c8 	.
2035  8ABA B7           	or a			;8aba	b7 	.
2036  8ABB ED 52        	sbc hl,de		;8abb	ed 52 	. R
2037  8ABD 18 F9        	jr l8ab8h		;8abd	18 f9 	. .
2038  8ABF              l8abfh:
2039  8ABF 3E 01        	ld a,001h		;8abf	3e 01 	> .
2040  8AC1 B7           	or a			;8ac1	b7 	.
2041  8AC2 C9           	ret			;8ac2	c9 	.
2042  8AC3              sub_8ac3h:
2043  8AC3 DD 21 6A 78  	ld ix,0786ah		;8ac3	dd 21 6a 78 	. ! j x
2044  8AC7 3E 06        	ld a,006h		;8ac7	3e 06 	> .
2045  8AC9              l8ac9h:
2046  8AC9 F5           	push af			;8ac9	f5 	.
2047  8ACA CD D7 8A     	call sub_8ad7h		;8aca	cd d7 8a 	. . .
2048  8ACD 01 04 00     	ld bc,00004h		;8acd	01 04 00 	. . .
2049  8AD0 DD 09        	add ix,bc		;8ad0	dd 09 	. .
2050  8AD2 F1           	pop af			;8ad2	f1 	.
2051  8AD3 3D           	dec a			;8ad3	3d 	=
2052  8AD4 20 F3        	jr nz,l8ac9h		;8ad4	20 f3 	  .
2053  8AD6 C9           	ret			;8ad6	c9 	.
2054  8AD7              sub_8ad7h:
2055  8AD7 DD CB 03 5E  	bit 3,(ix+003h)		;8ad7	dd cb 03 5e 	. . . ^
2056  8ADB C8           	ret z			;8adb	c8 	.
2057  8ADC DD 7E 00     	ld a,(ix+000h)		;8adc	dd 7e 00 	. ~ .
2058  8ADF CD F1 8C     	call sub_8cf1h		;8adf	cd f1 8c 	. . .
2059  8AE2 C0           	ret nz			;8ae2	c0 	.
2060  8AE3 CD 9C 8C     	call sub_8c9ch		;8ae3	cd 9c 8c 	. . .
2061  8AE6 11 60 01     	ld de,00160h		;8ae6	11 60 01 	. ` .
2062  8AE9 19           	add hl,de			;8ae9	19 	.
2063  8AEA 7E           	ld a,(hl)			;8aea	7e 	~
2064  8AEB B7           	or a			;8aeb	b7 	.
2065  8AEC 20 18        	jr nz,l8b06h		;8aec	20 18 	  .
2066  8AEE 06 05        	ld b,005h		;8aee	06 05 	. .
2067  8AF0 DD 7E 03     	ld a,(ix+003h)		;8af0	dd 7e 03 	. ~ .
2068  8AF3 E6 03        	and 003h		;8af3	e6 03 	. .
2069  8AF5 FE 02        	cp 002h		;8af5	fe 02 	. .
2070  8AF7 78           	ld a,b			;8af7	78 	x
2071  8AF8 28 0A        	jr z,l8b04h		;8af8	28 0a 	( .
2072  8AFA DD CB 03 56  	bit 2,(ix+003h)		;8afa	dd cb 03 56 	. . . V
2073  8AFE 20 04        	jr nz,l8b04h		;8afe	20 04 	  .
2074  8B00 07           	rlca			;8b00	07 	.
2075  8B01 07           	rlca			;8b01	07 	.
2076  8B02 07           	rlca			;8b02	07 	.
2077  8B03 07           	rlca			;8b03	07 	.
2078  8B04              l8b04h:
2079  8B04 77           	ld (hl),a			;8b04	77 	w
2080  8B05 C9           	ret			;8b05	c9 	.
2081  8B06              l8b06h:
2082  8B06 DD 46 00     	ld b,(ix+000h)		;8b06	dd 46 00 	. F .
2083  8B09 DD 4E 01     	ld c,(ix+001h)		;8b09	dd 4e 01 	. N .
2084  8B0C 16 40        	ld d,040h		;8b0c	16 40 	. @
2085  8B0E CD C3 89     	call sub_89c3h		;8b0e	cd c3 89 	. . .
2086  8B11 DD 36 03 00  	ld (ix+003h),000h		;8b11	dd 36 03 00 	. 6 . .
2087  8B15 C9           	ret			;8b15	c9 	.
2088  8B16              sub_8b16h:
2089  8B16 DD 21 6A 78  	ld ix,0786ah		;8b16	dd 21 6a 78 	. ! j x
2090  8B1A 3E 06        	ld a,006h		;8b1a	3e 06 	> .
2091  8B1C              l8b1ch:
2092  8B1C F5           	push af			;8b1c	f5 	.
2093  8B1D CD 2A 8B     	call sub_8b2ah		;8b1d	cd 2a 8b 	. * .
2094  8B20 01 04 00     	ld bc,00004h		;8b20	01 04 00 	. . .
2095  8B23 DD 09        	add ix,bc		;8b23	dd 09 	. .
2096  8B25 F1           	pop af			;8b25	f1 	.
2097  8B26 3D           	dec a			;8b26	3d 	=
2098  8B27 20 F3        	jr nz,l8b1ch		;8b27	20 f3 	  .
2099  8B29 C9           	ret			;8b29	c9 	.
2100  8B2A              sub_8b2ah:
2101  8B2A DD CB 03 5E  	bit 3,(ix+003h)		;8b2a	dd cb 03 5e 	. . . ^
2102  8B2E C8           	ret z			;8b2e	c8 	.
2103  8B2F DD 7E 00     	ld a,(ix+000h)		;8b2f	dd 7e 00 	. ~ .
2104  8B32 CD F1 8C     	call sub_8cf1h		;8b32	cd f1 8c 	. . .
2105  8B35 C0           	ret nz			;8b35	c0 	.
2106  8B36 CD 9C 8C     	call sub_8c9ch		;8b36	cd 9c 8c 	. . .
2107  8B39 11 60 01     	ld de,00160h		;8b39	11 60 01 	. ` .
2108  8B3C 19           	add hl,de			;8b3c	19 	.
2109  8B3D 36 00        	ld (hl),000h		;8b3d	36 00 	6 .
2110  8B3F C9           	ret			;8b3f	c9 	.
2111  8B40              sub_8b40h:
2112  8B40 DD 21 8E 78  	ld ix,0788eh		;8b40	dd 21 8e 78 	. ! . x
2113  8B44 CD 4F 8B     	call sub_8b4fh		;8b44	cd 4f 8b 	. O .
2114  8B47 DD 21 94 78  	ld ix,07894h		;8b47	dd 21 94 78 	. ! . x
2115  8B4B CD 4F 8B     	call sub_8b4fh		;8b4b	cd 4f 8b 	. O .
2116  8B4E C9           	ret			;8b4e	c9 	.
2117  8B4F              sub_8b4fh:
2118  8B4F DD CB 05 46  	bit 0,(ix+005h)		;8b4f	dd cb 05 46 	. . . F
2119  8B53 C8           	ret z			;8b53	c8 	.
2120  8B54 DD 7E 00     	ld a,(ix+000h)		;8b54	dd 7e 00 	. ~ .
2121  8B57 CD F1 8C     	call sub_8cf1h		;8b57	cd f1 8c 	. . .
2122  8B5A C0           	ret nz			;8b5a	c0 	.
2123  8B5B CD 9C 8C     	call sub_8c9ch		;8b5b	cd 9c 8c 	. . .
2124  8B5E EB           	ex de,hl			;8b5e	eb 	.
2125  8B5F 21 63 A9     	ld hl,la963h		;8b5f	21 63 a9 	! c .
2126  8B62 01 18 00     	ld bc,00018h		;8b62	01 18 00 	. . .
2127  8B65 DD CB 04 46  	bit 0,(ix+004h)		;8b65	dd cb 04 46 	. . . F
2128  8B69 28 01        	jr z,l8b6ch		;8b69	28 01 	( .
2129  8B6B 09           	add hl,bc			;8b6b	09 	.
2130  8B6C              l8b6ch:
2131  8B6C 01 0C 00     	ld bc,0000ch		;8b6c	01 0c 00 	. . .
2132  8B6F DD CB 03 46  	bit 0,(ix+003h)		;8b6f	dd cb 03 46 	. . . F
2133  8B73 28 01        	jr z,l8b76h		;8b73	28 01 	( .
2134  8B75 09           	add hl,bc			;8b75	09 	.
2135  8B76              l8b76h:
2136  8B76 06 03        	ld b,003h		;8b76	06 03 	. .
2137  8B78 0E 04        	ld c,004h		;8b78	0e 04 	. .
2138  8B7A CD A2 8D     	call sub_8da2h		;8b7a	cd a2 8d 	. . .
2139  8B7D C9           	ret			;8b7d	c9 	.
2140  8B7E              sub_8b7eh:
2141  8B7E DD 21 8E 78  	ld ix,0788eh		;8b7e	dd 21 8e 78 	. ! . x
2142  8B82 CD 8D 8B     	call sub_8b8dh		;8b82	cd 8d 8b 	. . .
2143  8B85 DD 21 94 78  	ld ix,07894h		;8b85	dd 21 94 78 	. ! . x
2144  8B89 CD 8D 8B     	call sub_8b8dh		;8b89	cd 8d 8b 	. . .
2145  8B8C C9           	ret			;8b8c	c9 	.
2146  8B8D              sub_8b8dh:
2147  8B8D DD CB 05 46  	bit 0,(ix+005h)		;8b8d	dd cb 05 46 	. . . F
2148  8B91 C8           	ret z			;8b91	c8 	.
2149  8B92 DD 7E 00     	ld a,(ix+000h)		;8b92	dd 7e 00 	. ~ .
2150  8B95 CD F1 8C     	call sub_8cf1h		;8b95	cd f1 8c 	. . .
2151  8B98 C0           	ret nz			;8b98	c0 	.
2152  8B99 CD 9C 8C     	call sub_8c9ch		;8b99	cd 9c 8c 	. . .
2153  8B9C EB           	ex de,hl			;8b9c	eb 	.
2154  8B9D 01 04 00     	ld bc,00004h		;8b9d	01 04 00 	. . .
2155  8BA0 3E 03        	ld a,003h		;8ba0	3e 03 	> .
2156  8BA2 C3 8A 8D     	jp sub_8d8ah		;8ba2	c3 8a 8d 	. . .
2157  8BA5              l8ba5h:
2158  8BA5 00           	nop			;8ba5	00 	.
2159  8BA6              sub_8ba6h:
2160  8BA6 DD 21 82 78  	ld ix,07882h		;8ba6	dd 21 82 78 	. ! . x
2161  8BAA CD B5 8B     	call sub_8bb5h		;8baa	cd b5 8b 	. . .
2162  8BAD DD 21 88 78  	ld ix,07888h		;8bad	dd 21 88 78 	. ! . x
2163  8BB1 CD B5 8B     	call sub_8bb5h		;8bb1	cd b5 8b 	. . .
2164  8BB4 C9           	ret			;8bb4	c9 	.
2165  8BB5              sub_8bb5h:
2166  8BB5 DD CB 05 7E  	bit 7,(ix+005h)		;8bb5	dd cb 05 7e 	. . . ~
2167  8BB9 C8           	ret z			;8bb9	c8 	.
2168  8BBA DD 7E 04     	ld a,(ix+004h)		;8bba	dd 7e 04 	. ~ .
2169  8BBD B7           	or a			;8bbd	b7 	.
2170  8BBE 20 39        	jr nz,l8bf9h		;8bbe	20 39 	  9
2171  8BC0 21 A5 A6     	ld hl,0a6a5h		;8bc0	21 a5 a6 	! . .
2172  8BC3 11 D8 00     	ld de,000d8h		;8bc3	11 d8 00 	. . .
2173  8BC6 DD CB 03 7E  	bit 7,(ix+003h)		;8bc6	dd cb 03 7e 	. . . ~
2174  8BCA 28 01        	jr z,l8bcdh		;8bca	28 01 	( .
2175  8BCC 19           	add hl,de			;8bcc	19 	.
2176  8BCD              l8bcdh:
2177  8BCD 11 6C 00     	ld de,0006ch		;8bcd	11 6c 00 	. l .
2178  8BD0 DD CB 03 6E  	bit 5,(ix+003h)		;8bd0	dd cb 03 6e 	. . . n
2179  8BD4 28 01        	jr z,l8bd7h		;8bd4	28 01 	( .
2180  8BD6 19           	add hl,de			;8bd6	19 	.
2181  8BD7              l8bd7h:
2182  8BD7 11 36 00     	ld de,00036h		;8bd7	11 36 00 	. 6 .
2183  8BDA DD CB 03 76  	bit 6,(ix+003h)		;8bda	dd cb 03 76 	. . . v
2184  8BDE 28 01        	jr z,l8be1h		;8bde	28 01 	( .
2185  8BE0 19           	add hl,de			;8be0	19 	.
2186  8BE1              l8be1h:
2187  8BE1 E5           	push hl			;8be1	e5 	.
2188  8BE2 DD 7E 00     	ld a,(ix+000h)		;8be2	dd 7e 00 	. ~ .
2189  8BE5 CD F1 8C     	call sub_8cf1h		;8be5	cd f1 8c 	. . .
2190  8BE8 20 0D        	jr nz,l8bf7h		;8be8	20 0d 	  .
2191  8BEA CD 9C 8C     	call sub_8c9ch		;8bea	cd 9c 8c 	. . .
2192  8BED EB           	ex de,hl			;8bed	eb 	.
2193  8BEE E1           	pop hl			;8bee	e1 	.
2194  8BEF 06 09        	ld b,009h		;8bef	06 09 	. .
2195  8BF1 0E 06        	ld c,006h		;8bf1	0e 06 	. .
2196  8BF3 CD A2 8D     	call sub_8da2h		;8bf3	cd a2 8d 	. . .
2197  8BF6 C9           	ret			;8bf6	c9 	.
2198  8BF7              l8bf7h:
2199  8BF7 E1           	pop hl			;8bf7	e1 	.
2200  8BF8 C9           	ret			;8bf8	c9 	.
2201  8BF9              l8bf9h:
2202  8BF9 3A A5 8B     	ld a,(l8ba5h)		;8bf9	3a a5 8b 	: . .
2203  8BFC B7           	or a			;8bfc	b7 	.
2204  8BFD C0           	ret nz			;8bfd	c0 	.
2205  8BFE DD 7E 04     	ld a,(ix+004h)		;8bfe	dd 7e 04 	. ~ .
2206  8C01 21 55 A8     	ld hl,la855h		;8c01	21 55 a8 	! U .
2207  8C04 11 36 00     	ld de,00036h		;8c04	11 36 00 	. 6 .
2208  8C07              l8c07h:
2209  8C07 3D           	dec a			;8c07	3d 	=
2210  8C08 28 D7        	jr z,l8be1h		;8c08	28 d7 	( .
2211  8C0A 19           	add hl,de			;8c0a	19 	.
2212  8C0B 18 FA        	jr l8c07h		;8c0b	18 fa 	. .
2213  8C0D              sub_8c0dh:
2214  8C0D 3E 02        	ld a,002h		;8c0d	3e 02 	> .
2215  8C0F DD 21 82 78  	ld ix,07882h		;8c0f	dd 21 82 78 	. ! . x
2216  8C13              l8c13h:
2217  8C13 F5           	push af			;8c13	f5 	.
2218  8C14 CD 21 8C     	call sub_8c21h		;8c14	cd 21 8c 	. ! .
2219  8C17 01 06 00     	ld bc,00006h		;8c17	01 06 00 	. . .
2220  8C1A DD 09        	add ix,bc		;8c1a	dd 09 	. .
2221  8C1C F1           	pop af			;8c1c	f1 	.
2222  8C1D 3D           	dec a			;8c1d	3d 	=
2223  8C1E 20 F3        	jr nz,l8c13h		;8c1e	20 f3 	  .
2224  8C20 C9           	ret			;8c20	c9 	.
2225  8C21              sub_8c21h:
2226  8C21 DD CB 05 7E  	bit 7,(ix+005h)		;8c21	dd cb 05 7e 	. . . ~
2227  8C25 C8           	ret z			;8c25	c8 	.
2228  8C26 DD 7E 00     	ld a,(ix+000h)		;8c26	dd 7e 00 	. ~ .
2229  8C29 CD F1 8C     	call sub_8cf1h		;8c29	cd f1 8c 	. . .
2230  8C2C C0           	ret nz			;8c2c	c0 	.
2231  8C2D CD 9C 8C     	call sub_8c9ch		;8c2d	cd 9c 8c 	. . .
2232  8C30 EB           	ex de,hl			;8c30	eb 	.
2233  8C31 01 06 00     	ld bc,00006h		;8c31	01 06 00 	. . .
2234  8C34 3E 09        	ld a,009h		;8c34	3e 09 	> .
2235  8C36 C3 8A 8D     	jp sub_8d8ah		;8c36	c3 8a 8d 	. . .
2236  8C39              sub_8c39h:
2237  8C39 3E 05        	ld a,005h		;8c39	3e 05 	> .
2238  8C3B DD 21 D7 78  	ld ix,078d7h		;8c3b	dd 21 d7 78 	. ! . x
2239  8C3F              l8c3fh:
2240  8C3F F5           	push af			;8c3f	f5 	.
2241  8C40 CD 16 8D     	call sub_8d16h		;8c40	cd 16 8d 	. . .
2242  8C43 F1           	pop af			;8c43	f1 	.
2243  8C44 01 06 00     	ld bc,00006h		;8c44	01 06 00 	. . .
2244  8C47 DD 09        	add ix,bc		;8c47	dd 09 	. .
2245  8C49 3D           	dec a			;8c49	3d 	=
2246  8C4A 20 F3        	jr nz,l8c3fh		;8c4a	20 f3 	  .
2247  8C4C C9           	ret			;8c4c	c9 	.
2248  8C4D              sub_8c4dh:
2249  8C4D 3E 05        	ld a,005h		;8c4d	3e 05 	> .
2250  8C4F DD 21 B9 78  	ld ix,078b9h		;8c4f	dd 21 b9 78 	. ! . x
2251  8C53              l8c53h:
2252  8C53 F5           	push af			;8c53	f5 	.
2253  8C54 CD 61 8C     	call sub_8c61h		;8c54	cd 61 8c 	. a .
2254  8C57 01 06 00     	ld bc,00006h		;8c57	01 06 00 	. . .
2255  8C5A DD 09        	add ix,bc		;8c5a	dd 09 	. .
2256  8C5C F1           	pop af			;8c5c	f1 	.
2257  8C5D 3D           	dec a			;8c5d	3d 	=
2258  8C5E 20 F3        	jr nz,l8c53h		;8c5e	20 f3 	  .
2259  8C60 C9           	ret			;8c60	c9 	.
2260  8C61              sub_8c61h:
2261  8C61 DD 7E 05     	ld a,(ix+005h)		;8c61	dd 7e 05 	. ~ .
2262  8C64 CB 7F        	bit 7,a		;8c64	cb 7f 	. 
2263  8C66 C8           	ret z			;8c66	c8 	.
2264  8C67 DD 7E 00     	ld a,(ix+000h)		;8c67	dd 7e 00 	. ~ .
2265  8C6A CD F1 8C     	call sub_8cf1h		;8c6a	cd f1 8c 	. . .
2266  8C6D C0           	ret nz			;8c6d	c0 	.
2267  8C6E CD 7D 8C     	call sub_8c7dh		;8c6e	cd 7d 8c 	. } .
2268  8C71 DD 46 04     	ld b,(ix+004h)		;8c71	dd 46 04 	. F .
2269  8C74 04           	inc b			;8c74	04 	.
2270  8C75 3E 03        	ld a,003h		;8c75	3e 03 	> .
2271  8C77              l8c77h:
2272  8C77 0F           	rrca			;8c77	0f 	.
2273  8C78 0F           	rrca			;8c78	0f 	.
2274  8C79 10 FC        	djnz l8c77h		;8c79	10 fc 	. .
2275  8C7B 77           	ld (hl),a			;8c7b	77 	w
2276  8C7C C9           	ret			;8c7c	c9 	.
2277  8C7D              sub_8c7dh:
2278  8C7D DD 7E 01     	ld a,(ix+001h)		;8c7d	dd 7e 01 	. ~ .
2279  8C80 11 2C 00     	ld de,0002ch		;8c80	11 2c 00 	. , .
2280  8C83              l8c83h:
2281  8C83 19           	add hl,de			;8c83	19 	.
2282  8C84 3D           	dec a			;8c84	3d 	=
2283  8C85 20 FC        	jr nz,l8c83h		;8c85	20 fc 	  .
2284  8C87 C9           	ret			;8c87	c9 	.
2285  8C88              sub_8c88h:
2286  8C88 3E 04        	ld a,004h		;8c88	3e 04 	> .
2287  8C8A DD 21 9A 78  	ld ix,0789ah		;8c8a	dd 21 9a 78 	. ! . x
2288  8C8E              l8c8eh:
2289  8C8E F5           	push af			;8c8e	f5 	.
2290  8C8F CD AA 8C     	call sub_8caah		;8c8f	cd aa 8c 	. . .
2291  8C92 01 07 00     	ld bc,00007h		;8c92	01 07 00 	. . .
2292  8C95 DD 09        	add ix,bc		;8c95	dd 09 	. .
2293  8C97 F1           	pop af			;8c97	f1 	.
2294  8C98 3D           	dec a			;8c98	3d 	=
2295  8C99 20 F3        	jr nz,l8c8eh		;8c99	20 f3 	  .
2296  8C9B C9           	ret			;8c9b	c9 	.
2297  8C9C              sub_8c9ch:
2298  8C9C DD 7E 01     	ld a,(ix+001h)		;8c9c	dd 7e 01 	. ~ .
2299  8C9F 11 2C 00     	ld de,0002ch		;8c9f	11 2c 00 	. , .
2300  8CA2 3C           	inc a			;8ca2	3c 	<
2301  8CA3              l8ca3h:
2302  8CA3 3D           	dec a			;8ca3	3d 	=
2303  8CA4 C8           	ret z			;8ca4	c8 	.
2304  8CA5 B7           	or a			;8ca5	b7 	.
2305  8CA6 ED 52        	sbc hl,de		;8ca6	ed 52 	. R
2306  8CA8 18 F9        	jr l8ca3h		;8ca8	18 f9 	. .
2307  8CAA              sub_8caah:
2308  8CAA DD 7E 00     	ld a,(ix+000h)		;8caa	dd 7e 00 	. ~ .
2309  8CAD CD F1 8C     	call sub_8cf1h		;8cad	cd f1 8c 	. . .
2310  8CB0 C0           	ret nz			;8cb0	c0 	.
2311  8CB1 CD 9C 8C     	call sub_8c9ch		;8cb1	cd 9c 8c 	. . .
2312  8CB4 EB           	ex de,hl			;8cb4	eb 	.
2313  8CB5 21 6F A6     	ld hl,la66fh		;8cb5	21 6f a6 	! o .
2314  8CB8 01 12 00     	ld bc,00012h		;8cb8	01 12 00 	. . .
2315  8CBB DD 7E 04     	ld a,(ix+004h)		;8cbb	dd 7e 04 	. ~ .
2316  8CBE B7           	or a			;8cbe	b7 	.
2317  8CBF 28 01        	jr z,l8cc2h		;8cbf	28 01 	( .
2318  8CC1 09           	add hl,bc			;8cc1	09 	.
2319  8CC2              l8cc2h:
2320  8CC2 06 09        	ld b,009h		;8cc2	06 09 	. .
2321  8CC4 0E 02        	ld c,002h		;8cc4	0e 02 	. .
2322  8CC6 CD A2 8D     	call sub_8da2h		;8cc6	cd a2 8d 	. . .
2323  8CC9 C9           	ret			;8cc9	c9 	.
2324  8CCA              sub_8ccah:
2325  8CCA 3E 04        	ld a,004h		;8cca	3e 04 	> .
2326  8CCC DD 21 9A 78  	ld ix,0789ah		;8ccc	dd 21 9a 78 	. ! . x
2327  8CD0              l8cd0h:
2328  8CD0 F5           	push af			;8cd0	f5 	.
2329  8CD1 CD DE 8C     	call sub_8cdeh		;8cd1	cd de 8c 	. . .
2330  8CD4 01 07 00     	ld bc,00007h		;8cd4	01 07 00 	. . .
2331  8CD7 DD 09        	add ix,bc		;8cd7	dd 09 	. .
2332  8CD9 F1           	pop af			;8cd9	f1 	.
2333  8CDA 3D           	dec a			;8cda	3d 	=
2334  8CDB 20 F3        	jr nz,l8cd0h		;8cdb	20 f3 	  .
2335  8CDD C9           	ret			;8cdd	c9 	.
2336  8CDE              sub_8cdeh:
2337  8CDE DD 7E 00     	ld a,(ix+000h)		;8cde	dd 7e 00 	. ~ .
2338  8CE1 CD F1 8C     	call sub_8cf1h		;8ce1	cd f1 8c 	. . .
2339  8CE4 C0           	ret nz			;8ce4	c0 	.
2340  8CE5 CD 9C 8C     	call sub_8c9ch		;8ce5	cd 9c 8c 	. . .
2341  8CE8 EB           	ex de,hl			;8ce8	eb 	.
2342  8CE9 01 02 00     	ld bc,00002h		;8ce9	01 02 00 	. . .
2343  8CEC 3E 09        	ld a,009h		;8cec	3e 09 	> .
2344  8CEE C3 8A 8D     	jp sub_8d8ah		;8cee	c3 8a 8d 	. . .
2345  8CF1              sub_8cf1h:
2346  8CF1 6F           	ld l,a			;8cf1	6f 	o
2347  8CF2 26 00        	ld h,000h		;8cf2	26 00 	& .
2348  8CF4 3A 08 79     	ld a,(07908h)		;8cf4	3a 08 79 	: . y
2349  8CF7 D6 06        	sub 006h		;8cf7	d6 06 	. .
2350  8CF9 5F           	ld e,a			;8cf9	5f 	_
2351  8CFA 16 00        	ld d,000h		;8cfa	16 00 	. .
2352  8CFC B7           	or a			;8cfc	b7 	.
2353  8CFD ED 52        	sbc hl,de		;8cfd	ed 52 	. R
2354  8CFF FA 12 8D     	jp m,l8d12h		;8cff	fa 12 8d 	. . .
2355  8D02 EB           	ex de,hl			;8d02	eb 	.
2356  8D03 21 25 00     	ld hl,00025h		;8d03	21 25 00 	! % .
2357  8D06 B7           	or a			;8d06	b7 	.
2358  8D07 ED 52        	sbc hl,de		;8d07	ed 52 	. R
2359  8D09 FA 12 8D     	jp m,l8d12h		;8d09	fa 12 8d 	. . .
2360  8D0C 21 C8 B3     	ld hl,0b3c8h		;8d0c	21 c8 b3 	! . .
2361  8D0F 19           	add hl,de			;8d0f	19 	.
2362  8D10 AF           	xor a			;8d10	af 	.
2363  8D11 C9           	ret			;8d11	c9 	.
2364  8D12              l8d12h:
2365  8D12 3E 01        	ld a,001h		;8d12	3e 01 	> .
2366  8D14 B7           	or a			;8d14	b7 	.
2367  8D15 C9           	ret			;8d15	c9 	.
2368  8D16              sub_8d16h:
2369  8D16 DD 7E 05     	ld a,(ix+005h)		;8d16	dd 7e 05 	. ~ .
2370  8D19 B7           	or a			;8d19	b7 	.
2371  8D1A C0           	ret nz			;8d1a	c0 	.
2372  8D1B DD 7E 00     	ld a,(ix+000h)		;8d1b	dd 7e 00 	. ~ .
2373  8D1E CD F1 8C     	call sub_8cf1h		;8d1e	cd f1 8c 	. . .
2374  8D21 C0           	ret nz			;8d21	c0 	.
2375  8D22 EB           	ex de,hl			;8d22	eb 	.
2376  8D23 21 97 A5     	ld hl,la597h		;8d23	21 97 a5 	! . .
2377  8D26 01 6C 00     	ld bc,0006ch		;8d26	01 6c 00 	. l .
2378  8D29 DD 7E 04     	ld a,(ix+004h)		;8d29	dd 7e 04 	. ~ .
2379  8D2C E6 01        	and 001h		;8d2c	e6 01 	. .
2380  8D2E 28 01        	jr z,l8d31h		;8d2e	28 01 	( .
2381  8D30 09           	add hl,bc			;8d30	09 	.
2382  8D31              l8d31h:
2383  8D31 01 36 00     	ld bc,00036h		;8d31	01 36 00 	. 6 .
2384  8D34 DD 7E 03     	ld a,(ix+003h)		;8d34	dd 7e 03 	. ~ .
2385  8D37 B7           	or a			;8d37	b7 	.
2386  8D38 28 01        	jr z,l8d3bh		;8d38	28 01 	( .
2387  8D3A 09           	add hl,bc			;8d3a	09 	.
2388  8D3B              l8d3bh:
2389  8D3B 0E 06        	ld c,006h		;8d3b	0e 06 	. .
2390  8D3D 06 09        	ld b,009h		;8d3d	06 09 	. .
2391  8D3F CD A2 8D     	call sub_8da2h		;8d3f	cd a2 8d 	. . .
2392  8D42 C9           	ret			;8d42	c9 	.
2393  8D43              sub_8d43h:
2394  8D43 3A 35 78     	ld a,(07835h)		;8d43	3a 35 78 	: 5 x
2395  8D46 B7           	or a			;8d46	b7 	.
2396  8D47 28 03        	jr z,l8d4ch		;8d47	28 03 	( .
2397  8D49 FE 0A        	cp 00ah		;8d49	fe 0a 	. .
2398  8D4B F8           	ret m			;8d4b	f8 	.
2399  8D4C              l8d4ch:
2400  8D4C 21 00 A1     	ld hl,la100h		;8d4c	21 00 a1 	! . .
2401  8D4F 3A 02 79     	ld a,(07902h)		;8d4f	3a 02 79 	: . y
2402  8D52 E6 03        	and 003h		;8d52	e6 03 	. .
2403  8D54 11 6C 00     	ld de,0006ch		;8d54	11 6c 00 	. l .
2404  8D57 3C           	inc a			;8d57	3c 	<
2405  8D58              l8d58h:
2406  8D58 3D           	dec a			;8d58	3d 	=
2407  8D59 28 03        	jr z,l8d5eh		;8d59	28 03 	( .
2408  8D5B 19           	add hl,de			;8d5b	19 	.
2409  8D5C 18 FA        	jr l8d58h		;8d5c	18 fa 	. .
2410  8D5E              l8d5eh:
2411  8D5E 11 44 01     	ld de,00144h		;8d5e	11 44 01 	. D .
2412  8D61 3A 04 79     	ld a,(07904h)		;8d61	3a 04 79 	: . y
2413  8D64 B7           	or a			;8d64	b7 	.
2414  8D65 28 01        	jr z,l8d68h		;8d65	28 01 	( .
2415  8D67 19           	add hl,de			;8d67	19 	.
2416  8D68              l8d68h:
2417  8D68 11 36 00     	ld de,00036h		;8d68	11 36 00 	. 6 .
2418  8D6B 3A 03 79     	ld a,(07903h)		;8d6b	3a 03 79 	: . y
2419  8D6E B7           	or a			;8d6e	b7 	.
2420  8D6F 28 01        	jr z,l8d72h		;8d6f	28 01 	( .
2421  8D71 19           	add hl,de			;8d71	19 	.
2422  8D72              l8d72h:
2423  8D72 ED 5B FE 78  	ld de,(078feh)		;8d72	ed 5b fe 78 	. [ . x
2424  8D76 CD E6 88     	call sub_88e6h		;8d76	cd e6 88 	. . .
2425  8D79 0E 06        	ld c,006h		;8d79	0e 06 	. .
2426  8D7B 06 09        	ld b,009h		;8d7b	06 09 	. .
2427  8D7D CD A2 8D     	call sub_8da2h		;8d7d	cd a2 8d 	. . .
2428  8D80 C9           	ret			;8d80	c9 	.
2429  8D81              sub_8d81h:
2430  8D81 ED 5B FE 78  	ld de,(078feh)		;8d81	ed 5b fe 78 	. [ . x
2431  8D85 01 06 00     	ld bc,00006h		;8d85	01 06 00 	. . .
2432  8D88 3E 09        	ld a,009h		;8d88	3e 09 	> .
2433  8D8A              sub_8d8ah:
2434  8D8A 21 27 A5     	ld hl,la527h		;8d8a	21 27 a5 	! ' .
2435  8D8D CD 91 8D     	call sub_8d91h		;8d8d	cd 91 8d 	. . .
2436  8D90 C9           	ret			;8d90	c9 	.
2437  8D91              sub_8d91h:
2438  8D91 C5           	push bc			;8d91	c5 	.
2439  8D92 D5           	push de			;8d92	d5 	.
2440  8D93 ED B0        	ldir		;8d93	ed b0 	. .
2441  8D95 D1           	pop de			;8d95	d1 	.
2442  8D96 E5           	push hl			;8d96	e5 	.
2443  8D97 21 2C 00     	ld hl,0002ch		;8d97	21 2c 00 	! , .
2444  8D9A 19           	add hl,de			;8d9a	19 	.
2445  8D9B EB           	ex de,hl			;8d9b	eb 	.
2446  8D9C E1           	pop hl			;8d9c	e1 	.
2447  8D9D C1           	pop bc			;8d9d	c1 	.
2448  8D9E 3D           	dec a			;8d9e	3d 	=
2449  8D9F 20 F0        	jr nz,sub_8d91h		;8d9f	20 f0 	  .
2450  8DA1 C9           	ret			;8da1	c9 	.
2451  8DA2              sub_8da2h:
2452  8DA2 C5           	push bc			;8da2	c5 	.
2453  8DA3 D5           	push de			;8da3	d5 	.
2454  8DA4              l8da4h:
2455  8DA4 1A           	ld a,(de)			;8da4	1a 	.
2456  8DA5 B6           	or (hl)			;8da5	b6 	.
2457  8DA6 12           	ld (de),a			;8da6	12 	.
2458  8DA7 23           	inc hl			;8da7	23 	#
2459  8DA8 13           	inc de			;8da8	13 	.
2460  8DA9 0D           	dec c			;8da9	0d 	.
2461  8DAA 20 F8        	jr nz,l8da4h		;8daa	20 f8 	  .
2462  8DAC D1           	pop de			;8dac	d1 	.
2463  8DAD E5           	push hl			;8dad	e5 	.
2464  8DAE 21 2C 00     	ld hl,0002ch		;8dae	21 2c 00 	! , .
2465  8DB1 19           	add hl,de			;8db1	19 	.
2466  8DB2 EB           	ex de,hl			;8db2	eb 	.
2467  8DB3 E1           	pop hl			;8db3	e1 	.
2468  8DB4 C1           	pop bc			;8db4	c1 	.
2469  8DB5 05           	dec b			;8db5	05 	.
2470  8DB6 20 EA        	jr nz,sub_8da2h		;8db6	20 ea 	  .
2471  8DB8 C9           	ret			;8db8	c9 	.
2472  8DB9              sub_8db9h:
2473  8DB9 21 5A B5     	ld hl,0b55ah		;8db9	21 5a b5 	! Z .
2474  8DBC 11 5B B5     	ld de,0b55bh		;8dbc	11 5b b5 	. [ .
2475  8DBF 01 1F 00     	ld bc,0001fh		;8dbf	01 1f 00 	. . .
2476  8DC2 36 55        	ld (hl),055h		;8dc2	36 55 	6 U
2477  8DC4 ED B0        	ldir		;8dc4	ed b0 	. .
2478  8DC6 21 86 AA     	ld hl,0aa86h		;8dc6	21 86 aa 	! . .
2479  8DC9 11 00 70     	ld de,VRAM				; Video Memory address (0,0)						;8dc9	11 00 70
2480  8DCC 0E 20        	ld c,020h		;8dcc	0e 20 	.
2481  8DCE 06 40        	ld b,040h		;8dce	06 40 	. @
2482  8DD0              l8dd0h:
2483  8DD0 C5           	push bc			;8dd0	c5 	.
2484  8DD1 06 00        	ld b,000h		;8dd1	06 00 	. .
2485  8DD3 ED B0        	ldir		;8dd3	ed b0 	. .
2486  8DD5 01 0C 00     	ld bc,0000ch		;8dd5	01 0c 00 	. . .
2487  8DD8 09           	add hl,bc			;8dd8	09 	.
2488  8DD9 C1           	pop bc			;8dd9	c1 	.
2489  8DDA 05           	dec b			;8dda	05 	.
2490  8DDB 20 F3        	jr nz,l8dd0h		;8ddb	20 f3 	  .
2491  8DDD C9           	ret			;8ddd	c9 	.
2492  8DDE
2493  8DDE              ;***********************************************************************************************
2494  8DDE              ; Clear Offscreen Buffer and VRAM and set Graphics MODE 1 with default Color Palette
2495  8DDE              ; This routine is used when Game displays Gameplay screen - wide (176x64)px (44x64)bytes
2496  8DDE              ; When Game display other screens, offscreen buffer is standard size (128x64)px  (32x64)bytes
2497  8DDE              CLEAR_SCRBUF_WIDE:
2498  8DDE 21 80 AA     	ld hl,VSCRBUF			; src - Offscreen Buffer start						;8dde	21 80 aa
2499  8DE1 11 81 AA     	ld de,VSCRBUF+1			; dst - next byte									;8de1	11 81 aa
2500  8DE4 01 FF 0A     	ld bc,2815				; cnt - size of Buffer (wide 2816 = 44 x 64 lines)	;8de4	01 ff 0a
2501  8DE7 36 00        	ld (hl),0				; 4 green (background) pixels						;8de7	36 00
2502  8DE9 ED B0        	ldir					; fill Buffer with green pixels						;8de9	ed b0
2503  8DEB              ; -- Clear Screen and set Graphics MODE 1
2504  8DEB 21 00 70     	ld hl,VRAM				; src - video memory start							;8deb	21 00 70
2505  8DEE 11 01 70     	ld de,VRAM+1			; dst - next byte									;8dee	11 01 70
2506  8DF1 01 FF 07     	ld bc,2047				; ctn - size of video memory in MODE 1 (gfx)		;8df1	01 ff 07
2507  8DF4 36 00        	ld (hl),0				; 4 green (background) pixels						;8df4	36 00
2508  8DF6 ED B0        	ldir					; fill VRAM with green pixels						;8df6	ed b0
2509  8DF8              ; -- set Video Graphics Mode 1, Color Palette 0
2510  8DF8 3E 08        	ld a,VDG_GFX_COLORS_0	; VDG Gfx MODE 1 Colors (Green/Yellow/Blue/Red)	 	;8df8	3e 08
2511  8DFA 32 00 68     	ld (IOLATCH),a			; store to hardware register						;8dfa	32 00 68
2512  8DFD C9           	ret						; ----------------- End of Proc ---------------		;8dfd	c9
2513  8DFE
2514  8DFE              sub_8dfeh:
2515  8DFE DD 21 1F 78  	ld ix,0781fh		;8dfe	dd 21 1f 78 	. ! . x
2516  8E02 CD 0F 8E     	call sub_8e0fh		;8e02	cd 0f 8e 	. . .
2517  8E05 CD 0F 8E     	call sub_8e0fh		;8e05	cd 0f 8e 	. . .
2518  8E08 CD 0F 8E     	call sub_8e0fh		;8e08	cd 0f 8e 	. . .
2519  8E0B CD 0F 8E     	call sub_8e0fh		;8e0b	cd 0f 8e 	. . .
2520  8E0E C9           	ret			;8e0e	c9 	.
2521  8E0F              sub_8e0fh:
2522  8E0F DD 7E 00     	ld a,(ix+000h)		;8e0f	dd 7e 00 	. ~ .
2523  8E12 DD 23        	inc ix		;8e12	dd 23 	. #
2524  8E14 CD F1 8C     	call sub_8cf1h		;8e14	cd f1 8c 	. . .
2525  8E17 C0           	ret nz			;8e17	c0 	.
2526  8E18 11 93 A6     	ld de,la693h		;8e18	11 93 a6 	. . .
2527  8E1B EB           	ex de,hl			;8e1b	eb 	.
2528  8E1C 06 09        	ld b,009h		;8e1c	06 09 	. .
2529  8E1E 0E 02        	ld c,002h		;8e1e	0e 02 	. .
2530  8E20 CD A2 8D     	call sub_8da2h		;8e20	cd a2 8d 	. . .
2531  8E23 C9           	ret			;8e23	c9 	.
2532  8E24              sub_8e24h:
2533  8E24 DD 21 23 78  	ld ix,07823h		;8e24	dd 21 23 78 	. ! # x
2534  8E28 3E 08        	ld a,008h		;8e28	3e 08 	> .
2535  8E2A              l8e2ah:
2536  8E2A F5           	push af			;8e2a	f5 	.
2537  8E2B CD 35 8E     	call sub_8e35h		;8e2b	cd 35 8e 	. 5 .
2538  8E2E F1           	pop af			;8e2e	f1 	.
2539  8E2F DD 23        	inc ix		;8e2f	dd 23 	. #
2540  8E31 3D           	dec a			;8e31	3d 	=
2541  8E32 20 F6        	jr nz,l8e2ah		;8e32	20 f6 	  .
2542  8E34 C9           	ret			;8e34	c9 	.
2543  8E35              sub_8e35h:
2544  8E35 DD 7E 00     	ld a,(ix+000h)		;8e35	dd 7e 00 	. ~ .
2545  8E38 CD F1 8C     	call sub_8cf1h		;8e38	cd f1 8c 	. . .
2546  8E3B C0           	ret nz			;8e3b	c0 	.
2547  8E3C CD E1 8E     	call sub_8ee1h		;8e3c	cd e1 8e 	. . .
2548  8E3F 11 88 A3     	ld de,la388h		;8e3f	11 88 a3 	. . .
2549  8E42 EB           	ex de,hl			;8e42	eb 	.
2550  8E43 06 10        	ld b,010h		;8e43	06 10 	. .
2551  8E45 0E 02        	ld c,002h		;8e45	0e 02 	. .
2552  8E47 CD A2 8D     	call sub_8da2h		;8e47	cd a2 8d 	. . .
2553  8E4A C9           	ret			;8e4a	c9 	.
2554  8E4B              sub_8e4bh:
2555  8E4B DD 21 2B 78  	ld ix,0782bh		;8e4b	dd 21 2b 78 	. ! + x
2556  8E4F CD 5C 8E     	call sub_8e5ch		;8e4f	cd 5c 8e 	. \ .
2557  8E52 CD 5C 8E     	call sub_8e5ch		;8e52	cd 5c 8e 	. \ .
2558  8E55 CD 5C 8E     	call sub_8e5ch		;8e55	cd 5c 8e 	. \ .
2559  8E58 CD 5C 8E     	call sub_8e5ch		;8e58	cd 5c 8e 	. \ .
2560  8E5B C9           	ret			;8e5b	c9 	.
2561  8E5C              sub_8e5ch:
2562  8E5C DD 7E 00     	ld a,(ix+000h)		;8e5c	dd 7e 00 	. ~ .
2563  8E5F DD 23        	inc ix		;8e5f	dd 23 	. #
2564  8E61 CD F1 8C     	call sub_8cf1h		;8e61	cd f1 8c 	. . .
2565  8E64 C0           	ret nz			;8e64	c0 	.
2566  8E65 CD E5 8E     	call sub_8ee5h		;8e65	cd e5 8e 	. . .
2567  8E68 11 A8 A3     	ld de,la3a8h		;8e68	11 a8 a3 	. . .
2568  8E6B EB           	ex de,hl			;8e6b	eb 	.
2569  8E6C 06 0B        	ld b,00bh		;8e6c	06 0b 	. .
2570  8E6E 0E 05        	ld c,005h		;8e6e	0e 05 	. .
2571  8E70 CD A2 8D     	call sub_8da2h		;8e70	cd a2 8d 	. . .
2572  8E73 C9           	ret			;8e73	c9 	.
2573  8E74              sub_8e74h:
2574  8E74 DD 21 1F 78  	ld ix,0781fh		;8e74	dd 21 1f 78 	. ! . x
2575  8E78 CD 85 8E     	call sub_8e85h		;8e78	cd 85 8e 	. . .
2576  8E7B CD 85 8E     	call sub_8e85h		;8e7b	cd 85 8e 	. . .
2577  8E7E CD 85 8E     	call sub_8e85h		;8e7e	cd 85 8e 	. . .
2578  8E81 CD 85 8E     	call sub_8e85h		;8e81	cd 85 8e 	. . .
2579  8E84 C9           	ret			;8e84	c9 	.
2580  8E85              sub_8e85h:
2581  8E85 DD 7E 00     	ld a,(ix+000h)		;8e85	dd 7e 00 	. ~ .
2582  8E88 DD 23        	inc ix		;8e88	dd 23 	. #
2583  8E8A CD F1 8C     	call sub_8cf1h		;8e8a	cd f1 8c 	. . .
2584  8E8D C0           	ret nz			;8e8d	c0 	.
2585  8E8E EB           	ex de,hl			;8e8e	eb 	.
2586  8E8F 01 02 00     	ld bc,00002h		;8e8f	01 02 00 	. . .
2587  8E92 3E 09        	ld a,009h		;8e92	3e 09 	> .
2588  8E94 C3 8A 8D     	jp sub_8d8ah		;8e94	c3 8a 8d 	. . .
2589  8E97              sub_8e97h:
2590  8E97 DD 21 23 78  	ld ix,07823h		;8e97	dd 21 23 78 	. ! # x
2591  8E9B 3E 08        	ld a,008h		;8e9b	3e 08 	> .
2592  8E9D              l8e9dh:
2593  8E9D F5           	push af			;8e9d	f5 	.
2594  8E9E CD A8 8E     	call sub_8ea8h		;8e9e	cd a8 8e 	. . .
2595  8EA1 F1           	pop af			;8ea1	f1 	.
2596  8EA2 DD 23        	inc ix		;8ea2	dd 23 	. #
2597  8EA4 3D           	dec a			;8ea4	3d 	=
2598  8EA5 20 F6        	jr nz,l8e9dh		;8ea5	20 f6 	  .
2599  8EA7 C9           	ret			;8ea7	c9 	.
2600  8EA8              sub_8ea8h:
2601  8EA8 DD 7E 00     	ld a,(ix+000h)		;8ea8	dd 7e 00 	. ~ .
2602  8EAB CD F1 8C     	call sub_8cf1h		;8eab	cd f1 8c 	. . .
2603  8EAE C0           	ret nz			;8eae	c0 	.
2604  8EAF CD E1 8E     	call sub_8ee1h		;8eaf	cd e1 8e 	. . .
2605  8EB2 EB           	ex de,hl			;8eb2	eb 	.
2606  8EB3 01 02 00     	ld bc,00002h		;8eb3	01 02 00 	. . .
2607  8EB6 3E 10        	ld a,010h		;8eb6	3e 10 	> .
2608  8EB8 C3 8A 8D     	jp sub_8d8ah		;8eb8	c3 8a 8d 	. . .
2609  8EBB              sub_8ebbh:
2610  8EBB DD 21 2B 78  	ld ix,0782bh		;8ebb	dd 21 2b 78 	. ! + x
2611  8EBF CD CC 8E     	call sub_8ecch		;8ebf	cd cc 8e 	. . .
2612  8EC2 CD CC 8E     	call sub_8ecch		;8ec2	cd cc 8e 	. . .
2613  8EC5 CD CC 8E     	call sub_8ecch		;8ec5	cd cc 8e 	. . .
2614  8EC8 CD CC 8E     	call sub_8ecch		;8ec8	cd cc 8e 	. . .
2615  8ECB C9           	ret			;8ecb	c9 	.
2616  8ECC              sub_8ecch:
2617  8ECC DD 7E 00     	ld a,(ix+000h)		;8ecc	dd 7e 00 	. ~ .
2618  8ECF DD 23        	inc ix		;8ecf	dd 23 	. #
2619  8ED1 CD F1 8C     	call sub_8cf1h		;8ed1	cd f1 8c 	. . .
2620  8ED4 C0           	ret nz			;8ed4	c0 	.
2621  8ED5 CD E5 8E     	call sub_8ee5h		;8ed5	cd e5 8e 	. . .
2622  8ED8 EB           	ex de,hl			;8ed8	eb 	.
2623  8ED9 01 05 00     	ld bc,00005h		;8ed9	01 05 00 	. . .
2624  8EDC 3E 0B        	ld a,00bh		;8edc	3e 0b 	> .
2625  8EDE C3 8A 8D     	jp sub_8d8ah		;8ede	c3 8a 8d 	. . .
2626  8EE1              sub_8ee1h:
2627  8EE1 06 07        	ld b,007h		;8ee1	06 07 	. .
2628  8EE3 18 02        	jr l8ee7h		;8ee3	18 02 	. .
2629  8EE5              sub_8ee5h:
2630  8EE5 06 02        	ld b,002h		;8ee5	06 02 	. .
2631  8EE7              l8ee7h:
2632  8EE7 11 2C 00     	ld de,0002ch		;8ee7	11 2c 00 	. , .
2633  8EEA B7           	or a			;8eea	b7 	.
2634  8EEB ED 52        	sbc hl,de		;8eeb	ed 52 	. R
2635  8EED 10 F8        	djnz l8ee7h		;8eed	10 f8 	. .
2636  8EEF C9           	ret			;8eef	c9 	.
2637  8EF0              sub_8ef0h:
2638  8EF0 3A 35 78     	ld a,(07835h)		;8ef0	3a 35 78 	: 5 x
2639  8EF3 B7           	or a			;8ef3	b7 	.
2640  8EF4 28 02        	jr z,READ_INPUT		;8ef4	28 02 	( .
2641  8EF6 AF           	xor a			;8ef6	af 	.
2642  8EF7 C9           	ret			;8ef7	c9 	.
2643  8EF8
2644  8EF8
2645  8EF8              ;***********************************************************************************************
2646  8EF8              ; Read keys and joystick (if allowed by player)
2647  8EF8              ; OUT: a - bitmask with input events (keys or joystick)
2648  8EF8              ;          bit 0 - UP, bit 1 - DOWN, bit 2 - LEFT, bit 3 - RIGHT, bit 4 - FIRE, bit 5 - ROTATE
2649  8EF8              READ_INPUT:
2650  8EF8 0E 00        	ld c,%00000000			; initial empty bitmask - no input detected				;8ef8	0e 00
2651  8EFA              TEST_KEY_Q
2652  8EFA 3A FE 6F     	ld a,(KEYS_ROW_0F)		; select Keyboard row 0 								;8efa	3a fe 6f
2653  8EFD CB 67        	bit 4,a					; check if key 'Q' is pressed							;8efd	cb 67
2654  8EFF 20 02        	jr nz,TEST_KEY_A		; no - check next key									;8eff	20 02
2655  8F01              ; -- set bit UP in input bitmask variable
2656  8F01 CB C1        	set UP,c				; set bit for UP key pressed							;8f01	cb c1
2657  8F03              TEST_KEY_A:
2658  8F03 3A FD 6F     	ld a,(KEYS_ROW_1F)		; select Keyboard row 1 								;8f03	3a fd 6f
2659  8F06 CB 67        	bit 4,a					; check if key 'A' is pressed							;8f06	cb 67
2660  8F08 20 02        	jr nz,TEST_KEY_M		; no - check next key									;8f08	20 02
2661  8F0A              ; -- set bit DOWN in input bitmask variable
2662  8F0A CB C9        	set DOWN,c				; set bit for DOWN key pressed							;8f0a	cb c9
2663  8F0C              TEST_KEY_M:
2664  8F0C 3A EF 6F     	ld a,(KEYS_ROW_4F)		; select Keyboard row 4 								;8f0c	3a ef 6f
2665  8F0F CB 6F        	bit 5,a					; check if key 'M' pressed								;8f0f	cb 6f
2666  8F11 20 02        	jr nz,TEST_KEY_COMMA	; no - check next key									;8f11	20 02
2667  8F13              ; -- set bit LEFT in input bitmask variable
2668  8F13 CB D1        	set LEFT,c				; set bit for LEFT key pressed							;8f13	cb d1
2669  8F15              TEST_KEY_COMMA:
2670  8F15 2F           	cpl						; invert bits - 1 means key pressed	 					;8f15	2f
2671  8F16 E6 18        	and %00011000			; mask keys ',' (RIGHT) and SPACE (FIRE)				;8f16	e6 18
2672  8F18              ; -- set bit RIGHT and/or FIRE if key pressed
2673  8F18 B1           	or c					; a - bitmask with inputs detected						;8f18	b1
2674  8F19 4F           	ld c,a					; store to local variable								;8f19	4f
2675  8F1A              TEST_KEY_Z
2676  8F1A 3A FB 6F     	ld a,(KEYS_ROW_2F)		; select Keyboard row 2									;8f1a	3a fb 6f
2677  8F1D 2F           	cpl						; invert bits - 1 means key pressed						;8f1d	2f
2678  8F1E E6 10        	and %00010000			; mask on key 'Z' (bit FIRE)							;8f1e	e6 10
2679  8F20              ; -- set bit FIRE if key 'Z' is pressed
2680  8F20 B1           	or c					; a - all detected keys									;8f20	b1
2681  8F21 79           	ld a,c					; BUG - seems like should be ld c,a instad				;8f21	79
2682  8F22              TEST_KEY_N
2683  8F22 3A EF 68     	ld a,(KEYS_ROW_4)		; select Keyboard row 4 								;8f22	3a ef 68
2684  8F25 CB 47        	bit 0,a					; check if key 'N' pressed								;8f25	cb 47
2685  8F27 20 02        	jr nz,l8f2bh			; no - return if any key detected						;8f27	20 02
2686  8F29              ; -- set bit ROTATE in input bitmask variable
2687  8F29 CB E9        	set ROTATE,c			; set bit for ROTATE key pressed						;8f29	cb e9
2688  8F2B              l8f2bh:
2689  8F2B 79           	ld a,c					; a - all detected keys									;8f2b	79
2690  8F2C B7           	or a					; is any key detected?									;8f2c	b7
2691  8F2D C0           	ret nz					; yes ------------- End of Proc ----------------------- ;8f2d	c0
2692  8F2E              ; -- no keys pressed detected - check joystick if enabled
2693  8F2E 3A 00 78     	ld a,(JOY_ENABLE)		; a - Joystick Enabled Flag								;8f2e	3a 00 78
2694  8F31 B7           	or a					; is Joystick enabled? 									;8f31	b7
2695  8F32 C8           	ret z					; no -------------- End of Proc (no input detected) ---	;8f32	c8
2696  8F33              ; -- check joystick 1 - moves and fire
2697  8F33 DB 2A        	in a,(JOY_PORT_1)		; read Joystick 1										;8f33	db 2a
2698  8F35 2F           	cpl						; invert bits - 1 means joystick move/fire				;8f35	2f
2699  8F36 E6 1F        	and %00011111			; mask UP/DOWN/LEFT/RIGHT/FIRE							;8f36	e6 1f
2700  8F38 4F           	ld c,a					; store to local bitmask variable						;8f38	4f
2701  8F39              ; -- check joystick 2 - fire as ROTATE
2702  8F39 DB 25        	in a,(JOY_PORT_2)		; read Joystick 2										;8f39	db 25
2703  8F3B 2F           	cpl						; invert bits - 1 means joystick move/fire				;8f3b	2f
2704  8F3C 07           	rlca					; shift value so FIRE bit is placed as ROTATE (5) bit	;8f3c	07
2705  8F3D E6 20        	and %00100000			; mask only ROTATE bit									;8f3d	e6 20
2706  8F3F B1           	or c					; add already detected input bits from Joystick 1 		;8f3f	b1
2707  8F40 C9           	ret						; ----------------- End of Proc (input detected)		;8f40	c9
2708  8F41
2709  8F41
2710  8F41
2711  8F41              ;***********************************************************************************************
2712  8F41              ; Play Sound.
2713  8F41              ; There are 4 predefined sounds. For every value in a (1..4) procedure sets 2 factors:
2714  8F41              ; Half period time (reg b) and sound duration/number of cycles (reg c)
2715  8F41              ; IN: a - number of sound to play
2716  8F41              SND_PLAY:
2717  8F41              ; -- Sound 1 - Highest Pitch
2718  8F41 01 80 20     	ld bc,$2080				; Half period time = 32, cycles = 128					;8f41	01 80 20
2719  8F44 3D           	dec a					; decrement and check if 0								;8f44	3d
2720  8F45 28 0F        	jr z,.PLAY_SND_WAVE		; yes - Play Sound 1 (32,128)							;8f45	28 0f
2721  8F47              ; -- Sound 2 - High Pitch
2722  8F47 01 60 30     	ld bc,$3060				; Half period time = 48, cycles = 96					;8f47	01 60 30
2723  8F4A 3D           	dec a					; decrement and check if 0								;8f4a	3d
2724  8F4B 28 09        	jr z,.PLAY_SND_WAVE		; yes - Play Sound 2 (48,96)							;8f4b	28 09
2725  8F4D              ; -- Sound 3 - Middle Pitch
2726  8F4D 01 40 40     	ld bc,$4040				; Half period time = 64, cycles = 64					;8f4d	01 40 40
2727  8F50 3D           	dec a					; decrement and check if 0								;8f50	3d
2728  8F51 28 03        	jr z,.PLAY_SND_WAVE		; yes - Play Sound 3 (64,64)							;8f51	28 03
2729  8F53              ; -- Sound 4 - Low Pitch
2730  8F53 01 20 80     	ld bc,$8020				; Half period time = 128, cycles = 32					;8f53	01 20 80
2731  8F56              .PLAY_SND_WAVE:
2732  8F56 3E 28        	ld a,SPK_MINUS			; a - Speaker Out (+/-) [keeps Video Mode 1]			;8f56	3e 28
2733  8F58 32 00 68     	ld (IOLATCH),a			; store in hardware register							;8f58	32 00 68
2734  8F5B CD 6A 8F     	call DELAY_B			; wait delay (b iterations)								;8f5b	cd 6a 8f
2735  8F5E 3E 09        	ld a,SPK_PLUS			; a - Speaker Out (+/-) [keeps Video Mode 1]			;8f5e	3e 09
2736  8F60 32 00 68     	ld (IOLATCH),a			; store in hardware register							;8f60	32 00 68
2737  8F63 CD 6A 8F     	call DELAY_B			; wait delay (b iterations)								;8f63	cd 6a 8f
2738  8F66 0D           	dec c					; decrement cycles counter	 - check if 0				;8f66	0d
2739  8F67 20 ED        	jr nz,.PLAY_SND_WAVE	; no - play next wave cycle								;8f67	20 ed
2740  8F69 C9           	ret						; ----------------- End of Proc ----------------------- ;8f69	c9
2741  8F6A
2742  8F6A              ;***********************************************************************************************
2743  8F6A              ; Delay for numer iteration provided in b register.
2744  8F6A              ; Used in Sound Play routine to count half-period time of wave
2745  8F6A              ; IN: b - delay time in loop iterations ($20, $30 or $40)
2746  8F6A              DELAY_B:
2747  8F6A C5           	push bc				; save bc - delay time (b) and cycle counter (c)			;8f6a	c5
2748  8F6B              .LOOP:
2749  8F6B 05           	dec b				; decrement time, check if 0								;8f6b	05
2750  8F6C 20 FD        	jr nz,.LOOP			; no - keep decrementing									;8f6c	20 fd
2751  8F6E C1           	pop bc				; restore bc - delay time (b) and cycle counter (c)			;8f6e	c1
2752  8F6F C9           	ret					; ----------------- End of Proc ---------------------------	;8f6f	c9
2753  8F70
2754  8F70
2755  8F70              ;***********************************************************************************************
2756  8F70              ;
2757  8F70              ;    G A M E   J U M P   T A B L E
2758  8F70              ;
2759  8F70              ;***********************************************************************************************
2760  8F70
2761  8F70              JMP_PRINT_STATBAR:
2762  8F70 C3 FC 97     	jp PRINT_STATBAR_BUF	; jum to PRINT_STATBAR_BUF routine					;8f70	c3 fc 97
2763  8F73              sub_8f73h:
2764  8F73 C3 86 97     	jp l9786h		;8f73	c3 86 97 	. . .
2765  8F76              sub_8f76h:
2766  8F76 C3 B7 97     	jp l97b7h		;8f76	c3 b7 97 	. . .
2767  8F79              sub_8f79h:
2768  8F79 C3 12 97     	jp l9712h		;8f79	c3 12 97 	. . .
2769  8F7C              JMP_GAME_START_SCR:
2770  8F7C C3 CB 8F     	jp GAME_START_SCREEN		;8f7c	c3 cb 8f 	. . .
2771  8F7F              JMP_GAME_END:
2772  8F7F C3 56 90     	jp GAME_END		;8f7f	c3 56 90 	. V .
2773  8F82              JMP_GAME_INIT:
2774  8F82 C3 88 8F     	jp GAME_INIT			; jump to GAME_INIT routine							;8f82	c3 88 8f
2775  8F85              sub_8f85h:
2776  8F85 C3 74 97     	jp l9774h		;8f85	c3 74 97 	. t .
2777  8F88
2778  8F88
2779  8F88              ;***********************************************************************************************
2780  8F88              ;
2781  8F88              ;    G A M E   I N I T
2782  8F88              ;
2783  8F88              ;***********************************************************************************************
2784  8F88              GAME_INIT:
2785  8F88 F3           	di						; disable interrupts									;8f88	f3
2786  8F89 31 F0 7C     	ld sp,BASE_SP			; reset CPU Stack Pointer to base address				;8f89	31 f0 7c
2787  8F8C              ;-- set Gfx Mode, clear screen
2788  8F8C CD 4B 94     	call CLEAR_SCREEN_GFX	; clear screen - MOde 1 (Gfx)							;8f8c	cd 4b 94
2789  8F8F
2790  8F8F              ;-- ask player if he wants to use Joystick
2791  8F8F 21 C5 9A     	ld hl,TXT_JOYSTICK_Q	; text to display - Joystick Question					;8f8f	21 c5 9a
2792  8F92 11 00 70     	ld de,VRAM				; dst - screen position (0,0)							;8f92	11 00 70
2793  8F95 CD 23 94     	call PRINT_TEXT_GFX		; print Joystick Question in Gfx Mode 1					;8f95	cd 23 94
2794  8F98              .WAIT_FOR_KEY:
2795  8F98 AF           	xor a					; default 0 - Joystick disabled							;8f98	af
2796  8F99 32 00 78     	ld (JOY_ENABLE),a		; store in Game Settings variable						;8f99	32 00 78
2797  8F9C 3A EF 68     	ld a,(KEYS_ROW_4)		; select Keyboard row 4 								;8f9c	3a ef 68
2798  8F9F CB 47        	bit 0,a					; check if key 'N' is pressed							;8f9f	cb 47
2799  8FA1 CA B1 8F     	jp z,.INIT_HIGH_SCORES	; yes - continue with High Score initialization			;8fa1	ca b1 8f
2800  8FA4 3E 01        	ld a,1					; value 1 - Joystick Enabled							;8fa4	3e 01
2801  8FA6 32 00 78     	ld (JOY_ENABLE),a		; store in Game Settings variable						;8fa6	32 00 78
2802  8FA9 3A BF 68     	ld a,(KEYS_ROW_6)		; select Keyboard row 6 								;8fa9	3a bf 68
2803  8FAC CB 47        	bit 0,a					; check if key 'Y' is pressed							;8fac	cb 47
2804  8FAE C2 98 8F     	jp nz,.WAIT_FOR_KEY		; no - wait until player press 'N' or 'Y'				;8fae	c2 98 8f
2805  8FB1
2806  8FB1              .INIT_HIGH_SCORES:
2807  8FB1              ; -- clear 50 bytes of High Score Values (10 values * 5 digits each)
2808  8FB1 21 E0 96     	ld hl,VAR_HS_VALUES		; (src) address of Hight Score Values table				;8fb1	21 e0 96
2809  8FB4 11 E1 96     	ld de,VAR_HS_VALUES+1	; (dst) address + 1										;8fb4	11 e1 96
2810  8FB7 36 00        	ld (hl),0				; value 0 to fill table									;8fb7	36 00
2811  8FB9 01 31 00     	ld bc,50-1				; 50 bytes to fill										;8fb9	01 31 00
2812  8FBC ED B0        	ldir					; fill table with 0 value								;8fbc	ed b0
2813  8FBE              ; -- initialize 50 bytes of Hight Score Players Names (10 names * 5 char each) to $2e (dot) char
2814  8FBE 21 AE 96     	ld hl,TXT_HS_NAMES		; (src) address of Hight Score Names table				;8fbe	21 ae 96
2815  8FC1 11 AF 96     	ld de,TXT_HS_NAMES+1	; (dst) address + 1										;8fc1	11 af 96
2816  8FC4 01 31 00     	ld bc,50-1				; 50 bytes to fill										;8fc4	01 31 00
2817  8FC7 36 2E        	ld (hl),'.'				; char '.' (dot) to fill table							;8fc7	36 2e
2818  8FC9 ED B0        	ldir					; fill table with '.' char								;8fc9	ed b0
2819  8FCB
2820  8FCB
2821  8FCB              ;***********************************************************************************************
2822  8FCB              ;
2823  8FCB              ;    G A M E   S T A R T   S C R E E N
2824  8FCB              ;
2825  8FCB              ; Display Title of the Game and wait until player press <I> or <P>.
2826  8FCB              ; When player press I then it shows Instruction/Manual pages and after all pages returns back
2827  8FCB              ; to this routine. When player press P it starts the GamePlay.
2828  8FCB              ; When player doesn't press any key in about 7 sek. Game switch to display Keys Help screen
2829  8FCB              ; and after that High Score Screen still checking player input.
2830  8FCB              ;***********************************************************************************************
2831  8FCB              GAME_START_SCREEN:
2832  8FCB F3           	di						; disable interrupts									;8fcb	f3
2833  8FCC 31 F0 7C     	ld sp,BASE_SP			; reset CPU Stack Pointer to base address				;8fcc	31 f0 7c
2834  8FCF              ; -- following screens will be in standard size (128x64)px - 32 bytes per line
2835  8FCF 21 20 00     	ld hl,32				; all Screens except GamePlay has 32 bytes/line			;8fcf	21 20 00
2836  8FD2 22 AB 98     	ld (BYTES_PER_LINE),hl	; store current value for drawing routine				;8fd2	22 ab 98
2837  8FD5              ; -- show Start Page Screen
2838  8FD5 CD 46 94     	call CLEAR_SCRBUF_GFX	; clear Offscreen Buffer								;8fd5	cd 46 94
2839  8FD8 21 81 95     	ld hl,TXT_START_PAGE	; Start/Title Page text									;8fd8	21 81 95
2840  8FDB 11 80 AA     	ld de,VSCRBUF			; dst - Offscreen Buffer								;8fdb	11 80 aa
2841  8FDE CD 23 94     	call PRINT_TEXT_GFX		; print Start Page into Offscreen Buffer				;8fde	cd 23 94
2842  8FE1 CD 0E 93     	call SHOW_SCR_WAIT		; show Start Screen (animation) and wait for key I or P	;8fe1	cd 0e 93
2843  8FE4              ; -- no keys pressed - show Keys Help Screen
2844  8FE4 CD 46 94     	call CLEAR_SCRBUF_GFX	; clear Offscreen Buffer								;8fe4	cd 46 94
2845  8FE7 21 F7 95     	ld hl,TXT_KEYS_HELP		; Keys Help Page text 									;8fe7	21 f7 95
2846  8FEA 11 80 AA     	ld de,VSCRBUF			; dst - Offscreen Buffer								;8fea	11 80 aa
2847  8FED CD 23 94     	call PRINT_TEXT_GFX		; print Help page into Offscreen Buffer					;8fed	cd 23 94
2848  8FF0 CD 0E 93     	call SHOW_SCR_WAIT		; show Help Screen (animation) and wait for key I or P	;8ff0	cd 0e 93
2849  8FF3              ; -- no keys pressed - show High Scores	Screen
2850  8FF3 CD F8 8F     	call SHOW_SCR_HIGHSCORE	; show High Score  (animation) and wait for key I or P	;8ff3	cd f8 8f
2851  8FF6 18 D3        	jr GAME_START_SCREEN	; no keys pressed - show Start Page again				;8ff6	18 d3
2852  8FF8
2853  8FF8
2854  8FF8
2855  8FF8              SHOW_SCR_HIGHSCORE:
2856  8FF8 CD FF 8F     	call PRINT_HIGH_SCORES	; draw High Scores Screen into Offscreen Buffer			;8ff8	cd ff 8f
2857  8FFB CD 0E 93     	call SHOW_SCR_WAIT		; show High Score  (animation) and wait for key I or P	;8ffb	cd 0e 93
2858  8FFE C9           	ret						; ----------------- End of Proc ----------------------- ;8ffe	c9
2859  8FFF
2860  8FFF
2861  8FFF              PRINT_HIGH_SCORES:
2862  8FFF CD 46 94     	call CLEAR_SCRBUF_GFX	; clear Offscreen Buffer								;8fff	cd 46 94
2863  9002 21 AE 96     	ld hl,TXT_HS_NAMES		; High Score names - 10 names * 5 char each				;9002	21 ae 96
2864  9005 11 C8 AA     	ld de,VSCRBUF+(2*32)+8	; Buffer text coordinates (32,2)px - text start			;9005	11 c8 aa
2865  9008 3E 0A        	ld a,10					; 10 names to draw on screen							;9008	3e 0a
2866  900A              .NEXT_NAME:
2867  900A F5           	push af					; save a - names counter								;900a	f5
2868  900B 3E 05        	ld a,5					; 5 chars per name										;900b	3e 05
2869  900D              .NEXT_CHAR:
2870  900D F5           	push af					; save a - chars counter								;900d	f5
2871  900E D5           	push de					; save de - destination coord in Offscreen Buffer		;900e	d5
2872  900F E5           	push hl					; save hl - address of current char to draw				;900f	e5
2873  9010 7E           	ld a,(hl)				; a - char of name to draw								;9010	7e
2874  9011 CD E9 98     	call DRAW_CHAR_GFX		; print/draw char into Buffer							;9011	cd e9 98
2875  9014 E1           	pop hl					; restore hl - addres of current char just drawn		;9014	e1
2876  9015 D1           	pop de					; restore de - destination address in Buffer			;9015	d1
2877  9016 23           	inc hl					; hl - next char to draw								;9016	23
2878  9017 13           	inc de					; de - next destination address							;9017	13
2879  9018 F1           	pop af					; restore a - char counter								;9018	f1
2880  9019 3D           	dec a					; decrement counter - check if 0						;9019	3d
2881  901A 20 F1        	jr nz,.NEXT_CHAR		; no - draw all 5 chars of current name					;901a	20 f1
2882  901C E5           	push hl					; save hl - next name's 1st char						;901c	e5
2883  901D D5           	push de					; save de - next destination address					;901d	d5
2884  901E 13           	inc de					; move destination 1 byte (4px) to the right			;901e	13
2885  901F 13           	inc de					; move destination 2 bytes (8px) total to the right		;901f	13
2886  9020 3E 3D        	ld a,'='				; equal sign to draw next to name						;9020	3e 3d
2887  9022 CD E9 98     	call DRAW_CHAR_GFX		; print/draw '=' into Buffer							;9022	cd e9 98
2888  9025 D1           	pop de					; restore de - destination address in buffer			;9025	d1
2889  9026 21 BB 00     	ld hl,(6*32)-5			; 6 lines down (minus 5 chars of name drawn)			;9026	21 bb 00
2890  9029 19           	add hl,de				; hl - destination in Buffer for next name				;9029	19
2891  902A EB           	ex de,hl				; de - destination in Buffer for next name				;902a	eb
2892  902B E1           	pop hl					; restore hl - next name chars source					;902b	e1
2893  902C F1           	pop af					; restore a - names counter								;902c	f1
2894  902D 3D           	dec a					; decrement counter - check if 0						;902d	3d
2895  902E 20 DA        	jr nz,.NEXT_NAME		; no - draw all 10 names								;902e	20 da
2896  9030              ; --
2897  9030 21 E0 96     	ld hl,VAR_HS_VALUES		; High Score values - 10 players * 5 digit each			;9030	21 e0 96
2898  9033 11 D2 AA     	ld de,VSCRBUF+(2*32)+18	; Buffer text coordinates (32,72)px - text start		;9033	11 d2 aa
2899  9036 3E 0A        	ld a,10					; 10 score values for 10 players						;9036	3e 0a
2900  9038              .NEXT_VALUE:
2901  9038 F5           	push af					; save a - players counter								;9038	f5
2902  9039 3E 05        	ld a,5					; 5 digits of score										;9039	3e 05
2903  903B              .NEXT_DIGIT:
2904  903B F5           	push af					; save a - digits counter								;903b	f5
2905  903C D5           	push de					; save de - destination coord in Offscreen Buffer		;903c	d5
2906  903D E5           	push hl					; save hl - address of current digit to draw			;903d	e5
2907  903E 7E           	ld a,(hl)				; a - digit value (0..9)								;903e	7e
2908  903F CD 89 98     	call DRAW_DIGIT_GFX		; print/draw digit into Buffer							;903f	cd 89 98
2909  9042 E1           	pop hl					; restore hl - addres of current digit just drawn		;9042	e1
2910  9043 D1           	pop de					; restore de - destination address in Buffer			;9043	d1
2911  9044 23           	inc hl					; hl - next char to draw								;9044	23
2912  9045 13           	inc de					; de - next destination address							;9045	13
2913  9046 F1           	pop af					; restore a - score digits counter						;9046	f1
2914  9047 3D           	dec a					; decrement counter - check if 0						;9047	3d
2915  9048 20 F1        	jr nz,.NEXT_DIGIT		; no - draw all 5 digits of current Score				;9048	20 f1
2916  904A E5           	push hl					; save hl - next score 1st digit						;904a	e5
2917  904B 21 BB 00     	ld hl,(6*32)-5			; 6 lines down (minus 5 chars of score drawn)			;904b	21 bb 00
2918  904E 19           	add hl,de				; hl - destination in Buffer for next score				;904e	19
2919  904F EB           	ex de,hl				; de - destination in Buffer for next score				;904f	eb
2920  9050 E1           	pop hl					; restore hl - next score 1st digit						;9050	e1
2921  9051 F1           	pop af					; restore a - score values counter						;9051	f1
2922  9052 3D           	dec a					; decrement counter - check if 0						;9052	3d
2923  9053 20 E3        	jr nz,.NEXT_VALUE		; no - draw all 10 scores								;9053	20 e3
2924  9055 C9           	ret						; ----------------- End of Proc ----------------------- ;9055	c9
2925  9056
2926  9056
2927  9056
2928  9056              GAME_END:
2929  9056              ; -- check end of mission reason
2930  9056 21 5E 94     	ld hl,TXT_ALL_HEL_DESTROYED	; All Helicopters Destroyed text					;9056	21 5e 94
2931  9059 B7           	or a					; chack if reason 0 									;9059	b7
2932  905A 28 0A        	jr z,l9066h				; yes - show Mission Over screen 						;905a	28 0a
2933  905C 21 7D 94     	ld hl,TXT_TIME_UP		; Time Up text 											;905c	21 7d 94
2934  905F FE 01        	cp 1					; check if reason 1 									;905f	fe 01
2935  9061 28 03        	jr z,l9066h				; yes - show Mission Over screen						;9061	28 03
2936  9063              ; -- reason = 2 - No Prisoners Left to Rescue
2937  9063 21 99 94     	ld hl,TXT_NO_PRIS_LEFT	; No Prisoners Left To Rescue							;9063	21 99 94
2938  9066              l9066h:
2939  9066 E5           	push hl					; save hl - Reason text									;9066	e5
2940  9067              ; -- clear screen buffer and reset bytes per line value
2941  9067 21 20 00     	ld hl,32				; 32 bytes per screen line 								;9067	21 20 00
2942  906A 22 AB 98     	ld (BYTES_PER_LINE),hl	; restore 32 bytes per line (inside Game was 44)		;906a	22 ab 98
2943  906D CD 46 94     	call CLEAR_SCRBUF_GFX	; clear Offscreen Bufferr 								;906d	cd 46 94
2944  9070              ; -- print Mission Over screen with reason and Score into Offscreen Buffer
2945  9070 21 B9 94     	ld hl,TXT_MISSION_OVER	; Mission Over text										;9070	21 b9 94
2946  9073 11 80 AA     	ld de,VSCRBUF			; dst - Offscreen Buffer								;9073	11 80 aa
2947  9076 CD 23 94     	call PRINT_TEXT_GFX		; print Mission Over text in Offscreen Buffer			;9076	cd 23 94
2948  9079 E1           	pop hl					; restore hl - Game End Reason text						;9079	e1
2949  907A CD 23 94     	call PRINT_TEXT_GFX		; print Reason text in Offscreen Buffer					;907a	cd 23 94
2950  907D 21 D3 94     	ld hl,TXT_YOUR_SCORE	; Your Score Was text									;907d	21 d3 94
2951  9080 CD 23 94     	call PRINT_TEXT_GFX		; print Your Score Was text in Offscreen Buffer			;9080	cd 23 94
2952  9083              ; -- after above calls de is equal to Buffer address of start next line below printed text
2953  9083 21 15 00     	ld hl,21				; 21 bytes (44 pixels) do add							;9083	21 15 00
2954  9086 19           	add hl,de				; hl - address in Offscreen Buffer with offset			;9086	19
2955  9087              ; -- print into Buffer 5 digits of Player Score
2956  9087 EB           	ex de,hl				; de - destination addres for Player Score				;9087	eb
2957  9088 21 12 78     	ld hl,SCORE_DIGITS		; Digits of Player current Score						;9088	21 12 78
2958  908B 3E 05        	ld a,5					; 5 digits of Score Value								;908b	3e 05
2959  908D              .NEXT_DIGIT:
2960  908D F5           	push af					; save a - score digits counter							;908d	f5
2961  908E E5           	push hl					; save hl - address of current digit to draw			;908e	e5
2962  908F D5           	push de					; save de - destination address in Buffer				;908f	d5
2963  9090 7E           	ld a,(hl)				; a - digit value										;9090	7e
2964  9091 CD 89 98     	call DRAW_DIGIT_GFX		; print/draw digit into buffer							;9091	cd 89 98
2965  9094 D1           	pop de					; restore de - destination address in Buffer			;9094	d1
2966  9095 E1           	pop hl					; save hl - address of current digit just drawn			;9095	e1
2967  9096 F1           	pop af					; save a - score digits counter							;9096	f1
2968  9097 23           	inc hl					; next digit to draw									;9097	23
2969  9098 13           	inc de					; destination address for next digit					;9098	13
2970  9099 3D           	dec a					; decrement digits counter - check if 0					;9099	3d
2971  909A 20 F1        	jr nz,.NEXT_DIGIT		; no - draw all 5 digits of Player Score				;909a	20 f1
2972  909C              ; -- draw buffer on Screen with Red Frame Animation and wait
2973  909C CD 0E 93     	call SHOW_SCR_WAIT		; show Game End Screen (anim) and wait for key I or P	;909c	cd 0e 93
2974  909F CD DC 90     	call CHECK_HIGHSCORE	; check if Player has top 10 score and get Name if so	;909f	cd dc 90
2975  90A2 CA CB 8F     	jp z,GAME_START_SCREEN	; Z=1 no place in High Score Table for Player - start	;90a2	ca cb 8f
2976  90A5              ; -- player had Score enough to take place in top 10 table - show High Scores Screen
2977  90A5 F5           	push af					; save af - index in HS Table							;90a5	f5
2978  90A6 CD FF 8F     	call PRINT_HIGH_SCORES	; show High Score Table with Red Rect animation			;90a6	cd ff 8f
2979  90A9 F1           	pop af					; restore af - index in HS Table						;90a9	f1
2980  90AA              ; -- highlight player's score - calculate screen position
2981  90AA 21 C5 AA     	ld hl,VSCRBUF+(32*2)+5	; 1st HS entry screen position (5,8)px (Buffer)			;90aa	21 c5 aa
2982  90AD 11 C0 00     	ld de,6*32				; 6 lines gap beetween Score entries on screen			;90ad	11 c0 00
2983  90B0
2984  90B0              .ADD_6_LINES:
2985  90B0 3D           	dec a					; decrement HS entry index								;90b0	3d
2986  90B1 28 03        	jr z,.DRAW_ARROW		; check if 0 - address calculated 						;90b1	28 03
2987  90B3 19           	add hl,de				; add 6 lines 											;90b3	19
2988  90B4 18 FA        	jr .ADD_6_LINES			; continue adding										;90b4	18 fa
2989  90B6              .DRAW_ARROW:
2990  90B6 11 1F 00     	ld de,31				; 31 bytes per screen line (1 byte handled inproc)		;90b6	11 1f 00
2991  90B9 36 00        	ld (hl),$00				; draw 4 background piksels [ ][ ][ ][ ]				;90b9	36 00
2992  90BB 23           	inc hl					; next VRAM address										;90bb	23
2993  90BC 36 50        	ld (hl),$50				; draw 4 pixels [X][X][ ][ ]							;90bc	36 50
2994  90BE 19           	add hl,de				; next line on screen									;90be	19
2995  90BF 36 00        	ld (hl),$00				; draw 4 background piksels [ ][ ][ ][ ]				;90bf	36 00
2996  90C1 23           	inc hl					; next VRAM address										;90c1	23
2997  90C2 36 54        	ld (hl),$54				; draw 4 pixels [X][X][X][ ]							;90c2	36 54
2998  90C4 19           	add hl,de				; next line on screen									;90c4	19
2999  90C5 36 55        	ld (hl),$55				; draw 4 pixels [X][X][X][X]							;90c5	36 55
3000  90C7 23           	inc hl					; next VRAM address										;90c7	23
3001  90C8 36 55        	ld (hl),$55				; draw 4 pixels [X][X][X][X]							;90c8	36 55
3002  90CA 19           	add hl,de				; next line on screen									;90ca	19
3003  90CB 36 00        	ld (hl),$00				; draw 4 pixels [ ][ ][ ][ ]							;90cb	36 00
3004  90CD 23           	inc hl					; next VRAM address										;90cd	23
3005  90CE 36 54        	ld (hl),$54				; draw 4 pixels [X][X][X][ ]							;90ce	36 54
3006  90D0 19           	add hl,de				; next line on screen									;90d0	19
3007  90D1 36 00        	ld (hl),$00				; draw 4 pixels [ ][ ][ ][ ]							;90d1	36 00
3008  90D3 23           	inc hl					; next VRAM address										;90d3	23
3009  90D4 36 50        	ld (hl),$50				; draw 4 pixels [X][X][ ][ ]							;90d4	36 50
3010  90D6 CD 0E 93     	call SHOW_SCR_WAIT		;90d6	cd 0e 93 	. . .
3011  90D9 C3 CB 8F     	jp GAME_START_SCREEN		;90d9	c3 cb 8f 	. . .
3012  90DC
3013  90DC
3014  90DC
3015  90DC              CHECK_HIGHSCORE:
3016  90DC 11 E0 96     	ld de,VAR_HS_VALUES	; High Scores Values table									;90dc	11 e0 96
3017  90DF 06 0A        	ld b,10				; 10 values for 10 players									;90df	06 0a
3018  90E1 0E 01        	ld c,1				; High Score index being compared 							;90e1	0e 01
3019  90E3              .CMP_ENTRY:
3020  90E3 21 12 78     	ld hl,SCORE_DIGITS	; Digits of Player current Score							;90e3	21 12 78
3021  90E6 1A           	ld a,(de)			; 1st digit of Score from High Scores Table					;90e6	1a
3022  90E7 BE           	cp (hl)				; copmare with 1st digit of Player's Score					;90e7	be
3023  90E8 FA 0F 91     	jp m,FOUND_DIG_1	; less - found position for Player Score					;90e8	fa 0f 91
3024  90EB 28 02        	jr z,.CMP_2ND_DIGIT	; equal - copmare 2nd digits								;90eb	28 02
3025  90ED 18 14        	jr .NEXT_SKIP_5		; greater - compare next HS table entry (skip 5 digits)		;90ed	18 14
3026  90EF              ; -- 1st digits from High Score entry and Player Score are EQUAL
3027  90EF              .CMP_2ND_DIGIT:
3028  90EF 23           	inc hl				; hl - address of 2nd digit of Player Score					;90ef	23
3029  90F0 13           	inc de				; de - address of 2nd digit of HS entry Score				;90f0	13
3030  90F1 1A           	ld a,(de)			; 2nd digit of Score from High Scores Table					;90f1	1a
3031  90F2 BE           	cp (hl)				; copmare with 2nd digit of Player's Score					;90f2	be
3032  90F3 FA 0E 91     	jp m,FOUND_DIG_2	; less - found position for Player Score					;90f3	fa 0e 91
3033  90F6 28 02        	jr z,.CMP_3RD_DIGIT	; equal - compare 3rd digits								;90f6	28 02
3034  90F8 18 0A        	jr .NEXT_SKIP_4		; greater - compare next HS table entry (skip 4 digits)		;90f8	18 0a
3035  90FA              ; -- 2nd digits from High Score entry and Player Score are EQUAL
3036  90FA              .CMP_3RD_DIGIT:
3037  90FA 23           	inc hl				; hl - address of 3rd digit of Player Score					;90fa	23
3038  90FB 13           	inc de				; de - address of 3rd digit of HS entry Score				;90fb	13
3039  90FC 1A           	ld a,(de)			; 3rd digit of Score from High Scores Table					;90fc	1a
3040  90FD BE           	cp (hl)				; copmare with 3rd digit of Player's Score					;90fd	be
3041  90FE FA 0D 91     	jp m,FOUND_DIG_3	; less - found position for Player Score					;90fe	fa 0d 91
3042  9101 18 02        	jr .NEXT_SKIP_3		; greater or equal - compare next HS entry (skip 3 digits)	;9101	18 02
3043  9103
3044  9103              .NEXT_SKIP_5:
3045  9103 13           	inc de				; skip 1 digit in High Score table							;9103	13
3046  9104              .NEXT_SKIP_4:
3047  9104 13           	inc de				; skip 1 digit in High Score table							;9104	13
3048  9105              .NEXT_SKIP_3:
3049  9105 13           	inc de				; skip 1 digit in High Score table							;9105	13
3050  9106 13           	inc de				; skip 1 digit in High Score table							;9106	13
3051  9107 13           	inc de				; de - address of next entry in High Score table			;9107	13
3052  9108 0C           	inc c				; incrase High Score index									;9108	0c
3053  9109 10 D8        	djnz .CMP_ENTRY		; compare next entry until all 10 are compared				;9109	10 d8
3054  910B
3055  910B              ; -- all values in High Score table are equal or greater than Player Score
3056  910B AF           	xor a				; set return value 0 and CPU flags 							;910b	af
3057  910C C9           	ret					; ---------------- End of Proc (0) ------------------------ ;910c	c9
3058  910D
3059  910D              ; -- Found in HS table entry with vale less than current Player Score
3060  910D              ; -- fix de to point to start of entry
3061  910D              FOUND_DIG_3:
3062  910D 1B           	dec de				; de - address of 2nd digit of entry in HS Table 			;910d	1b
3063  910E              FOUND_DIG_2:
3064  910E 1B           	dec de				; de - address of 1st digit of entry in HS Table 			;910e	1b
3065  910F              FOUND_DIG_1:
3066  910F              ; -- if it's 10th place just override HS entry, if less we need to insert new entry
3067  910F 79           	ld a,c				; a - index in High Score Table								;910f	79
3068  9110 F5           	push af				; save a - table index 										;9110	f5
3069  9111 D5           	push de				; save de - address of entry value							;9111	d5
3070  9112 FE 0A        	cp 10				; is this last (10th) place?								;9112	fe 0a
3071  9114 28 13        	jr z,COPY_PLAYER_SCORE	; yes - skip inserting empty entry						;9114	28 13
3072  9116              ;-- insert empty entry - shift down all entries below index
3073  9116 47           	ld b,a				; b - index to insert 										;9116	47
3074  9117 3E 0A        	ld a,10				; 10 entries on list										;9117	3e 0a
3075  9119 90           	sub b				; a - numbers of entries to shift down						;9119	90
3076  911A 47           	ld b,a				; b - numbers of entries to shift down						;911a	47
3077  911B              ; -- shift High Score Values
3078  911B C5           	push bc				; save b - number of entries								;911b	c5
3079  911C 21 08 97     	ld hl,VAR_HS_VALUE_9; hl - address of 9th value in HS Table  					;911c	21 08 97
3080  911F CD F6 92     	call MOVE_HS_ENTRIES; move High Score entries down 								;911f	cd f6 92
3081  9122              ; -- shift High Score Names
3082  9122 C1           	pop bc				; restore b - number of entries								;9122	c1
3083  9123 21 D6 96     	ld hl,TXT_HS_NAME_9	; hl - address of 9th name in HS Table						;9123	21 d6 96
3084  9126 CD F6 92     	call MOVE_HS_ENTRIES; move High Score entries down								;9126	cd f6 92
3085  9129              COPY_PLAYER_SCORE:
3086  9129              ; -- copy Player Score to entry of High Score Table
3087  9129 D1           	pop de				; dst - address of High Score entry 						;9129	d1
3088  912A D5           	push de				; save de - addres of High Score entry						;912a	d5
3089  912B 21 12 78     	ld hl,SCORE_DIGITS	; Digits of Player current Score							;912b	21 12 78
3090  912E 01 05 00     	ld bc,5				; 5 digits of Score Value									;912e	01 05 00
3091  9131 ED B0        	ldir				; copy digits to High Score Table							;9131	ed b0
3092  9133              ; -- calculate address of Name in High Score Names Table
3093  9133 E1           	pop hl				; address of High Score Values entry 						;9133	e1
3094  9134 11 32 00     	ld de,50			; 50 bytes offset beetween Names and Values in HS Table		;9134	11 32 00
3095  9137 B7           	or a				; clear Carry flag											;9137	b7
3096  9138 ED 52        	sbc hl,de			; hl - address of High Score Name entry						;9138	ed 52
3097  913A E5           	push hl				; save hl - address of HS entry to place Player name		;913a	e5
3098  913B              ; -- let Player name himself - draw Characters Table
3099  913B CD 46 94     	call CLEAR_SCRBUF_GFX	; clear Offscreen Buffer 								;913b	cd 46 94
3100  913E 21 EA 94     	ld hl,TXT_CHAR_TAB	; Characters Table text										;913e	21 ea 94
3101  9141 11 40 AB     	ld de,VSCRBUF+(6*32)+0	; screen position (0,6)px (Buffer)						;9141	11 40 ab
3102  9144 3E 05        	ld a,5				; 5 rows of characters to draw								;9144	3e 05
3103  9146              .NEXT_ROW:
3104  9146 F5           	push af				; save a - row counter										;9146	f5
3105  9147 CD 23 94     	call PRINT_TEXT_GFX	; print 1 row of Character Table into Offscreen Buffer		;9147	cd 23 94
3106  914A 23           	inc hl				; skip null terminator										;914a	23
3107  914B E5           	push hl				; save hl - address of next row 							;914b	e5
3108  914C 21 20 01     	ld hl,9*32			; 9 lines/pixels down										;914c	21 20 01
3109  914F 19           	add hl,de			; hl - new destination address in Buffer					;914f	19
3110  9150 EB           	ex de,hl			; de - new destination addres								;9150	eb
3111  9151 E1           	pop hl				; restore hl - next row of Charactes from Table				;9151	e1
3112  9152 F1           	pop af				; restore a - row counter									;9152	f1
3113  9153 3D           	dec a				; decrement counter - check if 0							;9153	3d
3114  9154 20 F0        	jr nz,.NEXT_ROW		; no - draw all 5 rows from Character Table					;9154	20 f0
3115  9156              ; -- draw rectangles/frames for 5 chars of Player Name (into Offscreen Buffer)
3116  9156 21 C2 B0     	ld hl,VSCRBUF+(50*32)+2	; screen position (8,50)px (Buffer)						;9156	21 c2 b0
3117  9159 01 06 00     	ld bc,6				; 6 bytes (24px) per 1 char 								;9159	01 06 00
3118  915C CD CA 92     	call DRAW_CHAR_FRAME; draw frame for 1st char									;915c	cd ca 92
3119  915F 09           	add hl,bc			; hl - dst address for next frame							;915f	09
3120  9160 CD CA 92     	call DRAW_CHAR_FRAME; draw frame for 2nd char									;9160	cd ca 92
3121  9163 09           	add hl,bc			; hl - dst address for next frame							;9163	09
3122  9164 CD CA 92     	call DRAW_CHAR_FRAME; draw frame for 3rd char									;9164	cd ca 92
3123  9167 09           	add hl,bc			; hl - dst address for next frame							;9167	09
3124  9168 CD CA 92     	call DRAW_CHAR_FRAME; draw frame for 4th char									;9168	cd ca 92
3125  916B 09           	add hl,bc			; hl - dst address for next frame							;916b	09
3126  916C CD CA 92     	call DRAW_CHAR_FRAME; draw frame for 5th char									;916c	cd ca 92
3127  916F              ; -- display screen
3128  916F CD 1B 93     	call ANIMATE_SCREEN	; show screen from Buffer with animation					;916f	cd 1b 93
3129  9172              ; -- reset buffer for player name (5 char) - fill with spaces and set current slot
3130  9172 21 0E 92     	ld hl,NAME_BUFFER	; address of 5 char buffer									;9172	21 0e 92
3131  9175 22 0A 92     	ld (SEL_CHAR_SLOT),hl	; set 1st char address as current slot					;9175	22 0a 92
3132  9178 11 0F 92     	ld de,NAME_BUFFER+1	; address + 1												;9178	11 0f 92
3133  917B 01 04 00     	ld bc,4				; 4 bytes to fill with ' ' (space)							;917b	01 04 00
3134  917E 36 20        	ld (hl),' '			; set 1rs char to ' ' (space)								;917e	36 20
3135  9180 ED B0        	ldir				; fill 4 bytes with ' '										;9180	ed b0
3136  9182              ; -- reset destination VRAM address where char will be drawn
3137  9182 21 84 76     	ld hl,VRAM+(52*32)+4; destination VRAM address (16,53)px of current slot char	;9182	21 84 76
3138  9185 22 0C 92     	ld (SEL_SLOT_VRAM),hl	; set as current VRAM for current Slot					;9185	22 0c 92
3139  9188              ; -- select first char form Table - that will be 'A'
3140  9188 AF           	xor a				; 0 based index in char table								;9188	af
3141  9189 32 09 92     	ld (SEL_SLOT_IDX),a	; set 'A' as selected char									;9189	32 09 92
3142  918C 3E 41        	ld a,'A'			; char 'A' is current selection								;918c	3e 41
3143  918E 32 08 92     	ld (SEL_CHAR),a		; set as selected char										;918e	32 08 92
3144  9191              ; -- draw Frame around char 'A' on screen
3145  9191 21 81 70     	ld hl,VRAM+(4*32)+1	; screen coord (4,4)px										;9191	21 81 70
3146  9194 01 01 01     	ld bc,$0101			; bc - x,y coord in CHAR_TAB (1 based)						;9194	01 01 01
3147  9197              DRAW_SEL_AND_WAIT:
3148  9197 CD CA 92     	call DRAW_CHAR_FRAME; draw frame around selected char							;9197	cd ca 92
3149  919A              DELAY_AND_WAIT:
3150  919A 11 00 60     	ld de,$6000			; delay parameter value 									;919a	11 00 60
3151  919D CD 1D 94     	call DELAY_DE		; wait delay												;919d	cd 1d 94
3152  91A0              .WAIT_FOR_KEY:
3153  91A0              ; -- test keys pressed - arrows doesn't require pressing CTRL key
3154  91A0 3A EF 68     	ld a,(KEYS_ROW_4)	; select Keyboard row 4 									;91a0	3a ef 68
3155  91A3 CB 5F        	bit 3,a				; check if key ',' is pressed (right arrow)					;91a3	cb 5f
3156  91A5 28 15        	jr z,MOV_SEL_RIGHT	; yes - move selection right								;91a5	28 15
3157  91A7 CB 6F        	bit 5,a				; check if key 'M' is pressed (left arrow)					;91a7	cb 6f
3158  91A9 28 15        	jr z,MOV_SEL_LEFT	; yes - move selection left									;91a9	28 15
3159  91AB CB 4F        	bit 1,a				; check if key '.' is pressed (up arrow)					;91ab	cb 4f
3160  91AD 28 15        	jr z,MOV_SEL_UP		; yes - move selection up									;91ad	28 15
3161  91AF CB 67        	bit 4,a				; check if key 'SPACE' is pressed (down arrow)				;91af	cb 67
3162  91B1 28 15        	jr z,MOV_SEL_DOWN	; yes - move selection down									;91b1	28 15
3163  91B3 3A BF 68     	ld a,(KEYS_ROW_6)	; select Keyboard row 6 									;91b3	3a bf 68
3164  91B6 CB 57        	bit 2,a				; check if 'RETURN' key is pressed 							;91b6	cb 57
3165  91B8 28 59        	jr z,CHAR_SELECTED	; yes - confirm selected char								;91b8	28 59
3166  91BA 18 E4        	jr .WAIT_FOR_KEY	; wait for one of defined keys								;91ba	18 e4
3167  91BC
3168  91BC              ; -- key ',' (comma) is pressed (right arrow)
3169  91BC              MOV_SEL_RIGHT:
3170  91BC 3E 01        	ld a,1				; offset to add to current char index (next char)			;91bc	3e 01
3171  91BE 18 0A        	jr MOV_SELECTION	; move current selection									;91be	18 0a
3172  91C0              ; -- key 'M' is pressed (left arrow)
3173  91C0              MOV_SEL_LEFT:
3174  91C0 3E 1D        	ld a,29				; offset to add to current char index (previos char)		;91c0	3e 1d
3175  91C2 18 06        	jr MOV_SELECTION	; move current selection									;91c2	18 06
3176  91C4              ; -- key '.' (dot) is pressed (up arrow)
3177  91C4              MOV_SEL_UP:
3178  91C4 3E 18        	ld a,24				; offset to add to current char index (above char)			;91c4	3e 18
3179  91C6 18 02        	jr MOV_SELECTION	; move current selection									;91c6	18 02
3180  91C8              ; -- key 'SPACE' is pressed (down arrow)
3181  91C8              MOV_SEL_DOWN:
3182  91C8 3E 06        	ld a,6				; offset to add to current char index (below char)			;91c8	3e 06
3183  91CA
3184  91CA
3185  91CA              ;*************************************************************************************
3186  91CA              ; Move Selection of Char from CHAR_TAB
3187  91CA              ; Char table has 30 chars/actions in grid (5 rows by 6 columns). Next selected index
3188  91CA              ; is calculated by current index plus A parameter modulo 30. If we want to move selection
3189  91CA              ; back or up we can still add constant and resulted index will be smaller then current.
3190  91CA              ; IN: a - offset to add to current char index: 1-right, 29-left, 24-up, 6-down
3191  91CA              ;     hl - current selection VRAM address
3192  91CA              ;     b - current selection X position in Grid
3193  91CA              ;     c - current selection Y position in Grid
3194  91CA              MOV_SELECTION:
3195  91CA F5           	push af				; save a - offset to add to current selection index			;91ca	f5
3196  91CB CD 9E 92     	call CLR_SEL_FRAME	; clear Frame for selected char								;91cb	cd 9e 92
3197  91CE F1           	pop af				; restore a - offset to add to current selection index		;91ce	f1
3198  91CF              .NEXT:
3199  91CF F5           	push af				; save a - offset to add to current selection index			;91cf	f5
3200  91D0 CD D9 91     	call SEL_NEXT_CHAR	; select next char and update related variables				;91d0	cd d9 91
3201  91D3 F1           	pop af				; restore a - offset to add to current selection index		;91d3	f1
3202  91D4 3D           	dec a				; decrement offset value - check if 0						;91d4	3d
3203  91D5 20 F8        	jr nz,.NEXT			; no - increment again as many times as needed 				;91d5	20 f8
3204  91D7 18 BE        	jr DRAW_SEL_AND_WAIT; draw new selection frame and wait for key					;91d7	18 be
3205  91D9
3206  91D9
3207  91D9              ;**********************************************************************************************
3208  91D9              ; Increments by 1 code ascii of selected char and update related variables:
3209  91D9              ; IN: hl - VRAM address of selection
3210  91D9              ;     b - X position in grid of selection
3211  91D9              ;     c - Y position in grid of selection
3212  91D9              SEL_NEXT_CHAR:
3213  91D9 00           	nop					; no operation												;91d9	00
3214  91DA 3A 08 92     	ld a,(SEL_CHAR)		; a - code of selected char									;91da	3a 08 92
3215  91DD 3C           	inc a				; increment code ('A'->'B'; 'B'->'C'; ...)					;91dd	3c
3216  91DE 32 08 92     	ld (SEL_CHAR),a		; store new selected char									;91de	32 08 92
3217  91E1 78           	ld a,b				; a - selection X position in Char Table Grid				;91e1	78
3218  91E2 FE 06        	cp 6				; check if it's last char in grid row						;91e2	fe 06
3219  91E4 28 07        	jr z,.NEXT_ROW		; yes - move selection to begin of next row					;91e4	28 07
3220  91E6              ; -- it is not last char in row - we can increment in the same row
3221  91E6 04           	inc b				; increment X position in row								;91e6	04
3222  91E7 23           	inc hl				; add 5 bytes (20px) to VRAM address						;91e7	23
3223  91E8 23           	inc hl				;															;91e8	23
3224  91E9 23           	inc hl				;															;91e9	23
3225  91EA 23           	inc hl				;															;91ea	23
3226  91EB 23           	inc hl				; hl - VRAM address of new selection						;91eb	23
3227  91EC C9           	ret					; ----------------- End of Proc --------------------------- ;91ec	c9
3228  91ED              ; -- next right position is outside of grid - move to next line
3229  91ED              .NEXT_ROW:
3230  91ED 06 01        	ld b,1				; new X position - 1st char in row							;91ed	06 01
3231  91EF 79           	ld a,c				; a - current Y position in grid							;91ef	79
3232  91F0 FE 05        	cp 5				; check if it's last row in Char Table Grid					;91f0	fe 05
3233  91F2 28 06        	jr z,.TOP			; yes - move selection to begin of 1st row					;91f2	28 06
3234  91F4 11 07 01     	ld de,(8*32)+7		; 8 lines and 28px from current VRAM coordinates			;91f4	11 07 01
3235  91F7 19           	add hl,de			; hl - VRAM address of new selection						;91f7	19
3236  91F8 0C           	inc c				; increment Y position in grid								;91f8	0c
3237  91F9 C9           	ret					; ----------------- End of Proc --------------------------- ;91f9	c9 	.
3238  91FA              .TOP:
3239  91FA 11 99 04     	ld de,(36*32)+25	; 36 lines and 100px offset to top-left char selection		;91fa	11 99 04
3240  91FD B7           	or a				; clear Carry flag											;91fd	b7
3241  91FE ED 52        	sbc hl,de			; hl - VRAM address of new selection (1st char - 'A')		;91fe	ed 52
3242  9200 0E 01        	ld c,1				; new Y position - 1st row (1st char already set above)		;9200	0e 01
3243  9202 3E 41        	ld a,'A'			; set new selected char to 'A'								;9202	3e 41
3244  9204 32 08 92     	ld (SEL_CHAR),a		; store new value											;9204	32 08 92
3245  9207 C9           	ret					; ----------------- End of Proc --------------------------- ;9207	c9 	.
3246  9208
3247  9208              ;*****************************************************************************************
3248  9208              ; Current selected char
3249  9208              SEL_CHAR:
3250  9208 00           	defb	0				;9208	00
3251  9209              SEL_SLOT_IDX:
3252  9209 00           	defb	0				;9209	00
3253  920A
3254  920A              ;*****************************************************************************************
3255  920A              ; Address of Current character slot where selected char will be stored
3256  920A              SEL_CHAR_SLOT:
3257  920A 00 00        	defw	0				;920a	00 00
3258  920C              ;*****************************************************************************************
3259  920C              ; Destination VRAM address where char will be drawn for current slot
3260  920C              SEL_SLOT_VRAM:
3261  920C 00 00        	defw	0				;920c	00 00
3262  920E
3263  920E              ;*****************************************************************************************
3264  920E              ; Buffer for 5 chars Player will chose while picking his Name for High Score entry
3265  920E              NAME_BUFFER:
3266  920E 00 00 00 00  	defb	0,0,0,0,0		;920e	00 00 00 00 00
3266  9212 00
3267  9213
3268  9213              ;**********************************************************************************************
3269  9213              ; User selected char (or action) from Char Table and confirmed it by presing RETURN
3270  9213              ; IN: hl - VRAM address of selection
3271  9213              ;     b - X position in grid of selection
3272  9213              ;     c - Y position in grid of selection
3273  9213              CHAR_SELECTED:
3274  9213 C5           	push bc				; save bc - selection X,Y position in grid					;9213	c5
3275  9214 E5           	push hl				; save hl - VRAM address of selection						;9214	e5
3276  9215 3A 08 92     	ld a,(SEL_CHAR)		; a - selected char or action 								;9215	3a 08 92
3277  9218              ; -- actions are displayed like '.'(dot), SPC, DEL, END	but in SEL_CHAR stored as simple char codes
3278  9218              ; check if selected char is one above regular 'Z'
3279  9218 FE 5B        	cp $5b				; check if '.'(dot) is selected								;9218	fe 5b
3280  921A 28 3A        	jr z,DOT_SELECTED	; yes - store '.' in current char slot and buffer			;921a	28 3a
3281  921C FE 5C        	cp $5c				; check if SPC (space) is selected							;921c	fe 5c
3282  921E 28 3A        	jr z,SPACE_SELECTED	; yes - store ' ' in current char slot and buffer			;921e	28 3a
3283  9220 FE 5D        	cp $5d				; check if DEL (action) is selected							;9220	fe 5d
3284  9222 28 3A        	jr z,DEL_SELECTED	; yes - delete char in current slot and move back slot ptr	;9222	28 3a
3285  9224 FE 5E        	cp $5e				; check if END (action) is selcted							;9224	fe 5e
3286  9226 28 68        	jr z,END_SELECTED	; yes - store name in High Score Table						;9226	28 68
3287  9228
3288  9228              ; regular char was selected 'A'..'Z'
3289  9228              STORE_CHAR:
3290  9228 2A 0A 92     	ld hl,(SEL_CHAR_SLOT)	; hl - address in Name Buffer for this char 			;9228	2a 0a 92
3291  922B 77           	ld (hl),a			; store selected char 										;922b	77
3292  922C ED 5B 0C 92  	ld de,(SEL_SLOT_VRAM)	; de - destination VRAM addres to draw new char			;922c	ed 5b 0c 92
3293  9230 CD E9 98     	call DRAW_CHAR_GFX	; print/draw char on Screen									;9230	cd e9 98
3294  9233 3A 09 92     	ld a,(SEL_SLOT_IDX)	; a - current index of slot for char (0..4)					;9233	3a 09 92
3295  9236 FE 04        	cp 4				; check if it was last (5th) char							;9236	fe 04
3296  9238 20 05        	jr nz,NEXT_CHAR_SLOT; no - move destination to next slot						;9238	20 05
3297  923A              CHAR_SEL_EXIT:
3298  923A E1           	pop hl				; restore hl - VRAM address of selection					;923a	e1
3299  923B C1           	pop bc				; restore bc - selection X,Y position in grid				;923b	c1
3300  923C C3 9A 91     	jp DELAY_AND_WAIT	; go back to loop waiting for key							;923c	c3 9a 91
3301  923F              NEXT_CHAR_SLOT:
3302  923F 3C           	inc a				; increment char slot index									;923f	3c
3303  9240 32 09 92     	ld (SEL_SLOT_IDX),a	; store as next slot										;9240	32 09 92
3304  9243 2A 0A 92     	ld hl,(SEL_CHAR_SLOT)	; address of char slot in buffer						;9243	2a 0a 92
3305  9246 23           	inc hl				; increment address to point next char 						;9246	23
3306  9247 22 0A 92     	ld (SEL_CHAR_SLOT),hl	; store as current address								;9247	22 0a 92
3307  924A 2A 0C 92     	ld hl,(SEL_SLOT_VRAM)	; VRAM address where char is drawn on screen			;924a	2a 0c 92
3308  924D 01 06 00     	ld bc,6				; 6 bytes (24px) beetween slots on screen 					;924d	01 06 00
3309  9250 09           	add hl,bc			; calculate new VRAM address								;9250	09
3310  9251 22 0C 92     	ld (SEL_SLOT_VRAM),hl	; store as current VRAM address							;9251	22 0c 92
3311  9254 18 E4        	jr CHAR_SEL_EXIT	; exit and go back to loop									;9254	18 e4
3312  9256
3313  9256              DOT_SELECTED:
3314  9256 3E 2E        	ld a,'.'			; set '.' (dot) as selected char							;9256	3e 2e
3315  9258 18 CE        	jr STORE_CHAR		; store '.' in char slot and buffer							;9258	18 ce
3316  925A
3317  925A              SPACE_SELECTED:
3318  925A 3E 20        	ld a,' '			; set ' ' (space) as selected char							;925a	3e 20
3319  925C 18 CA        	jr STORE_CHAR		; store '.' in char slot and buffer							;925c	18 ca
3320  925E
3321  925E              DEL_SELECTED:
3322  925E 3E 20        	ld a,' '			; space char to draw in current slot						;925e	3e 20
3323  9260 ED 5B 0C 92  	ld de,(SEL_SLOT_VRAM)	; de - destination VRAM address							;9260	ed 5b 0c 92
3324  9264 D5           	push de				; save de - VRAM of current slot							;9264	d5
3325  9265 CD E9 98     	call DRAW_CHAR_GFX	; print/draw char on Screen									;9265	cd e9 98
3326  9268 2A 0A 92     	ld hl,(SEL_CHAR_SLOT)	; hl - address of current char slot						;9268	2a 0a 92
3327  926B 36 20        	ld (hl),' '			; clear character in slot									;926b	36 20
3328  926D D1           	pop de				; restore de - VRAM of current slot							;926d	d1
3329  926E 3A 09 92     	ld a,(SEL_SLOT_IDX)	; current slot index										;926e	3a 09 92
3330  9271 B7           	or a				; check if 0 (1st char slot)								;9271	b7
3331  9272 28 C6        	jr z,CHAR_SEL_EXIT	; yes - exit and go back to loop							;9272	28 c6
3332  9274              ; -- it was not 1stslot we can move selection to previous one
3333  9274 3D           	dec a				; decrement current slot index								;9274	3d
3334  9275 32 09 92     	ld (SEL_SLOT_IDX),a	; store as selected slot index								;9275	32 09 92
3335  9278 2B           	dec hl				; update new address of current slot 						;9278	2b
3336  9279 36 20        	ld (hl),' '			; clear character in slot									;9279	36 20
3337  927B 22 0A 92     	ld (SEL_CHAR_SLOT),hl	; store address of current slot							;927b	22 0a 92
3338  927E EB           	ex de,hl			; hl - VRAM of current slot									;927e	eb
3339  927F 11 06 00     	ld de,6				; 6 bytes (24px) beetween slots on screen					;927f	11 06 00
3340  9282 B7           	or a				; clear Carry flag											;9282	b7
3341  9283 ED 52        	sbc hl,de			; substract 6 bytes from previous VRAM address				;9283	ed 52
3342  9285 22 0C 92     	ld (SEL_SLOT_VRAM),hl	; store updated VRAM of current slot					;9285	22 0c 92
3343  9288 EB           	ex de,hl			; de - deestination VRAM to draw char						;9288	eb
3344  9289 3E 20        	ld a,' '			; space char to draw										;9289	3e 20
3345  928B CD E9 98     	call DRAW_CHAR_GFX	; draw char on Screen										;928b	cd e9 98
3346  928E 18 AA        	jr CHAR_SEL_EXIT	; exit and go back to loop									;928e	18 aa
3347  9290
3348  9290              END_SELECTED:
3349  9290 E1           	pop hl				; take out from Stack Pointer (no longer needed) value		;9290	e1
3350  9291 C1           	pop bc				; take out from Stack Pointer (no longer needed) value		;9291	c1
3351  9292 D1           	pop de				; de - address of HS entry to place Player name				;9292	d1
3352  9293 21 0E 92     	ld hl,NAME_BUFFER	; hl - address of buffer with player name					;9293	21 0e 92
3353  9296 01 05 00     	ld bc,5				; 5 chars of name (space trailed)							;9296	01 05 00
3354  9299 ED B0        	ldir				; copy name to High Score Table								;9299	ed b0
3355  929B F1           	pop af				; restore a - index in HighScore Table						;929b	f1
3356  929C B7           	or a				; set Flags for value										;929c	b7
3357  929D C9           	ret					; --------------- End of Proc (index) ---------------------	;929d	c9
3358  929E
3359  929E              ;***************************************************************************************
3360  929E              ; Draw Rectangle/Frame for selected char using background color (Clear)
3361  929E              CLR_SEL_FRAME:
3362  929E E5           	push hl				; save hl - VRAM address of current selection				;929e	e5
3363  929F C5           	push bc				; save bc - current selection XY position in Table			;929f	c5
3364  92A0 11 1C 00     	ld de,28			; 28 bytes per line (4 handled in draw routine)				;92a0	11 1c 00
3365  92A3 CD BA 92     	call CLR_FRAME_HLINE; clear top line of rectangle								;92a3	cd ba 92
3366  92A6 3E 07        	ld a,7				; 7 lines/px height											;92a6	3e 07
3367  92A8 01 04 00     	ld bc,4				; 4 bytes (16px) width										;92a8	01 04 00
3368  92AB              .NEXT_LINE:
3369  92AB 36 00        	ld (hl),0			; clear left edge [ ][ ][ ][ ]								;92ab	36 00
3370  92AD 09           	add hl,bc			; hl - address of right edge								;92ad	09
3371  92AE 36 00        	ld (hl),0			; clear right edge [ ][ ][ ][ ]								;92ae	36 00
3372  92B0 19           	add hl,de			; move destination to next line								;92b0	19
3373  92B1 3D           	dec a				; decrement line counter - check if 0						;92b1	3d
3374  92B2 20 F7        	jr nz,.NEXT_LINE	; no - clear all 7 lines									;92b2	20 f7
3375  92B4 CD BA 92     	call CLR_FRAME_HLINE; clear bottom line of rectangle							;92b4	cd ba 92
3376  92B7 C1           	pop bc				; restore bc - current selection XY position in Table		;92b7	c1
3377  92B8 E1           	pop hl				; restore hl - VRAM address of current selection			;92b8	e1
3378  92B9 C9           	ret					; ------------------- End of Proc ------------------------- ;92b9	c9
3379  92BA
3380  92BA              ;***************************************************************************************
3381  92BA              ; Clear Horizontal Frame Line - 24px
3382  92BA              CLR_FRAME_HLINE:
3383  92BA 36 00        	ld (hl),000h		; draw pixels [ ][ ][ ][ ]									;92ba	36 00
3384  92BC 23           	inc hl				; next address on Screen									;92bc	23
3385  92BD 36 00        	ld (hl),000h		; draw pixels [ ][ ][ ][ ]									;92bd	36 00
3386  92BF 23           	inc hl				; next address on Screen									;92bf	23
3387  92C0 36 00        	ld (hl),000h		; draw pixels [ ][ ][ ][ ]									;92c0	36 00
3388  92C2 23           	inc hl				; next address on Screen									;92c2	23
3389  92C3 36 00        	ld (hl),000h		; draw pixels [ ][ ][ ][ ]									;92c3	36 00
3390  92C5 23           	inc hl				; next address on Screen									;92c5	23
3391  92C6 36 00        	ld (hl),000h		; draw pixels [ ][ ][ ][ ]									;92c6	36 00
3392  92C8 19           	add hl,de			; add 28 - set address to next line							;92c8	19
3393  92C9 C9           	ret					; ------------------- End of Proc ------------------------- ;92c9	c9
3394  92CA
3395  92CA              ;**************************************************************************************
3396  92CA              ; Draw Rectangle/Frame for char Player will pick as his name
3397  92CA              ; IN: hl - destination address in Offscreen Buffer
3398  92CA              DRAW_CHAR_FRAME:
3399  92CA E5           	push hl				; save hl - address in Offscreeen Buffer					;92ca	e5
3400  92CB C5           	push bc				; save bc - number of bytes per Char Frame 					;92cb	c5
3401  92CC 11 1C 00     	ld de,28			; 28 bytes per line (4 handled by draw routine)				;92cc	11 1c 00
3402  92CF CD E6 92     	call DRAW_FRAME_HLINE	; draw top line of rectangle							;92cf	cd e6 92
3403  92D2 01 04 00     	ld bc,4				; 4 bytes (16px) width										;92d2	01 04 00
3404  92D5 3E 07        	ld a,7				; 7 lines/px height											;92d5	3e 07
3405  92D7              .NEXT_LINE:
3406  92D7 36 10        	ld (hl),$10			; draw left edge [ ][X][ ][ ]								;92d7	36 10
3407  92D9 09           	add hl,bc			; hl - address of right edge								;92d9	09
3408  92DA 36 10        	ld (hl),$10			; draw right edge [ ][X][ ][ ]								;92da	36 10
3409  92DC 19           	add hl,de			; move destination to next line								;92dc	19
3410  92DD 3D           	dec a				; decrement line counter - check if 0						;92dd	3d
3411  92DE 20 F7        	jr nz,.NEXT_LINE	; no - dlaww all 7 lines 									;92de	20 f7
3412  92E0 CD E6 92     	call DRAW_FRAME_HLINE	; draw bottom line of rectangle							;92e0	cd e6 92
3413  92E3 C1           	pop bc				; restore bc - number of bytes per Char Frame					;92e3	c1
3414  92E4 E1           	pop hl				; restore hl - address in Offscreen Buffer					;92e4	e1
3415  92E5 C9           	ret					; ------------------ End of Proc --------------------------	;92e5	c9
3416  92E6
3417  92E6
3418  92E6              ;***************************************************************************************
3419  92E6              ; Draw Horizontal Frame Line - 24px
3420  92E6              DRAW_FRAME_HLINE:
3421  92E6 36 15        	ld (hl),$15			; draw pixels [ ][X][X][X]									;92e6	36 15
3422  92E8 23           	inc hl				; next address in Buffer									;92e8	23
3423  92E9 36 55        	ld (hl),$55			; draw pixels [X][X][X][X]									;92e9	36 55
3424  92EB 23           	inc hl				; next address in Buffer									;92eb	23
3425  92EC 36 55        	ld (hl),055h		; draw pixels [X][X][X][X]									;92ec	36 55
3426  92EE 23           	inc hl				; next address in Buffer									;92ee	23
3427  92EF 36 55        	ld (hl),055h		; draw pixels [X][X][X][X]									;92ef	36 55
3428  92F1 23           	inc hl				; next address in Buffer									;92f1	23
3429  92F2 36 50        	ld (hl),050h		; draw pixels [X][X][ ][ ]									;92f2	36 50
3430  92F4 19           	add hl,de			; add 28 - set address to next line							;92f4	19
3431  92F5 C9           	ret					; -------------------- End of Proc ------------------------ ;92f5	c9
3432  92F6
3433  92F6              ;****************************************************************************************
3434  92F6              ; Move High Score Entries
3435  92F6              ; Used to shift values and names in Hight Score Table in order to make place for new Player entry.
3436  92F6              ; IN: hl - address of 1st entry to move down
3437  92F6              ;     b - number of entries to move
3438  92F6              MOVE_HS_ENTRIES:
3439  92F6 C5           	push bc				; save b - entries counter									;92f6	c5
3440  92F7 E5           	push hl				; save hl - entry to move down on list						;92f7	e5
3441  92F8 E5           	push hl				; move hl to de												;92f8	e5
3442  92F9 D1           	pop de				; de - entry addres 										;92f9	d1
3443  92FA 13           	inc de				; increment addres by 5 bytes in total						;92fa	13
3444  92FB 13           	inc de				;															;92fb	13
3445  92FC 13           	inc de				;															;92fc	13
3446  92FD 13           	inc de				;															;92fd	13
3447  92FE 13           	inc de				; de - destination - next entry in table					;92fe	13
3448  92FF 01 05 00     	ld bc,5				; 5 bytes to copy (1 entry)									;92ff	01 05 00
3449  9302 ED B0        	ldir				; copy entry to next position								;9302	ed b0
3450  9304 E1           	pop hl				; restore hl - adres of entry just copied					;9304	e1
3451  9305 2B           	dec hl				; decrement address by 5 bytes in total 					;9305	2b
3452  9306 2B           	dec hl				;															;9306	2b
3453  9307 2B           	dec hl				;															;9307	2b
3454  9308 2B           	dec hl				;															;9308	2b
3455  9309 2B           	dec hl				; hl - address of previous entry							;9309	2b
3456  930A C1           	pop bc				; restor b - etres to move									;930a	c1
3457  930B 10 E9        	djnz MOVE_HS_ENTRIES; decrement counter - check if all moved 					;930b	10 e9
3458  930D C9           	ret					; ------------------- End of Proc ------------------------- ;930d	c9
3459  930E
3460  930E
3461  930E              ;****************************************************************************************
3462  930E              ; Make transition to Screen already drawn in Offscreen Buffer
3463  930E              SHOW_SCR_WAIT:
3464  930E CD 1B 93     	call ANIMATE_SCREEN	; show screen drawn in Buffer with animation				;930e	cd 1b 93
3465  9311 CD 0F 94     	call CHECK_STARTUP	; check keys I,P (20 times) and jump to routine if pressed	;9311	cd 0f 94
3466  9314 CD 0F 94     	call CHECK_STARTUP	; check keys I,P (20 times) and jump to routine if pressed	;9314	cd 0f 94
3467  9317 CD 0F 94     	call CHECK_STARTUP	; check keys I,P (20 times) and jump to routine if pressed	;9317	cd 0f 94
3468  931A C9           	ret					; ------------------- End of Proc (no key pressed) -------- ;931a	c9
3469  931B
3470  931B              ;****************************************************************************************
3471  931B              ; Red Frame Animation
3472  931B              ; * PHASE 1: Fill screen to red by drawing 16 rectangles (without fill) outside in.
3473  931B              ; Every rectangle has border 2px height (top and bottom) and 4px (1 byte) width
3474  931B              ; (left and right). Every next rectangle is smaller than previous by border dimensions
3475  931B              ; what leads to fill whole screen.
3476  931B              ; * PHASE 2: Draw content from Offscreen Buffer in 15 steps inside out.
3477  931B              ; Starting from center of screen content from buffer is drawn in rectangular areas.
3478  931B              ; First this rectangle has dimensions 2x4px and whith every next step area is expanded
3479  931B              ; by  4px verticaly and 8px / 2 bytes horizotal.
3480  931B              ANIMATE_SCREEN:
3481  931B              ; -- PHASE 1 - draw rectangles outside in
3482  931B 21 00 70     	ld hl,VRAM			; screen coord (0,0)px	- rect top-left corner				;931b	21 00 70
3483  931E 01 1F 40     	ld bc,$401f			; b - 64px rect height, c - 31 bytes rect width				;931e	01 1f 40
3484  9321 3E 10        	ld a,16				; a - 16 rectangles to draw									;9321	3e 10
3485  9323              .NEXT_RECT:
3486  9323 F5           	push af				; save a - rectangles counter								;9323	f5
3487  9324 E5           	push hl				; save hl - VRAM address of rect top-left					;9324	e5
3488  9325 C5           	push bc				; save bc - rect dimensions 								;9325	c5
3489  9326              ; -- draw rectangle
3490  9326 CD B9 93     	call DRAW_RED_RECT	; draw Red Rectangle										;9326	cd b9 93
3491  9329              ; -- wait delay
3492  9329 11 00 20     	ld de,$2000			; delay parameter value										;9329	11 00 20
3493  932C CD 1D 94     	call DELAY_DE		; wait delay												;932c	cd 1d 94
3494  932F              ; -- calculate new position for next rectangle
3495  932F C1           	pop bc				; restore bc - rect height and width						;932f	c1
3496  9330 E1           	pop hl				; restore hl - VRAM address of top-left corner 				;9330	e1
3497  9331 F1           	pop af				; restore a - rectangles counter 							;9331	f1
3498  9332 11 41 00     	ld de,(2*32)+1		; 2 lines + 4 pixels										;9332	11 41 00
3499  9335 19           	add hl,de			; hl - VRAM addres of next rectangle to draw				;9335	19
3500  9336              ; -- calculate new dimensions for next rectangle
3501  9336 05           	dec b				; decrement height of next rectangle ...					;9336	05
3502  9337 05           	dec b				; -2 lines of top border line								;9337	05
3503  9338 05           	dec b				;															;9338	05
3504  9339 05           	dec b				; -2 lines of bottom border line							;9339	05
3505  933A 0D           	dec c				; decrement width of next rectangle ...						;933a	0d
3506  933B 0D           	dec c				; -2 bytes = 1 (4px) left and 1 (4px) right border			;933b	0d
3507  933C              ; -- dec counter and check if all rectangles are drawn yet
3508  933C 3D           	dec a				; decrement rectangles to draw - chack if 0					;933c	3d
3509  933D 20 E4        	jr nz,.NEXT_RECT	; no - draw next rectangle									;933d	20 e4
3510  933F
3511  933F              ;-- PHASE 2 - draw content inside out
3512  933F 21 CF 73     	ld hl,VRAM+(30*32)+15	; screen coordinates (60,30)px - screen center			;933f	21 cf 73
3513  9342 11 4F AE     	ld de,VSCRBUF+(30*32)+15; in buffer coordinates (60,30)px						;9342	11 4f ae
3514  9345 01 01 04     	ld bc,$0401			; b - 4px area height, c - 1 byte area width 				;9345	01 01 04
3515  9348 3E 0F        	ld a,15				; a - 15 steps of drawing content							;9348	3e 0f
3516  934A              .NEXT_AREA:
3517  934A F5           	push af				; save a - steps counter									;934a	f5
3518  934B C5           	push bc				; save bc - area dimensions									;934b	c5
3519  934C D5           	push de				; save de - address in Offscreen Buffer (source)			;934c	d5
3520  934D E5           	push hl				; save hl - VRAM addres to draw (destination)				;934d	e5
3521  934E              ; -- draw/copy buffer content to screen
3522  934E CD 6F 93     	call DRAW_BUF_AREA	; Draw Rectangular Area from Offscreen Buffer				;934e	cd 6f 93
3523  9351              ; -- wait delay
3524  9351 11 00 20     	ld de,$2000			; delay parameter value										;9351	11 00 20
3525  9354 CD 1D 94     	call DELAY_DE		; wait delay												;9354	cd 1d 94
3526  9357              ; -- calculate new position for next area - source and destination
3527  9357 D1           	pop de				; restore de - VRAM address (destination)					;9357	d1
3528  9358 E1           	pop hl				; restore hl - Offscreen Buffer address (source)			;9358	e1
3529  9359 01 41 00     	ld bc,(2*32)+1		; 2 lines + 4 pixels										;9359	01 41 00
3530  935C B7           	or a				; clear Carry flag											;935c	b7
3531  935D ED 42        	sbc hl,bc			; hl - Buffer address 2 lines above and 4px left			;935d	ed 42
3532  935F EB           	ex de,hl			; de - Buffer addres, hl - VRAM address						;935f	eb
3533  9360 B7           	or a				; clear Carry flag											;9360	b7
3534  9361 ED 42        	sbc hl,bc			; hl - VRAM address 2 lines above and 4px left				;9361	ed 42
3535  9363              ; -- calculate new dimensions for next area
3536  9363 C1           	pop bc				; restore bc - area dimensions								;9363	c1
3537  9364 F1           	pop af				; restore a - number of steps								;9364	f1
3538  9365 04           	inc b				; increment height of new area ....							;9365	04
3539  9366 04           	inc b				; +2 lines up												;9366	04
3540  9367 04           	inc b				;															;9367	04
3541  9368 04           	inc b				; +2 lines down												;9368	04
3542  9369 0C           	inc c				; increment width of next area ...							;9369	0c
3543  936A 0C           	inc c				; +2 bytes = 1 (4px) left and 1 (4px) right 				;936a	0c
3544  936B              ; -- dec counter and check if all areas are drawn yet
3545  936B 3D           	dec a				; decrement steps (areas) counter - chack if 0				;936b	3d
3546  936C 20 DC        	jr nz,.NEXT_AREA	; no - draw next area										;936c	20 dc
3547  936E C9           	ret					; ------------------- End of Proc ------------------------- ;936e	c9
3548  936F
3549  936F
3550  936F              ;***********************************************************************************************
3551  936F              ; Draw Rectangular Area from Offscreen Buffer.
3552  936F              ; Horizontal lines are 2px height and Vertical lines are 4 px width
3553  936F              ; IN: b - area heigh in lines/pixels
3554  936F              ;     c - area width (minus 1) in bytes
3555  936F              ;    hl - VRAM addres of top-left corner (destination)
3556  936F              ;    de - Offscreen Buffer addres of top-left corner (source)
3557  936F              DRAW_BUF_AREA:
3558  936F CD 8F 93     	call DRAW_BUF_HLINE	; draw horizontal line of content on screen					;936f	cd 8f 93
3559  9372 CD 8F 93     	call DRAW_BUF_HLINE	; draw second line below - same width						;9372	cd 8f 93
3560  9375 C5           	push bc				; save bc - area dimensions									;9375	c5
3561  9376 78           	ld a,b				; a - area height (in lines) 								;9376	78
3562  9377 3D           	dec a				;															;9377	3d
3563  9378 3D           	dec a				; -2 top lines already drawn 								;9378	3d
3564  9379 3D           	dec a				;															;9379	3d
3565  937A 3D           	dec a				; -2 bottom lines will be drawn - check if 0 lines left		;937a	3d
3566  937B 28 0A        	jr z,.BOTTOM_AREA	; yes - skip drawing middle area, draw bottom lines			;937b	28 0a
3567  937D              ; -- draw middle area - no need to draw whole line because it's drawn in previous step
3568  937D              ; so draw only left and right byte (like border)
3569  937D 06 00        	ld b,000h			; bc - area width (in bytes) 								;937d	06 00
3570  937F              .NEXT_LR_BYTES:
3571  937F F5           	push af				; save af - area height (minus 4 lines) 					;937f	f5
3572  9380 CD A4 93     	call DRAW_LR_BYTES	; draw only Left and Right bytes from Buffer				;9380	cd a4 93
3573  9383 F1           	pop af				; restore af - area height - lines counter					;9383	f1
3574  9384 3D           	dec a				; decrement 1 just drawn - check if more to draw			;9384	3d
3575  9385 20 F8        	jr nz,.NEXT_LR_BYTES; yes - repeat a times										;9385	20 f8
3576  9387              .BOTTOM_AREA:
3577  9387 C1           	pop bc				; save bc - area dimensions									;9387	c1
3578  9388 CD 8F 93     	call DRAW_BUF_HLINE	; draw second to end line of area							;9388	cd 8f 93
3579  938B CD 8F 93     	call DRAW_BUF_HLINE	; draw bottom line of rectangle								;938b	cd 8f 93
3580  938E C9           	ret					; ------------------- End of Proc ------------------------- ;938e	c9
3581  938F
3582  938F              ;***********************************************************************************************
3583  938F              ; Draw 1 horizontal line of content from Buffer on screen.
3584  938F              ; IN c - line width in bytes (minus 1)
3585  938F              ;    hl - address VRAM - begin of line to draw (destination)
3586  938F              ;    de - Offscreen Buffer addres of line to copy (source)
3587  938F              DRAW_BUF_HLINE:
3588  938F C5           	push bc				; save bc - c - width of area in bytes						;938f	c5
3589  9390 D5           	push de				; save hl - address Offscreen Buffer						;9390	d5
3590  9391 E5           	push hl				; save hl - address VRAM 									;9391	e5
3591  9392              ; -- copy bytes from Offscreen Buffer to VRAM
3592  9392 0C           	inc c				; c - area width including last byte						;9392	0c
3593  9393              .NEXT_BYTE:
3594  9393 1A           	ld a,(de)			; a - byte from Offscreen Buffer							;9393	1a
3595  9394 77           	ld (hl),a			; draw - copy to Screen memory 								;9394	77
3596  9395 23           	inc hl				; hl - next VRAM address 									;9395	23
3597  9396 13           	inc de				; de - next Buffer address 									;9396	13
3598  9397 0D           	dec c				; decrement bytes counter - check if 0						;9397	0d
3599  9398 20 F9        	jr nz,.NEXT_BYTE	; no - copy next byte										;9398	20 f9
3600  939A              ; -- move hl and de to point next screen line respectively in VRAM and Buffer
3601  939A D1           	pop de				; restore de - begin of drawn data in VRAM					;939a	d1
3602  939B E1           	pop hl				; restore hl - begin of drawn data in Buffer				;939b	e1
3603  939C 01 20 00     	ld bc,32			; 32 bytes per screen line									;939c	01 20 00
3604  939F 09           	add hl,bc			; hl - begining of next line (Buffer)						;939f	09
3605  93A0 EB           	ex de,hl			; de - addres in Buffer, hl - address VRAM					;93a0	eb
3606  93A1 09           	add hl,bc			; hl - begining of next line (VRAM)							;93a1	09
3607  93A2 C1           	pop bc				; restore bc - width and height of area						;93a2	c1
3608  93A3 C9           	ret					; ------------------- End of Proc ------------------------- ;93a3	c9
3609  93A4
3610  93A4
3611  93A4              ;***********************************************************************************************
3612  93A4              ; Draw only Left and Right bytes of content - 4px thick, 1px height.
3613  93A4              ; IN: bc - line width in bytes (minus 1)
3614  93A4              ;     hl - address VRAM - begin of line to draw (destination)
3615  93A4              ;     de - Offscreen Buffer addres of line to copy (source)
3616  93A4              DRAW_LR_BYTES:
3617  93A4 C5           	push bc				; save bc - line width in bytes								;93a4	c5
3618  93A5 D5           	push de				; save de - Buffer address (source)							;93a5	d5
3619  93A6 E5           	push hl				; save hl - VRAM address (destination)						;93a6	e5
3620  93A7              ; -- draw/copy Left byte (4px)
3621  93A7 1A           	ld a,(de)			; a - byte from Offscreen Buffer							;93a7	1a
3622  93A8 77           	ld (hl),a			; draw - copy to Screen memory 								;93a8	77
3623  93A9 09           	add hl,bc			; hl - address of right edge of area (VRAM)					;93a9	09
3624  93AA EB           	ex de,hl			; de - address VRAM, hl - address in Buffer					;93aa	eb
3625  93AB 09           	add hl,bc			; hl - address of right edge of area (Buffer)				;93ab	09
3626  93AC EB           	ex de,hl			; exchange back												;93ac	eb
3627  93AD              ; -- draw/copy Right byte (4px)
3628  93AD 1A           	ld a,(de)			; a - byte from Offscreen Buffer							;93ad	1a
3629  93AE 77           	ld (hl),a			; draw - copy to Screen memory 								;93ae	77
3630  93AF              ; -- update VRAM and Buffer addresses to next line
3631  93AF 01 20 00     	ld bc,32			; 32 bytes per line											;93af	01 20 00
3632  93B2 D1           	pop de				; restore de - begin of drawn data in VRAM					;93b2	d1
3633  93B3 E1           	pop hl				; restor hl - begin of drawn data in Buffer					;93b3	e1
3634  93B4 09           	add hl,bc			; hl - begin of next line in Buffer							;93b4	09
3635  93B5 EB           	ex de,hl			; de - address in Buffer, hl - address VRAM					;93b5	eb
3636  93B6 09           	add hl,bc			; hl - begin of next line in VRAM							;93b6	09
3637  93B7 C1           	pop bc				; restore bc - line width in bytes							;93b7	c1
3638  93B8 C9           	ret					; ------------------- End of Proc ------------------------- ;93b8	c9
3639  93B9
3640  93B9
3641  93B9              ;***********************************************************************************************
3642  93B9              ; Draw Red Rectangle Border.
3643  93B9              ; Horizontal lines are 2px height and Vertical lines are 4 px width
3644  93B9              ; IN: b - rectangle heigh in lines/pixels
3645  93B9              ;     c - rectangle width (minus 1) in bytes
3646  93B9              ;    hl - VRAM addres of top-left corner
3647  93B9              DRAW_RED_RECT:
3648  93B9              ; -- draw to lines - top border
3649  93B9 CD D9 93     	call DRAW_RED_HLINE	; draw Red horizontal line on screen						;93b9	cd d9 93
3650  93BC CD D9 93     	call DRAW_RED_HLINE	; draw second line below - same width						;93bc	cd d9 93
3651  93BF C5           	push bc				; save bc - rect dimensions									;93bf	c5
3652  93C0 78           	ld a,b				; a - rect height (in lines) 								;93c0	78
3653  93C1 3D           	dec a				; 															;93c1	3d
3654  93C2 3D           	dec a				; -2 top lines already drawn 								;93c2	3d
3655  93C3 3D           	dec a				;															;93c3	3d
3656  93C4 3D           	dec a				; -2 bottom lines will be drawn - check if 0 lines left		;93c4	3d
3657  93C5 28 0A        	jr z,.BOTTOM_BORDER	; yes - skip drawing middle area, draw bottom lines			;93c5	28 0a
3658  93C7              ; -- draw middle area of rectangle
3659  93C7 06 00        	ld b,0				; bc - rectangle width (in bytes) 							;93c7	06 00
3660  93C9              .NEXT_LR_BORDER:
3661  93C9 F5           	push af				; save af - rectangle height (minus 4 frame lines) 			;93c9	f5
3662  93CA CD EB 93     	call DRAW_LR_BORDER	; draw Left and Right border 1 line height, 4 pixels thick	;93ca	cd eb 93
3663  93CD F1           	pop af				; restore af - rectangle height - lines counter				;93cd	f1
3664  93CE 3D           	dec a				; decrement 1 just drawn - check if more 					;93ce	3d
3665  93CF 20 F8        	jr nz,.NEXT_LR_BORDER	; yes - repeat a times									;93cf	20 f8
3666  93D1              .BOTTOM_BORDER:
3667  93D1 C1           	pop bc				; restore bc - rect dimensions								;93d1	c1
3668  93D2 CD D9 93     	call DRAW_RED_HLINE	; draw second to end line of recangle						;93d2	cd d9 93
3669  93D5 CD D9 93     	call DRAW_RED_HLINE	; draw bottom line of rectangle								;93d5	cd d9 93
3670  93D8 C9           	ret					; ------------------- End of Proc ------------------------- ;93d8	c9
3671  93D9
3672  93D9
3673  93D9              ;***********************************************************************************************
3674  93D9              ; Draw Red horizontal line on screen.
3675  93D9              ; IN c - line width in bytes
3676  93D9              ;    hl - address VRAM - begin of line to draw
3677  93D9              DRAW_RED_HLINE:
3678  93D9 C5           	push bc				; save bc - c - width of red line in bytes					;93d9	c5
3679  93DA E5           	push hl				; save hl - address VRAM 									;93da	e5
3680  93DB              ; -- standard copy mem procedure [hl] -> [de], bc bytes
3681  93DB E5           	push hl				; copy hl (source) to de (destination)						;93db	e5
3682  93DC D1           	pop de				; de - VRAM address - destination 							;93dc	d1
3683  93DD 13           	inc de				; de address + 1 											;93dd	13
3684  93DE 06 00        	ld b,0				; bc = 31 bytes to fill - 1 line of screen					;93de	06 00
3685  93E0 36 FF        	ld (hl),$ff			; store 4 red pixels to first byta (source)					;93e0	36 ff
3686  93E2 ED B0        	ldir				; fill screen line (31 bytes) with 4 Red pixels				;93e2	ed b0
3687  93E4              ; -- move hl to point next screen line
3688  93E4 E1           	pop hl				; restore hl - begin of drawn line							;93e4	e1
3689  93E5 11 20 00     	ld de,32			; 32 bytes per screen line									;93e5	11 20 00
3690  93E8 19           	add hl,de			; hl - begining of next line								;93e8	19
3691  93E9 C1           	pop bc				; restore bc - c - line width in bytes 						;93e9	c1
3692  93EA C9           	ret					; ------------------- End of Proc ------------------------- ;93ea	c9
3693  93EB
3694  93EB
3695  93EB              ;***********************************************************************************************
3696  93EB              ; Draw Left and Right border pixels - 4px thick, 1px height.
3697  93EB              ; IN: bc - line width in bytes (minus 1)
3698  93EB              ;     hl - address VRAM - begin of line to draw
3699  93EB              DRAW_LR_BORDER:
3700  93EB C5           	push bc				; save bc - line width in bytes								;93eb	c5
3701  93EC E5           	push hl				; save hl - VRAM address									;93ec	e5
3702  93ED              ; -- draw Left 4 pixels
3703  93ED 36 FF        	ld (hl),$ff			; store 4 red pixels										;93ed	36 ff
3704  93EF 06 00        	ld b,0				; bc - line width in bytes									;93ef	06 00
3705  93F1 09           	add hl,bc			; hl - address of right border 								;93f1	09
3706  93F2              ; -- draw Right 4 pixels
3707  93F2 36 FF        	ld (hl),$ff			; store 4 red pixels										;93f2	36 ff
3708  93F4 E1           	pop hl				; restore hl - begin of line								;93f4	e1
3709  93F5              ; -- update VRAM addres to next line
3710  93F5 11 20 00     	ld de,32			; 32 bytes per line											;93f5	11 20 00
3711  93F8 19           	add hl,de			; hl - begin of next line									;93f8	19
3712  93F9              ; -- exit
3713  93F9 C1           	pop bc				; restore bc - rectangle heigh and width					;93f9	c1
3714  93FA C9           	ret					; ------------------- End of Proc ------------------------- ;93fa	c9
3715  93FB
3716  93FB              ;***********************************************************************************************
3717  93FB              ; Check keys 'I' and 'P'
3718  93FB              ; If key is pressed it jumps to routine SHOW_MANUAL or GAMEPLAY.
3719  93FB              CHECK_STARTUP_KEYS:
3720  93FB 3A BF 68     	ld a,(KEYS_ROW_6)		; select Keyboard row 6 								;93fb	3a bf 68
3721  93FE CB 5F        	bit 3,a					; check if key 'I' is pressed							;93fe	cb 5f
3722  9400 CA 4F 9A     	jp z,SHOW_MANUAL		; yes - show Manual/Instruction pages					;9400	ca 4f 9a
3723  9403 CB 67        	bit 4,a					; check if key 'P' is pressed							;9403	cb 67
3724  9405 C0           	ret nz					; no ------------ End of Proc (no key) ----------------	;9405	c0
3725  9406              ; -- key 'P' is pressed - switch to GamPlay screen
3726  9406 21 2C 00     	ld hl,44				; 44 bytes per line - wide screen (178x64)px			;9406	21 2c 00
3727  9409 22 AB 98     	ld (BYTES_PER_LINE),hl	; store new value										;9409	22 ab 98
3728  940C C3 03 7D     	jp JMP_GAMEPLAY			; jump to GamePlay;940c	c3 03 7d 	. . }
3729  940F
3730  940F
3731  940F              ;***********************************************************************************************
3732  940F              ; Check Startup keys 'I' and 'P' - repeat 20 times
3733  940F              ; If key is pressed it jumps to routine SHOW_MANUAL or GAMEPLAY. If no then check 20 times and return.
3734  940F              CHECK_STARTUP:
3735  940F 06 14        	ld b,20				; repeat counter											;940f	06 14
3736  9411              .REPEAT:
3737  9411 11 00 40     	ld de,$4000			; delay parameter value										;9411	11 00 40
3738  9414 CD 1D 94     	call DELAY_DE		; wait delay												;9414	cd 1d 94
3739  9417 CD FB 93     	call CHECK_STARTUP_KEYS	; check keys I and P - jump if pressed					;9417	cd fb 93
3740  941A 10 F5        	djnz .REPEAT		; no key pressed - repeat 20 times							;941a	10 f5
3741  941C C9           	ret					; ------------------- End of Proc ------------------------- ;941c	c9
3742  941D
3743  941D
3744  941D              ;***********************************************************************************************
3745  941D              ; Delay by decrementing register de
3746  941D              ; IN: de - value determining time to delay
3747  941D              DELAY_DE:
3748  941D 1B           	dec de					; decrement de											;941d	1b
3749  941E 7A           	ld a,d					; check if de = 0										;941e	7a
3750  941F B3           	or e																			;941f	b3
3751  9420 20 FB        	jr nz,DELAY_DE			; no - wait until de = 0								;9420	20 fb
3752  9422 C9           	ret						; ------------------- End of Proc --------------------- ;9422	c9
3753  9423
3754  9423              ;***********************************************************************************************
3755  9423              ; Print Text on Screen in Graphics Mode 1. Supports CR/LF char (13)
3756  9423              ; IN: hl - null terminated text
3757  9423              ;     de - destination VRAM or VBUF address
3758  9423              ; OUT: hl - address right after printed text (points to text terminator)
3759  9423              ;     de - destination address in next line after printed text
3760  9423              PRINT_TEXT_GFX:
3761  9423 D5           	push de					; save de - line start VRAM or VBUF address				;9423	d5
3762  9424              .NEXT_CHAR:
3763  9424 E5           	push hl					; save hl - address of char to print					;9424	e5
3764  9425 D5           	push de					; save de - destination address							;9425	d5
3765  9426 7E           	ld a,(hl)				; a - char to print/draw								;9426	7e
3766  9427 B7           	or a					; check if 0 - end of text 								;9427	b7
3767  9428 28 0D        	jr z,.EXIT				; yes ------------ End of Proc ------------------------ ;9428	28 0d
3768  942A FE 0D        	cp 13					; chack if CR/LF char 									;942a	fe 0d
3769  942C 28 0D        	jr z,.NEXT_LINE			; yes - move destination address to next line 			;942c	28 0d
3770  942E CD E9 98     	call DRAW_CHAR_GFX		; print/draw char on Screen or into Buffer				;942e	cd e9 98 	. . .
3771  9431 D1           	pop de					; restore de - destinatin address						;9431	d1
3772  9432 E1           	pop hl					; restore hl - text source address						;9432	e1
3773  9433 23           	inc hl					; hl - next char to print/draw							;9433	23
3774  9434 13           	inc de					; de - next destination address (4px right)				;9434	13
3775  9435 18 ED        	jr .NEXT_CHAR			; continue until char = 0								;9435	18 ed
3776  9437              .EXIT:
3777  9437 D1           	pop de					; restore de - current destination address				;9437	d1
3778  9438 E1           	pop hl					; restore hl - end of source text 						;9438	e1
3779  9439 D1           	pop de					; restore de - line start destination address 			;9439	d1
3780  943A C9           	ret						; ---------------- End of Proc ------------------------ ;943a	c9
3781  943B              .NEXT_LINE:
3782  943B D1           	pop de					; de - destination address (just take out from Stack)	;943b	d1 	.
3783  943C D1           	pop de					; de - address of current char to print					;943c	d1
3784  943D E1           	pop hl					; hl - current line start destination address			;943d	e1
3785  943E              ; -- In Gfx Mode 1 screen resolution is 128x64 px. There are 32 bytes per line wher every byte contains 4 pixels
3786  943E              ;    In order to find addres 6 lines below we have to add 32 * 6 = 192 bytes
3787  943E 01 C0 00     	ld bc,192				; 192 bytes per 6 gfx lines 							;943e	01 c0 00
3788  9441 09           	add hl,bc				; calculate new address 6 lines below					;9441	09
3789  9442 EB           	ex de,hl				; de - new dst address, hl - address of current char 	;9442	eb
3790  9443 23           	inc hl					; hl - next char to print (after CR/LF)					;9443	23
3791  9444 18 DD        	jr PRINT_TEXT_GFX		; print next char										;9444	18 dd
3792  9446
3793  9446
3794  9446              ;***********************************************************************************************
3795  9446              ; Clear Offscreen Buffer and set Graphics MODE 1 with default Color Palette
3796  9446              ; This routine is used when Game wants to draw on standard size screen (128x64)px (32x64)bytes
3797  9446              ; When Game display Gameplay, offscreen buffer is wide (176x64)px  (44x64)bytes
3798  9446              CLEAR_SCRBUF_GFX:
3799  9446 21 80 AA     	ld hl,VSCRBUF			; Video Offscreen Buffer 							;9446	21 80 aa
3800  9449 18 03        	jr CLEAR_GFX			; set Video Graphics Mode 1 and clear RAM			;9449	18 03
3801  944B
3802  944B
3803  944B              ;***********************************************************************************************
3804  944B              ; Clear Screen and set Graphics MODE 1 with default Color Palette
3805  944B              CLEAR_SCREEN_GFX:
3806  944B 21 00 70     	ld hl,VRAM				; screen coord (0,0)px								;944b	21 00 70
3807  944E              CLEAR_GFX:
3808  944E              ; -- set Video Graphics Mode 1
3809  944E 3E 08        	ld a,VDG_GFX_COLORS_0	; Video Graphics Mode 1 (128x64)px					;944e	3e 08
3810  9450 32 00 68     	ld (IOLATCH),a			; set in hardware register							;9450	32 00 68
3811  9453              ; -- fill 2048 bytes of RAM pointed by hl
3812  9453 E5           	push hl					; copy hl to de										;9453	e5
3813  9454 D1           	pop de					; de - destination VRAM address						;9454	d1
3814  9455 13           	inc de					; de - address + 1									;9455	13
3815  9456 01 FF 07     	ld bc,2047				; 2048 bytes to fill with 0	(4 greeen pixels)		;9456	01 ff 07
3816  9459 36 00        	ld (hl),0				; put 0 into first VRAM byte						;9459	36 00
3817  945B ED B0        	ldir					; fill all 2047 bytes with 0						;945b	ed b0
3818  945D C9           	ret						; --------------------- End of Proc --------------- ;945d	c9
3819  945E
3820  945E              ;***********************************************************************************************
3821  945E              ; End of Mission reasons - 3 entries: all Helicopters destrojed, time is over and no prisones left to rescue
3822  945E              TXT_ALL_HEL_DESTROYED:
3823  945E 0D           	defb 13										;945e	0d
3824  945F 20 20 20 20  	defb "    ALL HELICOPTER DESTROYED",13,0	;945f	20 20 20 20 41 4c 4c 20 48 45 4c 49 43 4f 50 54 45 52 20 44 45 53 54 52 4f 59 45 44 0d 00
3824  9463 41 4C 4C 20
3824  9467 48 45 4C 49
3824  946B 43 4F 50 54
3824  946F 45 52 20 44
3824  9473 45 53 54 52
3824  9477 4F 59 45 44
3824  947B 0D 00
3825  947D
3826  947D
3827  947D              TXT_TIME_UP:
3828  947D 0D           	defb 13										;947d	0d
3829  947E 20 20 20 20  	defb "      6.00 A.M. - TIME UP",13,0		;947e	20 20 20 20 20 20 36 2e 30 30 20 41 2e 4d 2e 20 2d 20 54 49 4d 45 20 55 50 0d 00
3829  9482 20 20 36 2E
3829  9486 30 30 20 41
3829  948A 2E 4D 2E 20
3829  948E 2D 20 54 49
3829  9492 4D 45 20 55
3829  9496 50 0D 00
3830  9499
3831  9499              TXT_NO_PRIS_LEFT:
3832  9499 0D           	defb 13										;9499	0d
3833  949A 20 20 4E 4F  	defb "  NO PRISONERS LEFT TO RESCUE",13,0	;949a	20 20 4e 4f 20 50 52 49 53 4f 4e 45 52 53 20 4c 45 46 54 20 54 4f 20 52 45 53 43 55 45 0d 00
3833  949E 20 50 52 49
3833  94A2 53 4F 4E 45
3833  94A6 52 53 20 4C
3833  94AA 45 46 54 20
3833  94AE 54 4F 20 52
3833  94B2 45 53 43 55
3833  94B6 45 0D 00
3834  94B9
3835  94B9
3836  94B9              TXT_MISSION_OVER:
3837  94B9 0D           	defb 13										;94b9	0d
3838  94BA 0D           	defb 13										;94ba	0d
3839  94BB 20 20 20 20  	defb "         MISSION OVER",13				;94bb	20 20 20 20 20 20 20 20 20 4d 49 53 53 49 4f 4e 20 4f 56 45 52 0d
3839  94BF 20 20 20 20
3839  94C3 20 4D 49 53
3839  94C7 53 49 4F 4E
3839  94CB 20 4F 56 45
3839  94CF 52 0D
3840  94D1 0D 00        	defb 13,0									;94d1	0d 00
3841  94D3
3842  94D3
3843  94D3              TXT_YOUR_SCORE:
3844  94D3 0D           	defb 13										;94d3	0d
3845  94D4 0D           	defb 13										;94d4	0d
3846  94D5 20 20 20 20  	defb "    YOUR SCORE WAS  ",0				;94d5	20 20 20 20 59 4f 55 52 20 53 43 4f 52 45 20 57 41 53 20 20 00
3846  94D9 59 4F 55 52
3846  94DD 20 53 43 4F
3846  94E1 52 45 20 57
3846  94E5 41 53 20 20
3846  94E9 00
3847  94EA
3848  94EA
3849  94EA              TXT_CHAR_TAB:
3850  94EA 20 20 20 41  	defb "   A    B    C    D    E    F",0		;94ea	20 20 20 41 20 20 20 20 42 20 20 20 20 43 20 20 20 20 44 20 20 20 20 45 20 20 20 20 46 00
3850  94EE 20 20 20 20
3850  94F2 42 20 20 20
3850  94F6 20 43 20 20
3850  94FA 20 20 44 20
3850  94FE 20 20 20 45
3850  9502 20 20 20 20
3850  9506 46 00
3851  9508 20 20 20 47  	defb "   G    H    I    J    K    L",0		;9508	20 20 20 47 20 20 20 20 48 20 20 20 20 49 20 20 20 20 4a 20 20 20 20 4b 20 20 20 20 4c 00
3851  950C 20 20 20 20
3851  9510 48 20 20 20
3851  9514 20 49 20 20
3851  9518 20 20 4A 20
3851  951C 20 20 20 4B
3851  9520 20 20 20 20
3851  9524 4C 00
3852  9526 20 20 20 4D  	defb "   M    N    O    P    Q    R",0		;9526	20 20 20 4d 20 20 20 20 4e 20 20 20 20 4f 20 20 20 20 50 20 20 20 20 51 20 20 20 20 52 00
3852  952A 20 20 20 20
3852  952E 4E 20 20 20
3852  9532 20 4F 20 20
3852  9536 20 20 50 20
3852  953A 20 20 20 51
3852  953E 20 20 20 20
3852  9542 52 00
3853  9544 20 20 20 53  	defb "   S    T    U    V    W    X",0		;9544	20 20 20 53 20 20 20 20 54 20 20 20 20 55 20 20 20 20 56 20 20 20 20 57 20 20 20 20 58 00
3853  9548 20 20 20 20
3853  954C 54 20 20 20
3853  9550 20 55 20 20
3853  9554 20 20 56 20
3853  9558 20 20 20 57
3853  955C 20 20 20 20
3853  9560 58 00
3854  9562 20 20 20 59  	defb "   Y    Z    .   SPC  DEL  END",0		;9562	20 20 20 59 20 20 20 20 5a 20 20 20 20 2e 20 20 20 53 50 43 20 20 44 45 4c 20 20 45 4e 44 00
3854  9566 20 20 20 20
3854  956A 5A 20 20 20
3854  956E 20 2E 20 20
3854  9572 20 53 50 43
3854  9576 20 20 44 45
3854  957A 4C 20 20 45
3854  957E 4E 44 00
3855  9581
3856  9581
3857  9581              TXT_START_PAGE:
3858  9581 0D           	defb 13										;9581	0d
3859  9582 0D           	defb 13										;9582	0d
3860  9583 20 20 20 20  	defb "        D    A    W    N",13			;9583	20 20 20 20 20 20 20 20 44 20 20 20 20 41 20 20 20 20 57 20 20 20 20 4e 0d
3860  9587 20 20 20 20
3860  958B 44 20 20 20
3860  958F 20 41 20 20
3860  9593 20 20 57 20
3860  9597 20 20 20 4E
3860  959B 0D
3861  959C 0D           	defb 13										;959c	0d
3862  959D 20 20 20 50  	defb "   P    A    T    R    O    L",13		;959d	20 20 20 50 20 20 20 20 41 20 20 20 20 54 20 20 20 20 52 20 20 20 20 4f 20 20 20 20 4c 0d
3862  95A1 20 20 20 20
3862  95A5 41 20 20 20
3862  95A9 20 54 20 20
3862  95AD 20 20 52 20
3862  95B1 20 20 20 4F
3862  95B5 20 20 20 20
3862  95B9 4C 0D
3863  95BB 0D           	defb 13										;95bb	0d
3864  95BC 0D           	defb 13										;95bc	0d
3865  95BD 20 20 20 20  	defb "      PRESS  <P>  TO  PLAY",13		;95bd	20 20 20 20 20 20 50 52 45 53 53 20 20 3c 50 3e 20 20 54 4f 20 20 50 4c 41 59 0d
3865  95C1 20 20 50 52
3865  95C5 45 53 53 20
3865  95C9 20 3C 50 3E
3865  95CD 20 20 54 4F
3865  95D1 20 20 50 4C
3865  95D5 41 59 0D
3866  95D8 20 20 20 20  	defb "    PRESS <I> FOR INSTRUCTIONS",0		;95d8	20 20 20 20 50 52 45 53 53 20 3c 49 3e 20 46 4f 52 20 49 4e 53 54 52 55 43 54 49 4f 4e 53 00
3866  95DC 50 52 45 53
3866  95E0 53 20 3C 49
3866  95E4 3E 20 46 4F
3866  95E8 52 20 49 4E
3866  95EC 53 54 52 55
3866  95F0 43 54 49 4F
3866  95F4 4E 53 00
3867  95F7
3868  95F7
3869  95F7              TXT_KEYS_HELP:
3870  95F7 0D           	defb 13										;95f7	0d
3871  95F8 20 20 20 20  	defb "    HELICOPTER CONTROL KEYS",13		;95f8	20 20 20 20 48 45 4c 49 43 4f 50 54 45 52 20 43 4f 4e 54 52 4f 4c 20 4b 45 59 53 0d
3871  95FC 48 45 4C 49
3871  9600 43 4F 50 54
3871  9604 45 52 20 43
3871  9608 4F 4E 54 52
3871  960C 4F 4C 20 4B
3871  9610 45 59 53 0D
3872  9614 0D           	defb 13										;9614	0d
3873  9615 20 20 20 20  	defb "     Q  =  HELICOPTER UP",13			;9615	20 20 20 20 20 51 20 20 3d 20 20 48 45 4c 49 43 4f 50 54 45 52 20 55 50 0d
3873  9619 20 51 20 20
3873  961D 3D 20 20 48
3873  9621 45 4C 49 43
3873  9625 4F 50 54 45
3873  9629 52 20 55 50
3873  962D 0D
3874  962E 20 20 20 20  	defb "     A  =  HELICOPTER DOWN",13		;962e	20 20 20 20 20 41 20 20 3d 20 20 48 45 4c 49 43 4f 50 54 45 52 20 44 4f 57 4e 0d
3874  9632 20 41 20 20
3874  9636 3D 20 20 48
3874  963A 45 4C 49 43
3874  963E 4F 50 54 45
3874  9642 52 20 44 4F
3874  9646 57 4E 0D
3875  9649 20 20 20 20  	defb "     M  =  HELICOPTER RIGHT",13		;9649	20 20 20 20 20 4d 20 20 3d 20 20 48 45 4c 49 43 4f 50 54 45 52 20 52 49 47 48 54 0d
3875  964D 20 4D 20 20
3875  9651 3D 20 20 48
3875  9655 45 4C 49 43
3875  9659 4F 50 54 45
3875  965D 52 20 52 49
3875  9661 47 48 54 0D
3876  9665 20 20 20 20  	defb "     ,  =  HELICOPTER LEFT",13		;9665	20 20 20 20 20 2c 20 20 3d 20 20 48 45 4c 49 43 4f 50 54 45 52 20 4c 45 46 54 0d
3876  9669 20 2C 20 20
3876  966D 3D 20 20 48
3876  9671 45 4C 49 43
3876  9675 4F 50 54 45
3876  9679 52 20 4C 45
3876  967D 46 54 0D
3877  9680 0D           	defb 13										;9680	0d
3878  9681 20 20 20 20  	defb "     N  =  ROTATE HELICOPTER",13		;9681	20 20 20 20 20 4e 20 20 3d 20 20 52 4f 54 41 54 45 20 48 45 4c 49 43 4f 50 54 45 52 0d
3878  9685 20 4E 20 20
3878  9689 3D 20 20 52
3878  968D 4F 54 41 54
3878  9691 45 20 48 45
3878  9695 4C 49 43 4F
3878  9699 50 54 45 52
3878  969D 0D
3879  969E 20 20 20 20  	defb "    SPC =  FIRE",0					;969e	20 20 20 20 53 50 43 20 3d 20 20 46 49 52 45 00
3879  96A2 53 50 43 20
3879  96A6 3D 20 20 46
3879  96AA 49 52 45 00
3880  96AE
3881  96AE              ; 10 names, 5 chars each of Players with Highest Score
3882  96AE              TXT_HS_NAMES:
3883  96AE 00 00 00 00  	defb 0,0,0,0,0								;96ae	00 00 00 00 00
3883  96B2 00
3884  96B3 00 00 00 00  	defb 0,0,0,0,0								;96b3	00 00 00 00 00
3884  96B7 00
3885  96B8 00 00 00 00  	defb 0,0,0,0,0								;96b8	00 00 00 00 00
3885  96BC 00
3886  96BD 00 00 00 00  	defb 0,0,0,0,0								;96bd	00 00 00 00 00
3886  96C1 00
3887  96C2 00 00 00 00  	defb 0,0,0,0,0								;96c2	00 00 00 00 00
3887  96C6 00
3888  96C7 00 00 00 00  	defb 0,0,0,0,0								;96c7	00 00 00 00 00
3888  96CB 00
3889  96CC 00 00 00 00  	defb 0,0,0,0,0								;96cc	00 00 00 00 00
3889  96D0 00
3890  96D1 00 00 00 00  	defb 0,0,0,0,0								;96d1	00 00 00 00 00
3890  96D5 00
3891  96D6              TXT_HS_NAME_9:
3892  96D6 00 00 00 00  	defb 0,0,0,0,0								;96d6	00 00 00 00 00
3892  96DA 00
3893  96DB 00 00 00 00  	defb 0,0,0,0,0								;96db	00 00 00 00 00
3893  96DF 00
3894  96E0
3895  96E0
3896  96E0              ; 10 names, 5 chars each of Players with Highest Score
3897  96E0              VAR_HS_VALUES:
3898  96E0 00 00 00 00  	defb 0,0,0,0,0								;96e0	00 00 00 00 00
3898  96E4 00
3899  96E5 00 00 00 00  	defb 0,0,0,0,0								;96e5	00 00 00 00 00
3899  96E9 00
3900  96EA 00 00 00 00  	defb 0,0,0,0,0								;96ea	00 00 00 00 00
3900  96EE 00
3901  96EF 00 00 00 00  	defb 0,0,0,0,0								;96ef	00 00 00 00 00
3901  96F3 00
3902  96F4 00 00 00 00  	defb 0,0,0,0,0								;96f4	00 00 00 00 00
3902  96F8 00
3903  96F9 00 00 00 00  	defb 0,0,0,0,0								;96f9	00 00 00 00 00
3903  96FD 00
3904  96FE 00 00 00 00  	defb 0,0,0,0,0								;96fe	00 00 00 00 00
3904  9702 00
3905  9703 00 00 00 00  	defb 0,0,0,0,0								;9703	00 00 00 00 00
3905  9707 00
3906  9708              VAR_HS_VALUE_9:
3907  9708 00 00 00 00  	defb 0,0,0,0,0								;9708	00 00 00 00 00
3907  970C 00
3908  970D 00 00 00 00  	defb 0,0,0,0,0								;970d	00 00 00 00 00
3908  9711 00
3909  9712
3910  9712
3911  9712              l9712h:
3912  9712              ; -- reset Fuel Amount to startup value 999
3913  9712 21 1A 78     	ld hl,FUEL_DIGITS	; Fuel Amount Left Digits									;9712	21 1a 78
3914  9715 3E 09        	ld a,9				; initial value 9 											;9715	3e 09
3915  9717 77           	ld (hl),a			; store initial value										;9717	77
3916  9718 23           	inc hl				; next digit												;9718	23
3917  9719 77           	ld (hl),a			; store initial value										;9719	77
3918  971A 23           	inc hl				; next digit												;971a	23
3919  971B 77           	ld (hl),a			; store initial value - 999 total							;971b	77
3920  971C
3921  971C 3A 33 78     	ld a,(07833h)		;971c	3a 33 78 	: 3 x
3922  971F B7           	or a			;971f	b7 	.
3923  9720 28 06        	jr z,l9728h		;9720	28 06 	( .
3924  9722 47           	ld b,a			;9722	47 	G
3925  9723              l9723h:
3926  9723 CD 70 97     	call sub_9770h		;9723	cd 70 97 	. p .
3927  9726 10 FB        	djnz l9723h		;9726	10 fb 	. .
3928  9728              l9728h:
3929  9728 3A 32 78     	ld a,(07832h)		;9728	3a 32 78 	: 2 x
3930  972B B7           	or a			;972b	b7 	.
3931  972C 28 06        	jr z,l9734h		;972c	28 06 	( .
3932  972E 47           	ld b,a			;972e	47 	G
3933  972F              l972fh:
3934  972F CD 6D 97     	call sub_976dh		;972f	cd 6d 97 	. m .
3935  9732 10 FB        	djnz l972fh		;9732	10 fb 	. .
3936  9734              l9734h:
3937  9734 3A 31 78     	ld a,(07831h)		;9734	3a 31 78 	: 1 x
3938  9737 B7           	or a			;9737	b7 	.
3939  9738 28 06        	jr z,l9740h		;9738	28 06 	( .
3940  973A 47           	ld b,a			;973a	47 	G
3941  973B              l973bh:
3942  973B CD 64 97     	call sub_9764h		;973b	cd 64 97 	. d .
3943  973E 10 FB        	djnz l973bh		;973e	10 fb 	. .
3944  9740              l9740h:
3945  9740 3A 30 78     	ld a,(07830h)		;9740	3a 30 78 	: 0 x
3946  9743 B7           	or a			;9743	b7 	.
3947  9744 28 06        	jr z,l974ch		;9744	28 06 	( .
3948  9746 47           	ld b,a			;9746	47 	G
3949  9747              l9747h:
3950  9747 CD 61 97     	call sub_9761h		;9747	cd 61 97 	. a .
3951  974A 10 FB        	djnz l9747h		;974a	10 fb 	. .
3952  974C              l974ch:
3953  974C 21 2F 78     	ld hl,0782fh		;974c	21 2f 78 	! / x
3954  974F 3A 1D 78     	ld a,(PRIS_RESCUED)	; Number of Prisoners Rescued so far						;974f	3a 1d 78
3955  9752 86           	add a,(hl)			;9752	86 	.
3956  9753 32 1D 78     	ld (PRIS_RESCUED),a	; store new value 											;9753	32 1d 78
3957  9756 11 30 78     	ld de,07830h		;9756	11 30 78 	. 0 x
3958  9759 01 04 00     	ld bc,00004h		;9759	01 04 00 	. . .
3959  975C 36 00        	ld (hl),000h		;975c	36 00 	6 .
3960  975E ED B0        	ldir		;975e	ed b0 	. .
3961  9760 C9           	ret			;9760	c9 	.
3962  9761              sub_9761h:
3963  9761 CD 79 97     	call sub_9779h		;9761	cd 79 97 	. y .
3964  9764              sub_9764h:
3965  9764 CD 74 97     	call l9774h		;9764	cd 74 97 	. t .
3966  9767 CD 74 97     	call l9774h		;9767	cd 74 97 	. t .
3967  976A CD 74 97     	call l9774h		;976a	cd 74 97 	. t .
3968  976D              sub_976dh:
3969  976D CD 74 97     	call l9774h		;976d	cd 74 97 	. t .
3970  9770              sub_9770h:
3971  9770 CD 74 97     	call l9774h		;9770	cd 74 97 	. t .
3972  9773 C9           	ret			;9773	c9 	.
3973  9774              l9774h:
3974  9774 21 14 78     	ld hl,07814h		;9774	21 14 78 	! . x
3975  9777 18 03        	jr l977ch		;9777	18 03 	. .
3976  9779              sub_9779h:
3977  9779 21 13 78     	ld hl,07813h		;9779	21 13 78 	! . x
3978  977C              l977ch:
3979  977C 3E 0A        	ld a,00ah		;977c	3e 0a 	> .
3980  977E 34           	inc (hl)			;977e	34 	4
3981  977F BE           	cp (hl)			;977f	be 	.
3982  9780 C0           	ret nz			;9780	c0 	.
3983  9781 36 00        	ld (hl),000h		;9781	36 00 	6 .
3984  9783 2B           	dec hl			;9783	2b 	+
3985  9784 18 F6        	jr l977ch		;9784	18 f6 	. .
3986  9786              l9786h:
3987  9786 ED 4B 09 79  	ld bc,(07909h)		;9786	ed 4b 09 79 	. K . y
3988  978A 0B           	dec bc			;978a	0b 	.
3989  978B ED 43 09 79  	ld (07909h),bc		;978b	ed 43 09 79 	. C . y
3990  978F 78           	ld a,b			;978f	78 	x
3991  9790 B1           	or c			;9790	b1 	.
3992  9791 20 67        	jr nz,EXIT_CODE_0		;9791	20 67 	  g
3993  9793 01 B8 0B     	ld bc,00bb8h		;9793	01 b8 0b 	. . .
3994  9796 ED 43 09 79  	ld (07909h),bc		;9796	ed 43 09 79 	. C . y
3995  979A              ;--
3996  979A 21 19 78     	ld hl,MISSION_TIME+2; hl - second digit of Mission Time minutes 				;979a	21 19 78
3997  979D 3E 0A        	ld a,10				; a - 10 minutes to compare with							;979d	3e 0a
3998  979F 34           	inc (hl)			; add 1 minute 												;979f	34
3999  97A0 BE           	cp (hl)				; is value is now 10?										;97a0	be
4000  97A1 20 57        	jr nz,EXIT_CODE_0		; no - return with Exit code 0 ----------------------------	;97a1	20 57
4001  97A3              ; -- reset last digit and add 1 to tens of minutes
4002  97A3 36 00        	ld (hl),0			; reset last digit to 0										;97a3	36 00
4003  97A5 2B           	dec hl				; hl - 1st digit of MIssion Time minutes (tens)				;97a5	2b
4004  97A6 3E 06        	ld a,6				; a - 60 minutes to compare with 							;97a6	3e 06
4005  97A8 34           	inc (hl)			; add 10 minutes 											;97a8	34
4006  97A9 BE           	cp (hl)				; is value is now 60? 										;97a9	be
4007  97AA 20 4E        	jr nz,EXIT_CODE_0		; no - return with Exit code 0 ----------------------------	;97aa	20 4e
4008  97AC              ; -- reset 1st digit of minutes and add 1 to hours
4009  97AC 36 00        	ld (hl),0			; reset minutes to 00										;97ac	36 00
4010  97AE 2B           	dec hl				; hl - digit of Mission Time hours							;97ae	2b
4011  97AF 34           	inc (hl)			; add 1 hour												;97af	34
4012  97B0              ; -- check if it's now 6:00 AM - end of game
4013  97B0 3E 06        	ld a,6				; a - 6 to compare 											;97b0	3e 06
4014  97B2 BE           	cp (hl)				; is it 6:00 AM? 											;97b2	be
4015  97B3 20 45        	jr nz,EXIT_CODE_0		; no - return with Exit code 0 ----------------------------	;97b3	20 45
4016  97B5              ; -- it's 6:00 AM - time is over
4017  97B5 18 3F        	jr EXIT_CODE_1			; return with Exit code 1 --------------------------------- ;97b5	18 3f
4018  97B7
4019  97B7              l97b7h:
4020  97B7 ED 4B 0B 79  	ld bc,(0790bh)		;97b7	ed 4b 0b 79 	. K . y
4021  97BB 0B           	dec bc			;97bb	0b 	.
4022  97BC ED 43 0B 79  	ld (0790bh),bc		;97bc	ed 43 0b 79 	. C . y
4023  97C0 78           	ld a,b			;97c0	78 	x
4024  97C1 B1           	or c			;97c1	b1 	.
4025  97C2 20 36        	jr nz,EXIT_CODE_0		;97c2	20 36 	  6
4026  97C4 21 A3 01     	ld hl,001a3h		;97c4	21 a3 01 	! . .
4027  97C7 01 14 00     	ld bc,00014h		;97c7	01 14 00 	. . .
4028  97CA 3A 2F 78     	ld a,(0782fh)		;97ca	3a 2f 78 	: / x
4029  97CD 3C           	inc a			;97cd	3c 	<
4030  97CE              l97ceh:
4031  97CE 3D           	dec a			;97ce	3d 	=
4032  97CF 28 09        	jr z,l97dah		;97cf	28 09 	( .
4033  97D1 B7           	or a			;97d1	b7 	.
4034  97D2 ED 42        	sbc hl,bc		;97d2	ed 42 	. B
4035  97D4 F2 CE 97     	jp p,l97ceh		;97d4	f2 ce 97 	. . .
4036  97D7 21 05 00     	ld hl,00005h		;97d7	21 05 00 	! . .
4037  97DA              l97dah:
4038  97DA 22 0B 79     	ld (0790bh),hl		;97da	22 0b 79 	" . y
4039  97DD 21 1C 78     	ld hl,0781ch		;97dd	21 1c 78 	! . x
4040  97E0 3E FF        	ld a,0ffh		;97e0	3e ff 	> .
4041  97E2 35           	dec (hl)			;97e2	35 	5
4042  97E3 BE           	cp (hl)			;97e3	be 	.
4043  97E4 20 14        	jr nz,EXIT_CODE_0		;97e4	20 14 	  .
4044  97E6 36 09        	ld (hl),009h		;97e6	36 09 	6 .
4045  97E8 2B           	dec hl			;97e8	2b 	+
4046  97E9 35           	dec (hl)			;97e9	35 	5
4047  97EA BE           	cp (hl)			;97ea	be 	.
4048  97EB 20 0D        	jr nz,EXIT_CODE_0		;97eb	20 0d 	  .
4049  97ED 36 09        	ld (hl),009h		;97ed	36 09 	6 .
4050  97EF 2B           	dec hl			;97ef	2b 	+
4051  97F0 35           	dec (hl)			;97f0	35 	5
4052  97F1 BE           	cp (hl)			;97f1	be 	.
4053  97F2 20 06        	jr nz,EXIT_CODE_0		;97f2	20 06 	  .
4054  97F4 36 09        	ld (hl),009h		;97f4	36 09 	6 .
4055  97F6              EXIT_CODE_1:
4056  97F6 3E 01        	ld a,1				; set return value 1 in a 									;97f6	3e 01
4057  97F8 B7           	or a				; set CPU flags												;97f8	b7
4058  97F9 C9           	ret					; -------------------- End of Proc (1) -------------------- ;97f9	c9
4059  97FA              EXIT_CODE_0:
4060  97FA AF           	xor a				; set return value 0 in a and CPU flags						;97fa	af
4061  97FB C9           	ret					; -------------------- End of Proc (0) -------------------- ;97fb	c9
4062  97FC
4063  97FC
4064  97FC              ;****************************************************************************************************
4065  97FC              ; Draw into Offscreen Buffer Status Bar
4066  97FC              ; Status Bar is displayed at the Top of Screen and contains data:
4067  97FC              ;     20 20 20 20  999  00000 4 4:00
4068  97FC              ; - (20) Prisoners left in Camp 1
4069  97FC              ; - (20) Prisoners left in Camp 2
4070  97FC              ; - (20) Prisoners left in Camp 3
4071  97FC              ; - (20) Prisoners left in Camp 4
4072  97FC              ; - (999) Fuel Amount Left
4073  97FC              ; - (00000) Player Score
4074  97FC              ; - (4) Helicopters Left
4075  97FC              ; - (4:00) Mission Clock
4076  97FC              PRINT_STATBAR_BUF:
4077  97FC              ; -- fill Status Bar Buffer with ' ' (space) char
4078  97FC 21 38 B6     	ld hl,VSTATBUF		; src - Status Bar Buffer									;97fc	21 38 b6
4079  97FF 11 39 B6     	ld de,VSTATBUF+1	; dst - address + 1											;97ff	11 39 b6
4080  9802 01 1F 00     	ld bc,32-1			; cnt - 32 bytes to fill									;9802	01 1f 00
4081  9805 36 20        	ld (hl),' '			; ' ' (space) char to fill buffer							;9805	36 20
4082  9807 ED B0        	ldir				; fill Buffer with spaces									;9807	ed b0
4083  9809              ; -- set '!' as terminate char at the end of Buffer
4084  9809 3E 21        	ld a,'!'			; string terminator											;9809	3e 21
4085  980B 32 58 B6     	ld (VSTATBUF+32),a	; store terminate char at the end of Buffer					;980b	32 58 b6
4086  980E              ; -- print into Buffer number of Prisoners Left in each of 4 Camps
4087  980E 21 38 B6     	ld hl,VSTATBUF		; destination address in Status Bar Buffer					;980e	21 38 b6
4088  9811 3A 03 78     	ld a,(PRIS_CAMP_1)	; a - Number of Prisoners Left in Camp 1					;9811	3a 03 78
4089  9814 CD 74 98     	call NUM_2_DIGITS	; convert number into 2 digits and store in buffer 			;9814	cd 74 98
4090  9817 23           	inc hl				; skip 1 space												;9817	23
4091  9818 3A 07 78     	ld a,(PRIS_CAMP_2)	; a - Number of Prisoners Left in Camp 2					;9818	3a 07 78
4092  981B CD 74 98     	call NUM_2_DIGITS	; convert number into 2 digits and store in buffer 			;981b	cd 74 98
4093  981E 23           	inc hl				; skip 1 space												;981e	23
4094  981F 3A 0B 78     	ld a,(PRIS_CAMP_3)	; a - Number of Prisoners Left in Camp 3					;981f	3a 0b 78
4095  9822 CD 74 98     	call NUM_2_DIGITS	; convert number into 2 digits and store in buffer 			;9822	cd 74 98
4096  9825 23           	inc hl				; skip 1 space												;9825	23
4097  9826 3A 0F 78     	ld a,(PRIS_CAMP_4)	; a - Number of Prisoners Left in Camp 4					;9826	3a 0f 78
4098  9829 CD 74 98     	call NUM_2_DIGITS	; convert number into 2 digits and store in buffer 			;9829	cd 74 98
4099  982C 23           	inc hl				; skip 1 space												;982c	23
4100  982D 23           	inc hl				; skip 1 space												;982d	23
4101  982E              ; -- print into buffer Fuel Amount Lef
4102  982E 11 1A 78     	ld de,FUEL_DIGITS	; Fuel Amount Left digits									;982e	11 1a 78
4103  9831 EB           	ex de,hl			; hl (src) - digits, de (dst) -   ;9831	eb 	.
4104  9832 01 03 00     	ld bc,3				; 3 digits of Fuel value									;9832	01 03 00
4105  9835 ED B0        	ldir				; copy to Status Bar Buffer									;9835	ed b0
4106  9837 13           	inc de				; skip 1 space												;9837	13
4107  9838 13           	inc de				; skip 1 space												;9838	13
4108  9839              ; -- print into Buffer Player Score digits
4109  9839 21 12 78     	ld hl,SCORE_DIGITS	; Digits of Player current Score							;9839	21 12 78
4110  983C 01 05 00     	ld bc,5				; 5 digits of Score Value									;983c	01 05 00
4111  983F ED B0        	ldir				; copy to Status Bar Buffer									;983f	ed b0
4112  9841 13           	inc de				; skip 1 space												;9841	13
4113  9842 13           	inc de				; skip 1 space												;9842	13
4114  9843              ; -- print into buffer number Helicopters Left
4115  9843 3A 11 78     	ld a,(HELICOPTERS)	; number of Helicopters left 								;9843	3a 11 78
4116  9846 12           	ld (de),a			; store into Status Bar Buffer								;9846	12
4117  9847 13           	inc de				; skip 1 space												;9847	13
4118  9848 13           	inc de				; skip 1 space												;9848	13
4119  9849 13           	inc de				; skip 1 space												;9849	13
4120  984A              ; -- print into buffer Mission Time - hour first ....
4121  984A 21 17 78     	ld hl,MISSION_TIME	; Digits of Mission current Time							;984a	21 17 78
4122  984D 01 01 00     	ld bc,1				; 1 byte - only hours digit									;984d	01 01 00
4123  9850 ED B0        	ldir				; copy to Status Bar Buffer									;9850	ed b0
4124  9852              ; -- ... and minutes
4125  9852 03           	inc bc				; set bc to 1 (after ldir bc = 0)							;9852	03
4126  9853 03           	inc bc				; bc - 2 digits of minutes 									;9853	03
4127  9854 13           	inc de				; skip 1 space												;9854	13
4128  9855 ED B0        	ldir				; copy to Status Bar Buffer									;9855	ed b0
4129  9857              ; -- print directly to Offscreen Buffer char ':' drawing pixels [-][X][X][-]
4130  9857 3E 14        	ld a,%00010100		; '-' char as pixels										;9857	3e 14
4131  9859 32 CF AA     	ld (VSCRBUF+(1*44)+35),a	; store into Buffer at (140,1)px [WIDE SCREEN]		;9859	32 cf aa
4132  985C 32 27 AB     	ld (VSCRBUF+(3*44)+35),a	; store into Buffer at (140,3)px [WIDE SCREEN]		;985c	32 27 ab
4133  985F
4134  985F              ; -- transform Status Bar values to chars and print copy to Offscreen Buffer
4135  985F 21 38 B6     	ld hl,VSTATBUF		; To Screen Status Bar Buffer 								;985f	21 38 b6
4136  9862 11 86 AA     	ld de,VSCRBUF+6		; destination coord (24,0)px 								;9862	11 86 aa
4137  9865              .NEXT_DIGIT:
4138  9865 7E           	ld a,(hl)			; a - value (digit) from Status Bar Buffer					;9865	7e
4139  9866 FE 21        	cp '!'				; check if it is data derminate char?						;9866	fe 21
4140  9868 C8           	ret z				; yes ----------------- End of Proc ----------------------- ;9868	c8
4141  9869 E5           	push hl				; save hl - source address in Status Bar buffer				;9869	e5
4142  986A FE 20        	cp ' '				; is it ' ' (space) 										;986a	fe 20
4143  986C C4 89 98     	call nz,DRAW_DIGIT_GFX	; no - draw digit into Offscreen Buffer					;986c	c4 89 98
4144  986F E1           	pop hl				; restore hl - address in Status Bar buffer					;986f	e1
4145  9870 13           	inc de				; next destination address									;9870	13
4146  9871 23           	inc hl				; next digit or space in Status Bar buffer					;9871	23
4147  9872 18 F1        	jr .NEXT_DIGIT		; draw next digit											;9872	18 f1
4148  9874
4149  9874
4150  9874              ;***********************************************************************************************
4151  9874              ; Convert Number to its Digits
4152  9874              ; IN: a - number value in range (0..29)
4153  9874              ;     hl - destination addres where digits are stored
4154  9874              ; OUT: hl - address incrased by 2 (right after stored digits)
4155  9874              NUM_2_DIGITS:
4156  9874 FE 0A        	cp 10				; is value less than 10										;9874	fe 0a
4157  9876 FA 85 98     	jp m,.STORE_EXIT	; yes - store value as second digit and exit				;9876	fa 85 98
4158  9879              ; -- value to convert >= 10 - 2 digits are needed
4159  9879 36 01        	ld (hl),1			; store 1st digit as '1' (tens)								;9879	36 01
4160  987B D6 0A        	sub 10				; substract 10 												;987b	d6 0a
4161  987D FE 0A        	cp 10				; is now value < 10 (was in range 10..19) ?					;987d	fe 0a
4162  987F FA 85 98     	jp m,.STORE_EXIT	; yes - store value as second digit and exit				;987f	fa 85 98
4163  9882              ; -- value was >= 20 - set 1st digit to '2'
4164  9882 34           	inc (hl)			; set 1st digit to '2'										;9882	34
4165  9883 D6 0A        	sub 10				; a in range (0..9)											;9883	d6 0a
4166  9885              ; -- store rest as second digit and exit
4167  9885              .STORE_EXIT:
4168  9885 23           	inc hl				; shift destination to 2nd digit address					;9885	23
4169  9886 77           	ld (hl),a			; store value left in a										;9886	77
4170  9887 23           	inc hl				; next address in Buffer									;9887	23
4171  9888 C9           	ret					; ---------------------- End of Proc ---------------------- ;9888	c9
4172  9889
4173  9889
4174  9889
4175  9889              ;***********************************************************************************************
4176  9889              ; Print/Draw one Digit on Screen or into Offscreen Buffer in Graphics Mode 1.
4177  9889              ; IN: a - digit value (0..9) to print/draw
4178  9889              ;     de - destination VRAM or VBUF address
4179  9889              DRAW_DIGIT_GFX:
4180  9889 21 AD 98     	ld hl,SPRTAB_DIGITS	; Sprites Table for Digits									;9889	21 ad 98
4181  988C D5           	push de				; save de - destination VRAM or VBUF address				;988c	d5
4182  988D              ; -- calculate sprite address in Table: hl = base address + a * 6 bytes per entry
4183  988D 11 06 00     	ld de,6				; 6 bytes per Sprite data									;988d	11 06 00
4184  9890 3C           	inc a				; shift digit value to 1..10								;9890	3c
4185  9891              .NEXT:
4186  9891 3D           	dec a				; decrement and check if 0									;9891	3d
4187  9892 28 03        	jr z,.DRAW_SPRITE	; yes - address found - draw Sprite							;9892	28 03
4188  9894 19           	add hl,de			; add 6 bytes - hl points to next entry data				;9894	19
4189  9895 18 FA        	jr .NEXT			; continue until a = 0 										;9895	18 fa
4190  9897              ; -- hl points to 6 bytes data definition for digit Sprite
4191  9897              .DRAW_SPRITE:
4192  9897 D1           	pop de				; restore de - destinadion VRAM or VBUF address				;9897	d1
4193  9898 D5           	push de				; save de - destinadion VRAM or VBUF address				;9898	d5
4194  9899 EB           	ex de,hl			; de - sprite data, hl - destination address				;9899	eb
4195  989A ED 4B AB 98  	ld bc,(BYTES_PER_LINE)	; bc - number of bytes per screen line in cur mode		;989a	ed 4b ab 98
4196  989E 3E 05        	ld a,5				; 5 lines to draw (6th is empty)							;989e	3e 05
4197  98A0              l98a0h:
4198  98A0 F5           	push af				; save a - lines counter									;98a0	f5
4199  98A1 1A           	ld a,(de)			; a - byte from Sprite data									;98a1	1a
4200  98A2 77           	ld (hl),a			; store it to VRAM or Offscreen Buffer						;98a2	77
4201  98A3 13           	inc de				; de - address of next Sprite byte							;98a3	13
4202  98A4 09           	add hl,bc			; hl - adrres of destination 1 line below					;98a4	09
4203  98A5 F1           	pop af				; restore a - line counter									;98a5	f1
4204  98A6 3D           	dec a				; decrement counter - check if 0 							;98a6	3d
4205  98A7 20 F7        	jr nz,l98a0h		; no - continue draw all 5 bytes in 5 lines					;98a7	20 f7
4206  98A9 D1           	pop de				; restore de - original destination VRAM of VBUF address	;98a9	d1
4207  98AA C9           	ret					; --------------- End of Proc ----------------------------- ;98aa	c9
4208  98AB
4209  98AB
4210  98AB
4211  98AB              ;***********************************************************************************************
4212  98AB              ; Variable to store current number of bytes per screen line.
4213  98AB              ; This value is used by draw on screen routine and is changed from defaut 32 to 44
4214  98AB              ; when draw to offscreen buffer is performed.
4215  98AB              BYTES_PER_LINE:
4216  98AB 00 00        	defw 0			;98ab	00 	.
4217  98AD
4218  98AD
4219  98AD              ;***********************************************************************************************
4220  98AD              ; Sprites for Digits '0'..'9' - 4x6 px (1x6 bytes)
4221  98AD              SPRTAB_DIGITS:
4222  98AD
4223  98AD 54 44 44 44  	defb $54,$44,$44,$44,$54,$00		; 0							;98ad	54 44 44 44 54 00
4223  98B1 54 00
4224  98B3 10 50 10 10  	defb $10,$50,$10,$10,$54,$00		; 1							;98b3	10 50 10 10 54 00
4224  98B7 54 00
4225  98B9 54 04 54 40  	defb $54,$04,$54,$40,$54,$00		; 2							;98b9	54 04 54 40 54 00
4225  98BD 54 00
4226  98BF 54 04 14 04  	defb $54,$04,$14,$04,$54,$00		; 3							;98bf	54 04 14 04 54 00
4226  98C3 54 00
4227  98C5 40 40 44 54  	defb $40,$40,$44,$54,$04,$00		; 4							;98c5	40 40 44 54 04 00
4227  98C9 04 00
4228  98CB 54 40 54 04  	defb $54,$40,$54,$04,$54,$00		; 5 						;98cb	54 40 54 04 54 00
4228  98CF 54 00
4229  98D1 54 40 54 44  	defb $54,$40,$54,$44,$54,$00		; 6 						;98d1	54 40 54 44 54 00
4229  98D5 54 00
4230  98D7 54 04 04 04  	defb $54,$04,$04,$04,$04,$00		; 7 						;98d7	54 04 04 04 04 00
4230  98DB 04 00
4231  98DD 54 44 54 44  	defb $54,$44,$54,$44,$54,$00		; 8 						;98dd	54 44 54 44 54 00
4231  98E1 54 00
4232  98E3 54 44 54 04  	defb $54,$44,$54,$04,$54,$00		; 9 						;98e3	54 44 54 04 54 00
4232  98E7 54 00
4233  98E9
4234  98E9
4235  98E9              ;***********************************************************************************************
4236  98E9              ; Print/Draw one Character on Screen or into Offscreen Buffer in Graphics Mode 1.
4237  98E9              ; IN: a - char to print/draw
4238  98E9              ;     de - destination VRAM or VBUF address
4239  98E9              DRAW_CHAR_GFX:
4240  98E9              ; -- first check special chars
4241  98E9 FE 2E        	cp '.'				; chack if char '.' (dot)									;98e9	fe 2e
4242  98EB 28 37        	jr z,.DOT			; yes - draw '.' 											;98eb	28 37
4243  98ED FE 2C        	cp ','				; check if char ',' (comma)									;98ed	fe 2c
4244  98EF 28 2C        	jr z,.COMMA			; yes - draw ',' (comma)									;98ef	28 2c
4245  98F1 FE 3D        	cp '='				; check if char '=' (equal)									;98f1	fe 3d
4246  98F3 28 21        	jr z,.EQUAL_SIGN	; yes - draw char '=' (equal)								;98f3	28 21
4247  98F5 FE 20        	cp ' '				; check if char ' ' (space)									;98f5	fe 20
4248  98F7 28 32        	jr z,.SPACE			; yes - draw char ' ' (space)								;98f7	28 32
4249  98F9              ; -- next range of chars are digits
4250  98F9 FE 30        	cp '0'				; check if char code < '0'									;98f9	fe 30
4251  98FB F8           	ret m				; yes ------- End of Proc (not supported char) ------------ ;98fb	f8
4252  98FC FE 3A        	cp '9'+1			; check if char is digit '0'..'9'							;98fc	fe 3a
4253  98FE FA 0E 99     	jp m,.DIGITS		; yes - draw digit 											;98fe	fa 0e 99
4254  9901              ; -- next range of chars are letters 'A'..'Z'
4255  9901 FE 41        	cp 'A'				; check if char code < 'A'									;9901	fe 41
4256  9903 F8           	ret m				; yes ------- End of Proc (not supported char) ------------ ;9903	f8
4257  9904 FE 5B        	cp 'Z'+1			; check if char is letter 'A'..'Z'							;9904	fe 5b
4258  9906 F0           	ret p				; no -------_ End of Proc (not supported char) ------------ ;9906	f0 	.
4259  9907              .LETTERS
4260  9907 D6 40        	sub $40				; shift a range to 1..26 for 'A'..'Z'						;9907	d6 40
4261  9909 21 6C 99     	ld hl,SPRTAB_LETTERS; Sprites Table for Letters									;9909	21 6c 99
4262  990C 18 22        	jr DRAW_CHAR_SPRITE	; draw char sprite from Table 								;990c	18 22
4263  990E              .DIGITS:
4264  990E 21 AD 98     	ld hl,SPRTAB_DIGITS	; Sprites Table for Digits									;990e	21 ad 98
4265  9911 D6 2F        	sub 02fh			; shift a range to 1..10 for '0'..'9'						;9911	d6 2f
4266  9913 C3 30 99     	jp DRAW_CHAR_SPRITE	; draw char sprite from Table 								;9913	c3 30 99
4267  9916              .EQUAL_SIGN:
4268  9916 3E 01        	ld a,1				; set index in Sprites Table to 1 							;9916	3e 01
4269  9918 21 08 9A     	ld hl,SPRTAB_EQUAL	; Sprites Table for Char '=' (1 entry)						;9918	21 08 9a
4270  991B 18 13        	jr DRAW_CHAR_SPRITE	; draw char sprite from Table 								;991b	18 13
4271  991D              .COMMA:
4272  991D 3E 01        	ld a,1				; set index in Sprites Table to 1 							;991d	3e 01
4273  991F 21 14 9A     	ld hl,SPRTAB_COMMA		; Sprites Table for Char ',' (1 entry)						;991f	21 14 9a
4274  9922 18 0C        	jr DRAW_CHAR_SPRITE	; draw char sprite from Table 								;9922	18 0c
4275  9924              .DOT:
4276  9924 3E 01        	ld a,1				; set index in Sprites Table to 1 							;9924	3e 01
4277  9926 21 0E 9A     	ld hl,SPRTAB_DOT	; Sprites Table for Char '.' (1 entry)						;9926	21 0e 9a
4278  9929 18 05        	jr DRAW_CHAR_SPRITE	; draw char sprite from Table 								;9929	18 05
4279  992B              .SPACE:
4280  992B 3E 01        	ld a,1				; set index in Sprites Table to 1 							;992b	3e 01
4281  992D 21 1A 9A     	ld hl,SPRTAB_SPACE		; Sprites Table for Char 'SPACE' (1 entry)					;992d	21 1a 9a
4282  9930
4283  9930              ;***********************************************************************************************
4284  9930              ; Print/Draw one Character on Screen or into Offscreen Buffer in Graphics Mode 1.
4285  9930              ; Character is drawn as Sprite from predefined table (hl) chosen by index (a)
4286  9930              ; IN: hl - Sprites Table with data defined for chars
4287  9930              ;     de - destination VRAM or VBUF address
4288  9930              ;     a - index of char in Table in range:
4289  9930              ;         1..26 for Letters
4290  9930              ;         1..10 for Digits
4291  9930              ;         1..1 for chars '=',',','.','SPACE'
4292  9930              DRAW_CHAR_SPRITE:
4293  9930 D5           	push de				; save de - destinadion VRAM or VBUF address				;9930	d5
4294  9931              ; -- calculate sprite address in Table: hl = base address + (a-1) * 6 bytes per entry
4295  9931 11 06 00     	ld de,6				; de - 6 bytes per char sprite in Table						;9931	11 06 00
4296  9934              .NEXT:
4297  9934 3D           	dec a				; decrement index - check if 0								;9934	3d
4298  9935 28 03        	jr z,.DRAW_SPRITE	; yes - address found - draw sprite							;9935	28 03
4299  9937 19           	add hl,de			; add 6 bytes - hl points to next entry data				;9937	19
4300  9938 18 FA        	jr .NEXT			; continue until a = 0 										;9938	18 fa
4301  993A              ; -- hl points to 6 bytes data definition for char
4302  993A              .DRAW_SPRITE:
4303  993A D1           	pop de				; restore de - destinadion VRAM or VBUF address				;993a	d1
4304  993B EB           	ex de,hl			; hl - destination address, de - source data				;993b	eb
4305  993C 01 20 00     	ld bc,32			; 32 bytes per screen line									;993c	01 20 00
4306  993F 3E 06        	ld a,6				; a - line/bytes counter (6 lines height)					;993f	3e 06
4307  9941              .NEXT_BYTE:
4308  9941 F5           	push af				; save a 													;9941	f5
4309  9942 1A           	ld a,(de)			; a - 4 pixels from sprite									;9942	1a
4310  9943 77           	ld (hl),a			; store into destination address							;9943	77
4311  9944 13           	inc de				; incrase source address - next byte						;9944	13
4312  9945 09           	add hl,bc			; add 32 bytes to destination - next line					;9945	09
4313  9946 F1           	pop af				; restore a - line counter									;9946	f1
4314  9947 3D           	dec a				; decrement and check if 0									;9947	3d
4315  9948 20 F7        	jr nz,.NEXT_BYTE	; no - continue draw all 6 bytes in 6 lines					;9948	20 f7
4316  994A C9           	ret					; --------------- End of Proc ----------------------------- ;994a	c9
4317  994B
4318  994B              ;***********************************************************************************************
4319  994B              ; Not used DEAD code - replaced by PRINT_TEXT_GFX routine.
4320  994B              ; The only difference is way of using CPU Stack. Functionally the same.
4321  994B              ; Print Text on Screen in Graphics Mode 1. Supports CR/LF char (13)
4322  994B              ; IN: hl - null terminated text
4323  994B              ;     de - destination VRAM or VBUF address
4324  994B              __PRINT_TEXT_GFX:
4325  994B D5           	push de				; save de - line start VRAM or VBUF address				;994b	d5
4326  994C              .NEXT_CHAR:
4327  994C 7E           	ld a,(hl)			; a - char to print/draw								;994c	7e
4328  994D B7           	or a				; check if 0 - end of text 								;994d	b7
4329  994E 28 0F        	jr z,.EXIT			; yes ------------ End of Proc ------------------------ ;994e	28 0f
4330  9950 FE 0D        	cp 13				; chack if CR/LF char 									;9950	fe 0d
4331  9952 28 0D        	jr z,.NEXT_LINE		; yes - move destination address to next line 			;9952	28 0d
4332  9954 E5           	push hl				; save hl - address of char to print					;9954	e5
4333  9955 D5           	push de				; save de - destination address							;9955	d5
4334  9956 CD E9 98     	call DRAW_CHAR_GFX	; print/draw char on Screen or into Buffer				;9956	cd e9 98
4335  9959 D1           	pop de				; restore de - destinatin address						;9959	d1
4336  995A E1           	pop hl				; restore hl - text source address						;995a	e1
4337  995B 13           	inc de				; de - next destination address (4px right)				;995b	13
4338  995C 23           	inc hl				; hl - next char to print/draw							;995c	23
4339  995D 18 ED        	jr .NEXT_CHAR		; continue until char = 0								;995d	18 ed
4340  995F              .EXIT:
4341  995F D1           	pop de				; restore de - line start VRAM or VBUF address			;995f	d1
4342  9960 C9           	ret					; ---------------- End of Proc ------------------------ ;9960	c9
4343  9961              .NEXT_LINE:
4344  9961 D1           	pop de				; restore de - destinatin address						;9961	d1
4345  9962 E5           	push hl				; save hl - address of char (CR/LF) to print			;9962	e5
4346  9963              ; -- In Gfx Mode 1 screen resolution is 128x64 px. There are 32 bytes per line wher every byte contains 4 pixels
4347  9963              ;    In order to find addres 6 lines below we have to add 32 * 6 = 192 bytes
4348  9963 21 C0 00     	ld hl,192			; 192 bytes per 6 gfx lines 							;9963	21 c0 00
4349  9966 19           	add hl,de			; calculate new destination address 6 lines below		;9966	19
4350  9967 EB           	ex de,hl			; de - new dst address									;9967	eb
4351  9968 E1           	pop hl				; restore hl - address of char (CR/LF) to print			;9968	e1
4352  9969 23           	inc hl				; hl - next char to print (after CR/LF)					;9969	23
4353  996A 18 DF        	jr __PRINT_TEXT_GFX	; print next char										;996a	18 df
4354  996C
4355  996C
4356  996C              ;***********************************************************************************************
4357  996C              ; Sprites for Letters 'A'..'Z' - 4x6 px (1x6 bytes)
4358  996C              SPRTAB_LETTERS:
4359  996C
4360  996C 10 44 54 44  	defb $10,$44,$54,$44,$44,$00		; A 						;996c	10 44 54 44 44 00
4360  9970 44 00
4361  9972 50 44 50 44  	defb $50,$44,$50,$44,$50,$00		; B 						;9972	50 44 50 44 50 00
4361  9976 50 00
4362  9978 10 44 40 44  	defb $10,$44,$40,$44,$10,$00		; C 						;9978	10 44 40 44 10 00
4362  997C 10 00
4363  997E 50 44 44 44  	defb $50,$44,$44,$44,$50,$00		; D 						;997e	50 44 44 44 50 00
4363  9982 50 00
4364  9984 54 40 50 40  	defb $54,$40,$50,$40,$54,$00		; E 						;9984	54 40 50 40 54 00
4364  9988 54 00
4365  998A 54 40 50 40  	defb $54,$40,$50,$40,$40,$00		; F							;998a	54 40 50 40 40 00
4365  998E 40 00
4366  9990 10 44 40 14  	defb $10,$44,$40,$14,$04,$00		; G 						;9990	10 44 40 14 04 00
4366  9994 04 00
4367  9996 44 44 54 44  	defb $44,$44,$54,$44,$44,$00		; H							;9996	44 44 54 44 44 00
4367  999A 44 00
4368  999C 54 10 10 10  	defb $54,$10,$10,$10,$54,$00		; I							;999c	54 10 10 10 54 00
4368  99A0 54 00
4369  99A2 04 04 04 44  	defb $04,$04,$04,$44,$10,$00		; J							;99a2	04 04 04 44 10 00
4369  99A6 10 00
4370  99A8 44 44 50 44  	defb $44,$44,$50,$44,$44,$00		; K							;99a8	44 44 50 44 44 00
4370  99AC 44 00
4371  99AE 40 40 40 40  	defb $40,$40,$40,$40,$54,$00		; L							;99ae	40 40 40 40 54 00
4371  99B2 54 00
4372  99B4 44 54 44 44  	defb $44,$54,$44,$44,$44,$00		; M							;99b4	44 54 44 44 44 00
4372  99B8 44 00
4373  99BA 44 54 54 54  	defb $44,$54,$54,$54,$44,$00		; N							;99ba	44 54 54 54 44 00
4373  99BE 44 00
4374  99C0 10 44 44 44  	defb $10,$44,$44,$44,$10,$00		; O 						;99c0	10 44 44 44 10 00
4374  99C4 10 00
4375  99C6 50 44 50 40  	defb $50,$44,$50,$40,$40,$00		; P							;99c6	50 44 50 40 40 00
4375  99CA 40 00
4376  99CC 10 44 44 54  	defb $10,$44,$44,$54,$04,$00		; Q 						;99cc	10 44 44 54 04 00
4376  99D0 04 00
4377  99D2 50 44 50 44  	defb $50,$44,$50,$44,$44,$00		; R							;99d2	50 44 50 44 44 00
4377  99D6 44 00
4378  99D8 14 40 10 04  	defb $14,$40,$10,$04,$50,$00		; S							;99d8	14 40 10 04 50 00
4378  99DC 50 00
4379  99DE 54 10 10 10  	defb $54,$10,$10,$10,$10,$00		; T							;99de	54 10 10 10 10 00
4379  99E2 10 00
4380  99E4 44 44 44 44  	defb $44,$44,$44,$44,$10,$00		; U							;99e4	44 44 44 44 10 00
4380  99E8 10 00
4381  99EA 44 44 44 10  	defb $44,$44,$44,$10,$10,$00		; V							;99ea	44 44 44 10 10 00
4381  99EE 10 00
4382  99F0 44 44 44 54  	defb $44,$44,$44,$54,$44,$00		; W							;99f0	44 44 44 54 44 00
4382  99F4 44 00
4383  99F6 44 44 10 44  	defb $44,$44,$10,$44,$44,$00		; X							;99f6	44 44 10 44 44 00
4383  99FA 44 00
4384  99FC 44 44 10 10  	defb $44,$44,$10,$10,$10,$00		; Y							;99fc	44 44 10 10 10 00
4384  9A00 10 00
4385  9A02 54 04 10 40  	defb $54,$04,$10,$40,$54,$00		; Z							;9a02	54 04 10 40 54 00
4385  9A06 54 00
4386  9A08
4387  9A08              ;***********************************************************************************************
4388  9A08              ; Sprite for Character '=' - 4x6 px (1x6 bytes)
4389  9A08              SPRTAB_EQUAL:
4390  9A08
4391  9A08 00 54 00 54  	defb $00,$54,$00,$54,$00,$00		; = 						;9a08	00 54 00 54 00 00
4391  9A0C 00 00
4392  9A0E
4393  9A0E              ;***********************************************************************************************
4394  9A0E              ; Sprite for Character '.' (dot) - 4x6 px (1x6 bytes)
4395  9A0E              SPRTAB_DOT:
4396  9A0E
4397  9A0E 00 00 00 50  	defb $00,$00,$00,$50,$50,$00		; . (dot)					;9a0e	00 00 00 50 50 00
4397  9A12 50 00
4398  9A14
4399  9A14              ;***********************************************************************************************
4400  9A14              ; Sprite for Character ',' (comma) - 4x6 px (1x6 bytes)
4401  9A14              SPRTAB_COMMA:
4402  9A14
4403  9A14 00 00 00 50  	defb $00,$00,$00,$50,$10,$00		; , (comma)					;9a14	00 00 00 50 10 00
4403  9A18 10 00
4404  9A1A
4405  9A1A              ;***********************************************************************************************
4406  9A1A              ; Sprite for Character ' ' (space) - 4x6 px (1x6 bytes)
4407  9A1A              SPRTAB_SPACE:
4408  9A1A
4409  9A1A 00 00 00 00  	defb $00,$00,$00,$00,$00,$00		;   (space)					;9a1a	00 00 00 00 00 00
4409  9A1E 00 00
4410  9A20
4411  9A20              ;***********************************************************************************************
4412  9A20              ; Clear Screen and set Graphics MODE 0 with default Color Palette
4413  9A20              CLEAR_SCREEN_TXT:
4414  9A20              ; -- fill video memory (first 512 bytes) with inverse SPACE char
4415  9A20 21 00 70     	ld hl,VRAM				; src - video memory start								;9a20	21 00 70
4416  9A23 11 01 70     	ld de,VRAM+1			; dst - next byte										;9a23	11 01 70
4417  9A26 01 FF 01     	ld bc,511				; ctn - size of video memory in MODE 0 (txt)			;9a26	01 ff 01
4418  9A29 36 60        	ld (hl),$60				; inverse SPACE char to fill the screen					;9a29	36 60
4419  9A2B ED B0        	ldir					; fill VRAM with given char (SPACE)						;9a2b	ed b0
4420  9A2D              ; -- set Video Text Mode 0, Color Palette 0
4421  9A2D AF           	xor a					; VDG Txt MODE 0 Colors (Green)							;9a2d	af
4422  9A2E 32 00 68     	ld (IOLATCH),a			; store to hardware register							;9a2e	32 00 68
4423  9A31 C9           	ret						; ----------------- End of Proc ---------------			;9a31	c9
4424  9A32
4425  9A32              ;***********************************************************************************************
4426  9A32              ; Print Text on Screen in Text Mode. Supports CR/LF char (13)
4427  9A32              ; IN: hl - null terminated text
4428  9A32              ;     de - destination VRAM address
4429  9A32              PRINT_TEXT:
4430  9A32 D5           	push de					; save de - VRAM address								;9a32	d5
4431  9A33              .NEXT_CHAR:
4432  9A33 7E           	ld a,(hl)				; a - char to display on screen							;9a33	7e
4433  9A34 B7           	or a					; check if 0 - end of text								;9a34	b7
4434  9A35 28 0B        	jr z,.EXIT				; yes ------------ End of Proc ------------------------ ;9a35	28 0b
4435  9A37 FE 0D        	cp 13					; chack if CR/LF char 									;9a37	fe 0d
4436  9A39 28 09        	jr z,.NEXT_LINE			; yes - move destination addres to next line			;9a39	28 09
4437  9A3B CB F7        	set 6,a					; set INVERSE bit for char								;9a3b	cb f7
4438  9A3D 12           	ld (de),a				; store in VRAM - display char							;9a3d	12
4439  9A3E 23           	inc hl					; hl - next char in source text							;9a3e	23
4440  9A3F 13           	inc de					; de - next VRAM destination address					;9a3f	13
4441  9A40 18 F1        	jr .NEXT_CHAR			; print next char										;9a40	18 f1
4442  9A42              .EXIT:
4443  9A42 D1           	pop de					; restore de - VRAM address								;9a42	d1
4444  9A43 C9           	ret						; ----------------- End of Proc ----------------------- ;9a43	c9
4445  9A44              .NEXT_LINE:
4446  9A44 D1           	pop de					; restore de - VRAM address of line begin				;9a44	d1
4447  9A45 E5           	push hl					; save hl - source adrress								;9a45	e5
4448  9A46 21 20 00     	ld hl,32				; 32 bytes per screen line								;9a46	21 20 00
4449  9A49 19           	add hl,de				; hl - VRAM address of next line						;9a49	19
4450  9A4A EB           	ex de,hl				; de - new destination VRAM address						;9a4a	eb
4451  9A4B E1           	pop hl					; restore hl - source address							;9a4b	e1
4452  9A4C 23           	inc hl					; hl - next char to display (skip CR/LF)				;9a4c	23
4453  9A4D 18 E3        	jr PRINT_TEXT			; print next char										;9a4d	18 e3
4454  9A4F
4455  9A4F              ;***********************************************************************************************
4456  9A4F              ; Print Manual/Instruction Pages in sequential order.
4457  9A4F              ; After every Page display prompt and wait for player to press C to continue.
4458  9A4F              SHOW_MANUAL:
4459  9A4F CD 20 9A     	call CLEAR_SCREEN_TXT	; clear screen - Mode 0 (TXT)							;9a4f	cd 20 9a
4460  9A52 21 D8 9A     	ld hl,TXT_MANUAL_PAGE1	; instruction text - Page 1								;9a52	21 d8 9a
4461  9A55 11 00 70     	ld de,VRAM				; dst - screen coord (0,0)								;9a55	11 00 70
4462  9A58 CD 32 9A     	call PRINT_TEXT			; print Instruction Page 1 on screen					;9a58	cd 32 9a
4463  9A5B CD A0 9A     	call PROMPT_C_TO_CONT	; display prompt and wait for 'C' to continue			;9a5b	cd a0 9a
4464  9A5E CD 20 9A     	call CLEAR_SCREEN_TXT	; clear screen - Mode 0 (TXT)							;9a5e	cd 20 9a
4465  9A61 21 03 9C     	ld hl,TXT_MANUAL_PAGE2	; instruction text - Page 2								;9a61	21 03 9c
4466  9A64 11 20 70     	ld de,VRAM+(32*1)+0		; dst - screen coord (0,1)								;9a64	11 20 70
4467  9A67 CD 32 9A     	call PRINT_TEXT			; print Instruction Page 2 on screen					;9a67	cd 32 9a
4468  9A6A CD A0 9A     	call PROMPT_C_TO_CONT	; display prompt and wait for 'C' to continue			;9a6a	cd a0 9a
4469  9A6D CD 20 9A     	call CLEAR_SCREEN_TXT	; clear screen - Mode 0 (TXT)							;9a6d	cd 20 9a
4470  9A70 21 6E 9D     	ld hl,TXT_MANUAL_PAGE3	; instruction text - Page 3								;9a70	21 6e 9d
4471  9A73 11 20 70     	ld de,VRAM+(32*1)+0		; dst - screen coord (0,1)								;9a73	11 20 70
4472  9A76 CD 32 9A     	call PRINT_TEXT			; print Instruction Page 3 on screen					;9a76	cd 32 9a
4473  9A79 CD A0 9A     	call PROMPT_C_TO_CONT	; display prompt and wait for 'C' to continue			;9a79	cd a0 9a
4474  9A7C CD 20 9A     	call CLEAR_SCREEN_TXT	; clear screen - Mode 0 (TXT)							;9a7c	cd 20 9a
4475  9A7F 21 EB 9E     	ld hl,TXT_MANUAL_PAGE4	; instruction text - Page 4								;9a7f	21 eb 9e
4476  9A82 11 20 70     	ld de,VRAM+(32*1)+0		; dst - screen coord (0,1)								;9a82	11 20 70
4477  9A85 CD 32 9A     	call PRINT_TEXT			; print Instruction Page 4 on screen					;9a85	cd 32 9a
4478  9A88 CD A0 9A     	call PROMPT_C_TO_CONT	; display prompt and wait for 'C' to continue			;9a88	cd a0 9a
4479  9A8B CD 20 9A     	call CLEAR_SCREEN_TXT	; clear screen - Mode 0 (TXT)							;9a8b	cd 20 9a
4480  9A8E 21 1E A0     	ld hl,TXT_MANUAL_PAGE5	; instruction text - Page 5								;9a8e	21 1e a0
4481  9A91 11 20 70     	ld de,VRAM+(32*1)+0		; dst - screen coord (0,1)								;9a91	11 20 70
4482  9A94 CD 32 9A     	call PRINT_TEXT			; print Instruction Page 5 on screen					;9a94	cd 32 9a
4483  9A97 CD A0 9A     	call PROMPT_C_TO_CONT	; display prompt and wait for 'C' to continue			;9a97	cd a0 9a
4484  9A9A CD 4B 94     	call CLEAR_SCREEN_GFX	; clear screeen - Mode 1 (Gfx)							;9a9a	cd 4b 94
4485  9A9D C3 CB 8F     	jp GAME_START_SCREEN		;9a9d	c3 cb 8f 	. . .
4486  9AA0
4487  9AA0              PROMPT_C_TO_CONT:
4488  9AA0 21 DC A0     	ld hl,TXT_PRESS_C_CONT	; text - Press C to Continue							;9aa0	21 dc a0
4489  9AA3 11 E0 71     	ld de,VRAM+(15*32)		; dst - screen coord (0,15) - last line					;9aa3	11 e0 71
4490  9AA6 CD 32 9A     	call PRINT_TEXT			; print text on screen									;9aa6	cd 32 9a
4491  9AA9              .WAIT_C_PRESSED:
4492  9AA9 3A FB 68     	ld a,(KEYS_ROW_2)		; select Keyboard row 2 								;9aa9	3a fb 68
4493  9AAC CB 5F        	bit 3,a					; check if key 'C' is pressed							;9aac	cb 5f
4494  9AAE 20 F9        	jr nz,.WAIT_C_PRESSED	; no - wait for press key 'C'							;9aae	20 f9
4495  9AB0              .WAIT_C_RELEASED:
4496  9AB0 3A FB 68     	ld a,(KEYS_ROW_2)		; select Keyboard row 2 								;9ab0	3a fb 68
4497  9AB3 CB 5F        	bit 3,a					; check if key 'C' is pressed							;9ab3	cb 5f
4498  9AB5 28 F9        	jr z,.WAIT_C_RELEASED	; yes - wait for release key 'C'						;9ab5	28 f9
4499  9AB7              ; -- wait delay and check again if key 'C' is released
4500  9AB7 11 00 20     	ld de,$2000				; delay parameter value 								;9ab7	11 00 20
4501  9ABA CD 1D 94     	call DELAY_DE			; wait Delay											;9aba	cd 1d 94
4502  9ABD              ; -- read keyboard again
4503  9ABD 3A FB 68     	ld a,(KEYS_ROW_2)		; select Keyboard row 2 								;9abd	3a fb 68
4504  9AC0 CB 5F        	bit 3,a					; check if key 'C' is pressed							;9ac0	cb 5f
4505  9AC2 28 EC        	jr z,.WAIT_C_RELEASED	; yes - wait for release key 'C'						;9ac2	28 ec
4506  9AC4              ; -- key is released
4507  9AC4 C9           	ret						; ---------------------- End of Proc ------------------ ;9ac4	c9
4508  9AC5
4509  9AC5
4510  9AC5              ;***********************************************************************************************
4511  9AC5              ;
4512  9AC5              ;    G A M E   T X T   D A T A
4513  9AC5              ;
4514  9AC5              ;***********************************************************************************************
4515  9AC5
4516  9AC5              	;module TXT
4517  9AC5
4518  9AC5              ;***********************************************************************************************
4519  9AC5              ; Input Settings Question text
4520  9AC5              TXT_JOYSTICK_Q:
4521  9AC5 4A 4F 59 53  	defb "JOYSTICK    Y OR N",0					;9ac5	4a 4f 59 53 54 49 43 4b 20 20 20 20 59 20 4f 52 20 4e 00
4521  9AC9 54 49 43 4B
4521  9ACD 20 20 20 20
4521  9AD1 59 20 4F 52
4521  9AD5 20 4E 00
4522  9AD8
4523  9AD8              ;***********************************************************************************************
4524  9AD8              ; Manual/Instruction Page 1 text
4525  9AD8              TXT_MANUAL_PAGE1:
4526  9AD8 0D           	defb 13										;9ad8	0d
4527  9AD9 20 20 20 20  	defb "     D A W N    P A T R O L",13		;9ad9	20 20 20 20 20 44 20 41 20 57 20 4e 20 20 20 20 50 20 41 20 54 20 52 20 4f 20 4c 0d
4527  9ADD 20 44 20 41
4527  9AE1 20 57 20 4E
4527  9AE5 20 20 20 20
4527  9AE9 50 20 41 20
4527  9AED 54 20 52 20
4527  9AF1 4F 20 4C 0D
4528  9AF5 0D           	defb 13										;9af5	0d
4529  9AF6 59 4F 55 20  	defb "YOU HAVE TO RESCUE 80 PRISONERS",13	;9af6	59 4f 55 20 48 41 56 45 20 54 4f 20 52 45 53 43 55 45 20 38 30 20 50 52 49 53 4f 4e 45 52 53 0d
4529  9AFA 48 41 56 45
4529  9AFE 20 54 4F 20
4529  9B02 52 45 53 43
4529  9B06 55 45 20 38
4529  9B0A 30 20 50 52
4529  9B0E 49 53 4F 4E
4529  9B12 45 52 53 0D
4530  9B16 46 52 4F 4D  	defb "FROM 4 ENEMY PRISON CAMPS. TO",13		;9b16	46 52 4f 4d 20 34 20 45 4e 45 4d 59 20 50 52 49 53 4f 4e 20 43 41 4d 50 53 2e 20 54 4f 0d
4530  9B1A 20 34 20 45
4530  9B1E 4E 45 4D 59
4530  9B22 20 50 52 49
4530  9B26 53 4F 4E 20
4530  9B2A 43 41 4D 50
4530  9B2E 53 2E 20 54
4530  9B32 4F 0D
4531  9B34 52 45 53 43  	defb "RESCUE PRISONERS YOU HAVE TO",13		;9b34	52 45 53 43 55 45 20 50 52 49 53 4f 4e 45 52 53 20 59 4f 55 20 48 41 56 45 20 54 4f 0d
4531  9B38 55 45 20 50
4531  9B3C 52 49 53 4F
4531  9B40 4E 45 52 53
4531  9B44 20 59 4F 55
4531  9B48 20 48 41 56
4531  9B4C 45 20 54 4F
4531  9B50 0D
4532  9B51 4C 41 4E 44  	defb "LAND IN THE PRISON ENCLOSURE.",13		;9b51	4c 41 4e 44 20 49 4e 20 54 48 45 20 50 52 49 53 4f 4e 20 45 4e 43 4c 4f 53 55 52 45 2e 0d
4532  9B55 20 49 4E 20
4532  9B59 54 48 45 20
4532  9B5D 50 52 49 53
4532  9B61 4F 4E 20 45
4532  9B65 4E 43 4C 4F
4532  9B69 53 55 52 45
4532  9B6D 2E 0D
4533  9B6F 50 52 49 53  	defb "PRISONERS WILL RUN OUT AND GET",13	;9b6f	50 52 49 53 4f 4e 45 52 53 20 57 49 4c 4c 20 52 55 4e 20 4f 55 54 20 41 4e 44 20 47 45 54 0d
4533  9B73 4F 4E 45 52
4533  9B77 53 20 57 49
4533  9B7B 4C 4C 20 52
4533  9B7F 55 4E 20 4F
4533  9B83 55 54 20 41
4533  9B87 4E 44 20 47
4533  9B8B 45 54 0D
4534  9B8E 49 4E 54 4F  	defb "INTO YOUR HELICOPTER ONCE YOU",13		;9b8e	49 4e 54 4f 20 59 4f 55 52 20 48 45 4c 49 43 4f 50 54 45 52 20 4f 4e 43 45 20 59 4f 55 0d
4534  9B92 20 59 4F 55
4534  9B96 52 20 48 45
4534  9B9A 4C 49 43 4F
4534  9B9E 50 54 45 52
4534  9BA2 20 4F 4E 43
4534  9BA6 45 20 59 4F
4534  9BAA 55 0D
4535  9BAC 48 41 56 45  	defb "HAVE LANDED. THE MORE PRISONERS",13	;9bac	48 41 56 45 20 4c 41 4e 44 45 44 2e 20 54 48 45 20 4d 4f 52 45 20 50 52 49 53 4f 4e 45 52 53 0d
4535  9BB0 20 4C 41 4E
4535  9BB4 44 45 44 2E
4535  9BB8 20 54 48 45
4535  9BBC 20 4D 4F 52
4535  9BC0 45 20 50 52
4535  9BC4 49 53 4F 4E
4535  9BC8 45 52 53 0D
4536  9BCC 49 4E 20 59  	defb "IN YOUR HELICOPTER THE FASTER",13		;9bcc	49 4e 20 59 4f 55 52 20 48 45 4c 49 43 4f 50 54 45 52 20 54 48 45 20 46 41 53 54 45 52 0d
4536  9BD0 4F 55 52 20
4536  9BD4 48 45 4C 49
4536  9BD8 43 4F 50 54
4536  9BDC 45 52 20 54
4536  9BE0 48 45 20 46
4536  9BE4 41 53 54 45
4536  9BE8 52 0D
4537  9BEA 49 54 20 57  	defb "IT WILL USE UP ITS FUEL.",0			;9bea	49 54 20 57 49 4c 4c 20 55 53 45 20 55 50 20 49 54 53 20 46 55 45 4c 2e 00
4537  9BEE 49 4C 4C 20
4537  9BF2 55 53 45 20
4537  9BF6 55 50 20 49
4537  9BFA 54 53 20 46
4537  9BFE 55 45 4C 2E
4537  9C02 00
4538  9C03
4539  9C03              ;***********************************************************************************************
4540  9C03              ; Manual/Instruction Page 2 text
4541  9C03              TXT_MANUAL_PAGE2:
4542  9C03 59 4F 55 20  	defb "YOU MUST RETURN BACK TO YOUR",13		;9c03	59 4f 55 20 4d 55 53 54 20 52 45 54 55 52 4e 20 42 41 43 4b 20 54 4f 20 59 4f 55 52 0d
4542  9C07 4D 55 53 54
4542  9C0B 20 52 45 54
4542  9C0F 55 52 4E 20
4542  9C13 42 41 43 4B
4542  9C17 20 54 4F 20
4542  9C1B 59 4F 55 52
4542  9C1F 0D
4543  9C20 42 41 53 45  	defb "BASE BEFORE YOUR FUEL RUNS OUT.",13	;9c20	42 41 53 45 20 42 45 46 4f 52 45 20 59 4f 55 52 20 46 55 45 4c 20 52 55 4e 53 20 4f 55 54 2e 0d
4543  9C24 20 42 45 46
4543  9C28 4F 52 45 20
4543  9C2C 59 4F 55 52
4543  9C30 20 46 55 45
4543  9C34 4C 20 52 55
4543  9C38 4E 53 20 4F
4543  9C3C 55 54 2E 0D
4544  9C40 59 4F 55 52  	defb "YOUR MISSION STARTS AT 4.00 AM",13	;9c40	59 4f 55 52 20 4d 49 53 53 49 4f 4e 20 53 54 41 52 54 53 20 41 54 20 34 2e 30 30 20 41 4d 0d
4544  9C44 20 4D 49 53
4544  9C48 53 49 4F 4E
4544  9C4C 20 53 54 41
4544  9C50 52 54 53 20
4544  9C54 41 54 20 34
4544  9C58 2E 30 30 20
4544  9C5C 41 4D 0D
4545  9C5F 41 4E 44 20  	defb "AND WILL TERMINATE AT 6.00 AM.",13	;9c5f	41 4e 44 20 57 49 4c 4c 20 54 45 52 4d 49 4e 41 54 45 20 41 54 20 36 2e 30 30 20 41 4d 2e 0d
4545  9C63 57 49 4C 4C
4545  9C67 20 54 45 52
4545  9C6B 4D 49 4E 41
4545  9C6F 54 45 20 41
4545  9C73 54 20 36 2E
4545  9C77 30 30 20 41
4545  9C7B 4D 2E 0D
4546  9C7E 59 4F 55 20  	defb "YOU HAVE 4 HELICOPTERS AT YOUR",13	;9c7e	59 4f 55 20 48 41 56 45 20 34 20 48 45 4c 49 43 4f 50 54 45 52 53 20 41 54 20 59 4f 55 52 0d
4546  9C82 48 41 56 45
4546  9C86 20 34 20 48
4546  9C8A 45 4C 49 43
4546  9C8E 4F 50 54 45
4546  9C92 52 53 20 41
4546  9C96 54 20 59 4F
4546  9C9A 55 52 0D
4547  9C9D 44 49 53 50  	defb "DISPOSAL. RESCUED MEN ARE ",13		;9c9d	44 49 53 50 4f 53 41 4c 2e 20 52 45 53 43 55 45 44 20 4d 45 4e 20 41 52 45 20 0d
4547  9CA1 4F 53 41 4C
4547  9CA5 2E 20 52 45
4547  9CA9 53 43 55 45
4547  9CAD 44 20 4D 45
4547  9CB1 4E 20 41 52
4547  9CB5 45 20 0D
4548  9CB8 57 4F 52 54  	defb "WORTH 100, 200, 500 AND 1500",13		;9cb8	57 4f 52 54 48 20 31 30 30 2c 20 32 30 30 2c 20 35 30 30 20 41 4e 44 20 31 35 30 30 0d
4548  9CBC 48 20 31 30
4548  9CC0 30 2C 20 32
4548  9CC4 30 30 2C 20
4548  9CC8 35 30 30 20
4548  9CCC 41 4E 44 20
4548  9CD0 31 35 30 30
4548  9CD4 0D
4549  9CD5 50 4F 49 4E  	defb "POINTS DEPENDING UPON WHETHER",13		;9cd5	50 4f 49 4e 54 53 20 44 45 50 45 4e 44 49 4e 47 20 55 50 4f 4e 20 57 48 45 54 48 45 52 0d
4549  9CD9 54 53 20 44
4549  9CDD 45 50 45 4E
4549  9CE1 44 49 4E 47
4549  9CE5 20 55 50 4F
4549  9CE9 4E 20 57 48
4549  9CED 45 54 48 45
4549  9CF1 52 0D
4550  9CF3 54 48 45 59  	defb "THEY ARE IN THE FOURTH OR FIRST",13	;9cf3	54 48 45 59 20 41 52 45 20 49 4e 20 54 48 45 20 46 4f 55 52 54 48 20 4f 52 20 46 49 52 53 54 0d
4550  9CF7 20 41 52 45
4550  9CFB 20 49 4E 20
4550  9CFF 54 48 45 20
4550  9D03 46 4F 55 52
4550  9D07 54 48 20 4F
4550  9D0B 52 20 46 49
4550  9D0F 52 53 54 0D
4551  9D13 43 41 4D 50  	defb "CAMP. (FOURTH IS THE CLOSEST)",13		;9d13	43 41 4d 50 2e 20 28 46 4f 55 52 54 48 20 49 53 20 54 48 45 20 43 4c 4f 53 45 53 54 29 0d
4551  9D17 2E 20 28 46
4551  9D1B 4F 55 52 54
4551  9D1F 48 20 49 53
4551  9D23 20 54 48 45
4551  9D27 20 43 4C 4F
4551  9D2B 53 45 53 54
4551  9D2F 29 0D
4552  9D31 59 4F 55 52  	defb "YOUR HELICOPTER MUST NOT HIT ",13		;9d31	59 4f 55 52 20 48 45 4c 49 43 4f 50 54 45 52 20 4d 55 53 54 20 4e 4f 54 20 48 49 54 20 0d
4552  9D35 20 48 45 4C
4552  9D39 49 43 4F 50
4552  9D3D 54 45 52 20
4552  9D41 4D 55 53 54
4552  9D45 20 4E 4F 54
4552  9D49 20 48 49 54
4552  9D4D 20 0D
4553  9D4F 4F 52 20 42  	defb "OR BE HIT BY ANY OBSTACLE WITH",0		;9d4f	4f 52 20 42 45 20 48 49 54 20 42 59 20 41 4e 59 20 4f 42 53 54 41 43 4c 45 20 57 49 54 48 00
4553  9D53 45 20 48 49
4553  9D57 54 20 42 59
4553  9D5B 20 41 4E 59
4553  9D5F 20 4F 42 53
4553  9D63 54 41 43 4C
4553  9D67 45 20 57 49
4553  9D6B 54 48 00
4554  9D6E
4555  9D6E              ;***********************************************************************************************
4556  9D6E              ; Manual/Instruction Page 3 text
4557  9D6E              TXT_MANUAL_PAGE3:
4558  9D6E 54 48 45 20  	defb "THE EXCEPTION OF A PLANE COMING",13	;9d6e	54 48 45 20 45 58 43 45 50 54 49 4f 4e 20 4f 46 20 41 20 50 4c 41 4e 45 20 43 4f 4d 49 4e 47 0d
4558  9D72 45 58 43 45
4558  9D76 50 54 49 4F
4558  9D7A 4E 20 4F 46
4558  9D7E 20 41 20 50
4558  9D82 4C 41 4E 45
4558  9D86 20 43 4F 4D
4558  9D8A 49 4E 47 0D
4559  9D8E 54 4F 57 41  	defb "TOWARDS OR GOING AWAY FROM YOU,",13	;9d8e	54 4f 57 41 52 44 53 20 4f 52 20 47 4f 49 4e 47 20 41 57 41 59 20 46 52 4f 4d 20 59 4f 55 2c 0d
4559  9D92 52 44 53 20
4559  9D96 4F 52 20 47
4559  9D9A 4F 49 4E 47
4559  9D9E 20 41 57 41
4559  9DA2 59 20 46 52
4559  9DA6 4F 4D 20 59
4559  9DAA 4F 55 2C 0D
4560  9DAE 41 4E 59 20  	defb "ANY EXPLOSION OR A PRISONER.",13		;9dae	41 4e 59 20 45 58 50 4c 4f 53 49 4f 4e 20 4f 52 20 41 20 50 52 49 53 4f 4e 45 52 2e 0d
4560  9DB2 45 58 50 4C
4560  9DB6 4F 53 49 4F
4560  9DBA 4E 20 4F 52
4560  9DBE 20 41 20 50
4560  9DC2 52 49 53 4F
4560  9DC6 4E 45 52 2E
4560  9DCA 0D
4561  9DCB 49 46 20 54  	defb "IF THE HELICOPTER IS FACING YOU",13	;9dcb	49 46 20 54 48 45 20 48 45 4c 49 43 4f 50 54 45 52 20 49 53 20 46 41 43 49 4e 47 20 59 4f 55 0d
4561  9DCF 48 45 20 48
4561  9DD3 45 4C 49 43
4561  9DD7 4F 50 54 45
4561  9DDB 52 20 49 53
4561  9DDF 20 46 41 43
4561  9DE3 49 4E 47 20
4561  9DE7 59 4F 55 0D
4562  9DEB 54 48 45 4E  	defb "THEN IT WILL SHOOT STRAIGHT DOWN",13	;9deb	54 48 45 4e 20 49 54 20 57 49 4c 4c 20 53 48 4f 4f 54 20 53 54 52 41 49 47 48 54 20 44 4f 57 4e 0d
4562  9DEF 20 49 54 20
4562  9DF3 57 49 4C 4C
4562  9DF7 20 53 48 4F
4562  9DFB 4F 54 20 53
4562  9DFF 54 52 41 49
4562  9E03 47 48 54 20
4562  9E07 44 4F 57 4E
4562  9E0B 0D
4563  9E0C 4F 4E 4C 59  	defb "ONLY 6 HELICOPTER BULLETS ARE ",13	;9e0c	4f 4e 4c 59 20 36 20 48 45 4c 49 43 4f 50 54 45 52 20 42 55 4c 4c 45 54 53 20 41 52 45 20 0d
4563  9E10 20 36 20 48
4563  9E14 45 4C 49 43
4563  9E18 4F 50 54 45
4563  9E1C 52 20 42 55
4563  9E20 4C 4C 45 54
4563  9E24 53 20 41 52
4563  9E28 45 20 0D
4564  9E2B 41 4C 4C 4F  	defb "ALLOWED ON THE SCREEN AT ONE ",13		;9e2b	41 4c 4c 4f 57 45 44 20 4f 4e 20 54 48 45 20 53 43 52 45 45 4e 20 41 54 20 4f 4e 45 20 0d
4564  9E2F 57 45 44 20
4564  9E33 4F 4E 20 54
4564  9E37 48 45 20 53
4564  9E3B 43 52 45 45
4564  9E3F 4E 20 41 54
4564  9E43 20 4F 4E 45
4564  9E47 20 0D
4565  9E49 54 49 4D 45  	defb "TIME. PLANES CANNOT BE SHOT.",13		;9e49	54 49 4d 45 2e 20 50 4c 41 4e 45 53 20 43 41 4e 4e 4f 54 20 42 45 20 53 48 4f 54 2e 0d
4565  9E4D 2E 20 50 4C
4565  9E51 41 4E 45 53
4565  9E55 20 43 41 4E
4565  9E59 4E 4F 54 20
4565  9E5D 42 45 20 53
4565  9E61 48 4F 54 2E
4565  9E65 0D
4566  9E66 59 4F 55 52  	defb "YOUR MISSION WILL BE OVER WHEN",13	;9e66	59 4f 55 52 20 4d 49 53 53 49 4f 4e 20 57 49 4c 4c 20 42 45 20 4f 56 45 52 20 57 48 45 4e 0d
4566  9E6A 20 4D 49 53
4566  9E6E 53 49 4F 4E
4566  9E72 20 57 49 4C
4566  9E76 4C 20 42 45
4566  9E7A 20 4F 56 45
4566  9E7E 52 20 57 48
4566  9E82 45 4E 0D
4567  9E85 59 4F 55 20  	defb "YOU HAVE LOST ALL YOUR",13			;9e85	59 4f 55 20 48 41 56 45 20 4c 4f 53 54 20 41 4c 4c 20 59 4f 55 52 0d
4567  9E89 48 41 56 45
4567  9E8D 20 4C 4F 53
4567  9E91 54 20 41 4C
4567  9E95 4C 20 59 4F
4567  9E99 55 52 0D
4568  9E9C 48 45 4C 49  	defb "HELICOPTERS, HAVE RUN OUT OF",13		;9e9c	48 45 4c 49 43 4f 50 54 45 52 53 2c 20 48 41 56 45 20 52 55 4e 20 4f 55 54 20 4f 46 0d
4568  9EA0 43 4F 50 54
4568  9EA4 45 52 53 2C
4568  9EA8 20 48 41 56
4568  9EAC 45 20 52 55
4568  9EB0 4E 20 4F 55
4568  9EB4 54 20 4F 46
4568  9EB8 0D
4569  9EB9 54 49 4D 45  	defb "TIME OR HAVE RESCUED ALL THE",13		;9eb9	54 49 4d 45 20 4f 52 20 48 41 56 45 20 52 45 53 43 55 45 44 20 41 4c 4c 20 54 48 45 0d
4569  9EBD 20 4F 52 20
4569  9EC1 48 41 56 45
4569  9EC5 20 52 45 53
4569  9EC9 43 55 45 44
4569  9ECD 20 41 4C 4C
4569  9ED1 20 54 48 45
4569  9ED5 0D
4570  9ED6 52 45 4D 41  	defb "REMAINING PRISONERS.",0				;9ed6	52 45 4d 41 49 4e 49 4e 47 20 50 52 49 53 4f 4e 45 52 53 2e 00
4570  9EDA 49 4E 49 4E
4570  9EDE 47 20 50 52
4570  9EE2 49 53 4F 4E
4570  9EE6 45 52 53 2E
4570  9EEA 00
4571  9EEB
4572  9EEB              ;***********************************************************************************************
4573  9EEB              ; Manual/Instruction Page 4 text
4574  9EEB              TXT_MANUAL_PAGE4:
4575  9EEB 54 48 45 20  	defb "THE TOP LINE OF THE SCREEN",13		;9eeb	54 48 45 20 54 4f 50 20 4c 49 4e 45 20 4f 46 20 54 48 45 20 53 43 52 45 45 4e 0d
4575  9EEF 54 4F 50 20
4575  9EF3 4C 49 4E 45
4575  9EF7 20 4F 46 20
4575  9EFB 54 48 45 20
4575  9EFF 53 43 52 45
4575  9F03 45 4E 0D
4576  9F06 57 49 4C 4C  	defb "WILL DISPLAY THE FOLLOWING ",13		;9f06	57 49 4c 4c 20 44 49 53 50 4c 41 59 20 54 48 45 20 46 4f 4c 4c 4f 57 49 4e 47 20 0d
4576  9F0A 20 44 49 53
4576  9F0E 50 4C 41 59
4576  9F12 20 54 48 45
4576  9F16 20 46 4F 4C
4576  9F1A 4C 4F 57 49
4576  9F1E 4E 47 20 0D
4577  9F22 49 4E 46 4F  	defb "INFORMATION. PRISONERS LEFT",13		;9f22	49 4e 46 4f 52 4d 41 54 49 4f 4e 2e 20 50 52 49 53 4f 4e 45 52 53 20 4c 45 46 54 0d
4577  9F26 52 4D 41 54
4577  9F2A 49 4F 4E 2E
4577  9F2E 20 50 52 49
4577  9F32 53 4F 4E 45
4577  9F36 52 53 20 4C
4577  9F3A 45 46 54 0D
4578  9F3E 49 4E 20 43  	defb "IN CAMP ONE, TWO, THREE AND ",13		;9f3e	49 4e 20 43 41 4d 50 20 4f 4e 45 2c 20 54 57 4f 2c 20 54 48 52 45 45 20 41 4e 44 20 0d
4578  9F42 41 4D 50 20
4578  9F46 4F 4E 45 2C
4578  9F4A 20 54 57 4F
4578  9F4E 2C 20 54 48
4578  9F52 52 45 45 20
4578  9F56 41 4E 44 20
4578  9F5A 0D
4579  9F5B 46 4F 55 52  	defb "FOUR (FOUR BEING THE CLOSEST)",13		;9f5b	46 4f 55 52 20 28 46 4f 55 52 20 42 45 49 4e 47 20 54 48 45 20 43 4c 4f 53 45 53 54 29 0d
4579  9F5F 20 28 46 4F
4579  9F63 55 52 20 42
4579  9F67 45 49 4E 47
4579  9F6B 20 54 48 45
4579  9F6F 20 43 4C 4F
4579  9F73 53 45 53 54
4579  9F77 29 0D
4580  9F79 46 55 45 4C  	defb "FUEL LEFT, TOTAL SCORE,",13			;9f79	46 55 45 4c 20 4c 45 46 54 2c 20 54 4f 54 41 4c 20 53 43 4f 52 45 2c 0d
4580  9F7D 20 4C 45 46
4580  9F81 54 2C 20 54
4580  9F85 4F 54 41 4C
4580  9F89 20 53 43 4F
4580  9F8D 52 45 2C 0D
4581  9F91 4E 55 4D 42  	defb "NUMBER OF HELICOPTERS LEFT",13		;9f91	4e 55 4d 42 45 52 20 4f 46 20 48 45 4c 49 43 4f 50 54 45 52 53 20 4c 45 46 54 0d
4581  9F95 45 52 20 4F
4581  9F99 46 20 48 45
4581  9F9D 4C 49 43 4F
4581  9FA1 50 54 45 52
4581  9FA5 53 20 4C 45
4581  9FA9 46 54 0D
4582  9FAC 41 4E 44 20  	defb "AND PRESENT TIME. AT THE",13			;9fac	41 4e 44 20 50 52 45 53 45 4e 54 20 54 49 4d 45 2e 20 41 54 20 54 48 45 0d
4582  9FB0 50 52 45 53
4582  9FB4 45 4E 54 20
4582  9FB8 54 49 4D 45
4582  9FBC 2E 20 41 54
4582  9FC0 20 54 48 45
4582  9FC4 0D
4583  9FC5 42 45 47 49  	defb "BEGINNING OF A GAME IT WILL",13		;9fc5	42 45 47 49 4e 4e 49 4e 47 20 4f 46 20 41 20 47 41 4d 45 20 49 54 20 57 49 4c 4c 0d
4583  9FC9 4E 4E 49 4E
4583  9FCD 47 20 4F 46
4583  9FD1 20 41 20 47
4583  9FD5 41 4D 45 20
4583  9FD9 49 54 20 57
4583  9FDD 49 4C 4C 0D
4584  9FE1 53 48 4F 57  	defb "SHOW THE FOLLOWING NUMBERS.",13		;9fe1	53 48 4f 57 20 54 48 45 20 46 4f 4c 4c 4f 57 49 4e 47 20 4e 55 4d 42 45 52 53 2e 0d
4584  9FE5 20 54 48 45
4584  9FE9 20 46 4F 4C
4584  9FED 4C 4F 57 49
4584  9FF1 4E 47 20 4E
4584  9FF5 55 4D 42 45
4584  9FF9 52 53 2E 0D
4585  9FFD 32 30 20 32  	defb "20 20 20 20  999  00000  4  4.00",0	;9ffd	32 30 20 32 30 20 32 30 20 32 30 20 20 39 39 39 20 20 30 30 30 30 30 20 20 34 20 20 34 2e 30 30 00
4585  A001 30 20 32 30
4585  A005 20 32 30 20
4585  A009 20 39 39 39
4585  A00D 20 20 30 30
4585  A011 30 30 30 20
4585  A015 20 34 20 20
4585  A019 34 2E 30 30
4585  A01D 00
4586  A01E
4587  A01E              ;***********************************************************************************************
4588  A01E              ; Manual/Instruction Page 5 text
4589  A01E              TXT_MANUAL_PAGE5:
4590  A01E 49 46 20 59  	defb "IF YOU GET ONE OF THE TOP TEN",13		;a01e	49 46 20 59 4f 55 20 47 45 54 20 4f 4e 45 20 4f 46 20 54 48 45 20 54 4f 50 20 54 45 4e 0d
4590  A022 4F 55 20 47
4590  A026 45 54 20 4F
4590  A02A 4E 45 20 4F
4590  A02E 46 20 54 48
4590  A032 45 20 54 4F
4590  A036 50 20 54 45
4590  A03A 4E 0D
4591  A03C 48 49 47 48  	defb "HIGH SCORES YOU CAN PUT YOUR",13		;a03c	48 49 47 48 20 53 43 4f 52 45 53 20 59 4f 55 20 43 41 4e 20 50 55 54 20 59 4f 55 52 0d
4591  A040 20 53 43 4F
4591  A044 52 45 53 20
4591  A048 59 4F 55 20
4591  A04C 43 41 4E 20
4591  A050 50 55 54 20
4591  A054 59 4F 55 52
4591  A058 0D
4592  A059 4E 41 4D 45  	defb "NAME ON THE SCORE BOARD. TO DO",13	;a059	4e 41 4d 45 20 4f 4e 20 54 48 45 20 53 43 4f 52 45 20 42 4f 41 52 44 2e 20 54 4f 20 44 4f 0d
4592  A05D 20 4F 4E 20
4592  A061 54 48 45 20
4592  A065 53 43 4F 52
4592  A069 45 20 42 4F
4592  A06D 41 52 44 2E
4592  A071 20 54 4F 20
4592  A075 44 4F 0D
4593  A078 54 48 49 53  	defb "THIS USE THE ARROW KEYS TO ",13		;a078	54 48 49 53 20 55 53 45 20 54 48 45 20 41 52 52 4f 57 20 4b 45 59 53 20 54 4f 20 0d
4593  A07C 20 55 53 45
4593  A080 20 54 48 45
4593  A084 20 41 52 52
4593  A088 4F 57 20 4B
4593  A08C 45 59 53 20
4593  A090 54 4F 20 0D
4594  A094 50 4F 53 49  	defb "POSITION THE BOX OVER THE CHAR.",13	;a094	50 4f 53 49 54 49 4f 4e 20 54 48 45 20 42 4f 58 20 4f 56 45 52 20 54 48 45 20 43 48 41 52 2e 0d
4594  A098 54 49 4F 4E
4594  A09C 20 54 48 45
4594  A0A0 20 42 4F 58
4594  A0A4 20 4F 56 45
4594  A0A8 52 20 54 48
4594  A0AC 45 20 43 48
4594  A0B0 41 52 2E 0D
4595  A0B4 4F 52 20 43  	defb "OR COMMAND REQUIRED AND PRESS",13		;a0b4	4f 52 20 43 4f 4d 4d 41 4e 44 20 52 45 51 55 49 52 45 44 20 41 4e 44 20 50 52 45 53 53 0d
4595  A0B8 4F 4D 4D 41
4595  A0BC 4E 44 20 52
4595  A0C0 45 51 55 49
4595  A0C4 52 45 44 20
4595  A0C8 41 4E 44 20
4595  A0CC 50 52 45 53
4595  A0D0 53 0D
4596  A0D2 3C 52 45 54  	defb "<RETURN>.",0							;a0d2	3c 52 45 54 55 52 4e 3e 2e 00
4596  A0D6 55 52 4E 3E
4596  A0DA 2E 00
4597  A0DC
4598  A0DC              ;***********************************************************************************************
4599  A0DC              ; Prompt for C to Continue text
4600  A0DC              TXT_PRESS_C_CONT:
4601  A0DC 20 20 20 50  	defb "   PRESS  <C>  TO  CONTINUE",0		;a0dc	20 20 20 50 52 45 53 53 20 20 3c 43 3e 20 20 54 4f 20 20 43 4f 4e 54 49 4e 55 45 00
4601  A0E0 52 45 53 53
4601  A0E4 20 20 3C 43
4601  A0E8 3E 20 20 54
4601  A0EC 4F 20 20 43
4601  A0F0 4F 4E 54 49
4601  A0F4 4E 55 45 00
4602  A0F8
4603  A0F8              	;endmodule
4604  A0F8
4605  A0F8 00           	nop			;a0f8	00 	.
4606  A0F9 00           	nop			;a0f9	00 	.
4607  A0FA 00           	nop			;a0fa	00 	.
4608  A0FB              la0fbh:
4609  A0FB 00           	nop			;a0fb	00 	.
4610  A0FC 00           	nop			;a0fc	00 	.
4611  A0FD 00           	nop			;a0fd	00 	.
4612  A0FE              la0feh:
4613  A0FE 00           	nop			;a0fe	00 	.
4614  A0FF              la0ffh:
4615  A0FF 00           	nop			;a0ff	00 	.
4616  A100              la100h:
4617  A100 AA           	xor d			;a100	aa 	.
4618  A101 AA           	xor d			;a101	aa 	.
4619  A102 AA           	xor d			;a102	aa 	.
4620  A103 A8           	xor b			;a103	a8 	.
4621  A104 00           	nop			;a104	00 	.
4622  A105 00           	nop			;a105	00 	.
4623  A106              la106h:
4624  A106 00           	nop			;a106	00 	.
4625  A107 02           	ld (bc),a			;a107	02 	.
4626  A108 00           	nop			;a108	00 	.
4627  A109 00           	nop			;a109	00 	.
4628  A10A              la10ah:
4629  A10A 02           	ld (bc),a			;a10a	02 	.
4630  A10B 00           	nop			;a10b	00 	.
4631  A10C 00           	nop			;a10c	00 	.
4632  A10D 15           	dec d			;a10d	15 	.
4633  A10E 50           	ld d,b			;a10e	50 	P
4634  A10F              la10fh:
4635  A10F 00           	nop			;a10f	00 	.
4636  A110 02           	ld (bc),a			;a110	02 	.
4637  A111 00           	nop			;a111	00 	.
4638  A112              la112h:
4639  A112 0F           	rrca			;a112	0f 	.
4640  A113 D5           	push de			;a113	d5 	.
4641  A114 55           	ld d,l			;a114	55 	U
4642  A115 55           	ld d,l			;a115	55 	U
4643  A116 6A           	ld l,d			;a116	6a 	j
4644  A117 A0           	and b			;a117	a0 	.
4645  A118 3F           	ccf			;a118	3f 	?
4646  A119 D5           	push de			;a119	d5 	.
4647  A11A 55           	ld d,l			;a11a	55 	U
4648  A11B 55           	ld d,l			;a11b	55 	U
4649  A11C 52           	ld d,d			;a11c	52 	R
4650  A11D              la11dh:
4651  A11D 00           	nop			;a11d	00 	.
4652  A11E 15           	dec d			;a11e	15 	.
4653  A11F 55           	ld d,l			;a11f	55 	U
4654  A120 55           	ld d,l			;a120	55 	U
4655  A121 54           	ld d,h			;a121	54 	T
4656  A122 02           	ld (bc),a			;a122	02 	.
4657  A123 00           	nop			;a123	00 	.
4658  A124 01 55 55     	ld bc,05555h		;a124	01 55 55 	. U U
4659  A127 00           	nop			;a127	00 	.
4660  A128 00           	nop			;a128	00 	.
4661  A129 00           	nop			;a129	00 	.
4662  A12A 20 80        	defb $20,$80		;a12a	20 80 	  .
4663  A12C 80           	add a,b			;a12c	80 	.
4664  A12D 00           	nop			;a12d	00 	.
4665  A12E 00           	nop			;a12e	00 	.
4666  A12F 00           	nop			;a12f	00 	.
4667  A130              la130h:
4668  A130 0A           	ld a,(bc)			;a130	0a 	.
4669  A131 AA           	xor d			;a131	aa 	.
4670  A132 AA           	xor d			;a132	aa 	.
4671  A133 00           	nop			;a133	00 	.
4672  A134 00           	nop			;a134	00 	.
4673  A135 00           	nop			;a135	00 	.
4674  A136 00           	nop			;a136	00 	.
4675  A137 2A A0 00     	ld hl,(000a0h)		;a137	2a a0 00 	* . .
4676  A13A 00           	nop			;a13a	00 	.
4677  A13B 00           	nop			;a13b	00 	.
4678  A13C 00           	nop			;a13c	00 	.
4679  A13D 02           	ld (bc),a			;a13d	02 	.
4680  A13E 00           	nop			;a13e	00 	.
4681  A13F 00           	nop			;a13f	00 	.
4682  A140              la140h:
4683  A140 20 20        	jr nz,la162h		;a140	20 20
4684  A142 00           	nop			;a142	00 	.
4685  A143 15           	dec d			;a143	15 	.
4686  A144 50           	ld d,b			;a144	50 	P
4687  A145 00           	nop			;a145	00 	.
4688  A146 08           	ex af,af'			;a146	08 	.
4689  A147 80           	add a,b			;a147	80 	.
4690  A148 0F           	rrca			;a148	0f 	.
4691  A149 D5           	push de			;a149	d5 	.
4692  A14A 55           	ld d,l			;a14a	55 	U
4693  A14B 55           	ld d,l			;a14b	55 	U
4694  A14C 56           	ld d,(hl)			;a14c	56 	V
4695  A14D 00           	nop			;a14d	00 	.
4696  A14E 3F           	ccf			;a14e	3f 	?
4697  A14F D5           	push de			;a14f	d5 	.
4698  A150 55           	ld d,l			;a150	55 	U
4699  A151 55           	ld d,l			;a151	55 	U
4700  A152 58           	ld e,b			;a152	58 	X
4701  A153 80           	add a,b			;a153	80 	.
4702  A154 15           	dec d			;a154	15 	.
4703  A155 55           	ld d,l			;a155	55 	U
4704  A156 55           	ld d,l			;a156	55 	U
4705  A157 54           	ld d,h			;a157	54 	T
4706  A158 20 20        	defb $20,$20		;a158	20 20
4707  A15A 01 55 55     	ld bc,05555h		;a15a	01 55 55 	. U U
4708  A15D 00           	nop			;a15d	00 	.
4709  A15E 00           	nop			;a15e	00 	.
4710  A15F 00           	nop			;a15f	00 	.
4711  A160 20 80        	defb $20,$80		;a160	20 80 	  .
4712  A162              la162h:
4713  A162 80           	add a,b			;a162	80 	.
4714  A163 00           	nop			;a163	00 	.
4715  A164 00           	nop			;a164	00 	.
4716  A165 00           	nop			;a165	00 	.
4717  A166 0A           	ld a,(bc)			;a166	0a 	.
4718  A167 AA           	xor d			;a167	aa 	.
4719  A168 AA           	xor d			;a168	aa 	.
4720  A169 00           	nop			;a169	00 	.
4721  A16A 00           	nop			;a16a	00 	.
4722  A16B 00           	nop			;a16b	00 	.
4723  A16C 00           	nop			;a16c	00 	.
4724  A16D 02           	ld (bc),a			;a16d	02 	.
4725  A16E AA           	xor d			;a16e	aa 	.
4726  A16F AA           	xor d			;a16f	aa 	.
4727  A170 AA           	xor d			;a170	aa 	.
4728  A171 A0           	and b			;a171	a0 	.
4729  A172 08           	ex af,af'			;a172	08 	.
4730  A173 00           	nop			;a173	00 	.
4731  A174 00           	nop			;a174	00 	.
4732  A175 08           	ex af,af'			;a175	08 	.
4733  A176 00           	nop			;a176	00 	.
4734  A177 00           	nop			;a177	00 	.
4735  A178 08           	ex af,af'			;a178	08 	.
4736  A179 00           	nop			;a179	00 	.
4737  A17A              la17ah:
4738  A17A 00           	nop			;a17a	00 	.
4739  A17B 55           	ld d,l			;a17b	55 	U
4740  A17C 40           	ld b,b			;a17c	40 	@
4741  A17D 00           	nop			;a17d	00 	.
4742  A17E AA           	xor d			;a17e	aa 	.
4743  A17F 95           	sub l			;a17f	95 	.
4744  A180 55           	ld d,l			;a180	55 	U
4745  A181 55           	ld d,l			;a181	55 	U
4746  A182 7F           	ld a,a			;a182	7f 	
4747  A183 00           	nop			;a183	00 	.
4748  A184 08           	ex af,af'			;a184	08 	.
4749  A185 55           	ld d,l			;a185	55 	U
4750  A186 55           	ld d,l			;a186	55 	U
4751  A187 55           	ld d,l			;a187	55 	U
4752  A188 7F           	ld a,a			;a188	7f 	
4753  A189 C0           	ret nz			;a189	c0 	.
4754  A18A 08           	ex af,af'			;a18a	08 	.
4755  A18B 01 55 55     	ld bc,05555h		;a18b	01 55 55 	. U U
4756  A18E 55           	ld d,l			;a18e	55 	U
4757  A18F 40           	ld b,b			;a18f	40 	@
4758  A190 00           	nop			;a190	00 	.
4759  A191 00           	nop			;a191	00 	.
4760  A192 05           	dec b			;a192	05 	.
4761  A193 55           	ld d,l			;a193	55 	U
4762  A194 54           	ld d,h			;a194	54 	T
4763  A195 00           	nop			;a195	00 	.
4764  A196 00           	nop			;a196	00 	.
4765  A197 00           	nop			;a197	00 	.
4766  A198 00           	nop			;a198	00 	.
4767  A199 20 20        	jr nz,$+34		;a199	20 20
4768  A19B 80           	add a,b			;a19b	80 	.
4769  A19C 00           	nop			;a19c	00 	.
4770  A19D 00           	nop			;a19d	00 	.
4771  A19E 0A           	ld a,(bc)			;a19e	0a 	.
4772  A19F AA           	xor d			;a19f	aa 	.
4773  A1A0 AA           	xor d			;a1a0	aa 	.
4774  A1A1 00           	nop			;a1a1	00 	.
4775  A1A2 00           	nop			;a1a2	00 	.
4776  A1A3 00           	nop			;a1a3	00 	.
4777  A1A4 00           	nop			;a1a4	00 	.
4778  A1A5 AA           	xor d			;a1a5	aa 	.
4779  A1A6 80           	add a,b			;a1a6	80 	.
4780  A1A7 00           	nop			;a1a7	00 	.
4781  A1A8 80           	add a,b			;a1a8	80 	.
4782  A1A9 80           	add a,b			;a1a9	80 	.
4783  A1AA 00           	nop			;a1aa	00 	.
4784  A1AB 08           	ex af,af'			;a1ab	08 	.
4785  A1AC 00           	nop			;a1ac	00 	.
4786  A1AD 00           	nop			;a1ad	00 	.
4787  A1AE 22 00 00     	ld (00000h),hl		;a1ae	22 00 00 	" . .
4788  A1B1 55           	ld d,l			;a1b1	55 	U
4789  A1B2 40           	ld b,b			;a1b2	40 	@
4790  A1B3 00           	nop			;a1b3	00 	.
4791  A1B4 09           	add hl,bc			;a1b4	09 	.
4792  A1B5 55           	ld d,l			;a1b5	55 	U
4793  A1B6 55           	ld d,l			;a1b6	55 	U
4794  A1B7 55           	ld d,l			;a1b7	55 	U
4795  A1B8 7F           	ld a,a			;a1b8	7f 	
4796  A1B9 00           	nop			;a1b9	00 	.
4797  A1BA 22 55 55     	ld (05555h),hl		;a1ba	22 55 55 	" U U
4798  A1BD 55           	ld d,l			;a1bd	55 	U
4799  A1BE 7F           	ld a,a			;a1be	7f 	
4800  A1BF C0           	ret nz			;a1bf	c0 	.
4801  A1C0 80           	add a,b			;a1c0	80 	.
4802  A1C1 81           	add a,c			;a1c1	81 	.
4803  A1C2 55           	ld d,l			;a1c2	55 	U
4804  A1C3 55           	ld d,l			;a1c3	55 	U
4805  A1C4 55           	ld d,l			;a1c4	55 	U
4806  A1C5 40           	ld b,b			;a1c5	40 	@
4807  A1C6 00           	nop			;a1c6	00 	.
4808  A1C7 00           	nop			;a1c7	00 	.
4809  A1C8 05           	dec b			;a1c8	05 	.
4810  A1C9 55           	ld d,l			;a1c9	55 	U
4811  A1CA 54           	ld d,h			;a1ca	54 	T
4812  A1CB 00           	nop			;a1cb	00 	.
4813  A1CC 00           	nop			;a1cc	00 	.
4814  A1CD 00           	nop			;a1cd	00 	.
4815  A1CE 00           	nop			;a1ce	00 	.
4816  A1CF 20 20        	jr nz,la1f1h		;a1cf	20 20
4817  A1D1 80           	add a,b			;a1d1	80 	.
4818  A1D2 00           	nop			;a1d2	00 	.
4819  A1D3 00           	nop			;a1d3	00 	.
4820  A1D4 0A           	ld a,(bc)			;a1d4	0a 	.
4821  A1D5 AA           	xor d			;a1d5	aa 	.
4822  A1D6 AA           	xor d			;a1d6	aa 	.
4823  A1D7 00           	nop			;a1d7	00 	.
4824  A1D8 02           	ld (bc),a			;a1d8	02 	.
4825  A1D9 AA           	xor d			;a1d9	aa 	.
4826  A1DA AA           	xor d			;a1da	aa 	.
4827  A1DB AA           	xor d			;a1db	aa 	.
4828  A1DC A8           	xor b			;a1dc	a8 	.
4829  A1DD 00           	nop			;a1dd	00 	.
4830  A1DE 00           	nop			;a1de	00 	.
4831  A1DF 00           	nop			;a1df	00 	.
4832  A1E0 0A           	ld a,(bc)			;a1e0	0a 	.
4833  A1E1 00           	nop			;a1e1	00 	.
4834  A1E2 00           	nop			;a1e2	00 	.
4835  A1E3 00           	nop			;a1e3	00 	.
4836  A1E4 00           	nop			;a1e4	00 	.
4837  A1E5 00           	nop			;a1e5	00 	.
4838  A1E6 15           	dec d			;a1e6	15 	.
4839  A1E7 40           	ld b,b			;a1e7	40 	@
4840  A1E8 00           	nop			;a1e8	00 	.
4841  A1E9 00           	nop			;a1e9	00 	.
4842  A1EA 00           	nop			;a1ea	00 	.
4843  A1EB 01 7F D4     	ld bc,0d47fh		;a1eb	01 7f d4 	.  .
4844  A1EE 00           	nop			;a1ee	00 	.
4845  A1EF 00           	nop			;a1ef	00 	.
4846  A1F0 00           	nop			;a1f0	00 	.
4847  A1F1              la1f1h:
4848  A1F1 05           	dec b			;a1f1	05 	.
4849  A1F2 FF           	rst 38h			;a1f2	ff 	.
4850  A1F3 F5           	push af			;a1f3	f5 	.
4851  A1F4 00           	nop			;a1f4	00 	.
4852  A1F5 00           	nop			;a1f5	00 	.
4853  A1F6 00           	nop			;a1f6	00 	.
4854  A1F7 05           	dec b			;a1f7	05 	.
4855  A1F8 FF           	rst 38h			;a1f8	ff 	.
4856  A1F9 F5           	push af			;a1f9	f5 	.
4857  A1FA 00           	nop			;a1fa	00 	.
4858  A1FB 00           	nop			;a1fb	00 	.
4859  A1FC 00           	nop			;a1fc	00 	.
4860  A1FD 01 55 54     	ld bc,05455h		;a1fd	01 55 54 	. U T
4861  A200 00           	nop			;a200	00 	.
4862  A201 00           	nop			;a201	00 	.
4863  A202 00           	nop			;a202	00 	.
4864  A203 02           	ld (bc),a			;a203	02 	.
4865  A204 05           	dec b			;a204	05 	.
4866  A205 08           	ex af,af'			;a205	08 	.
4867  A206 00           	nop			;a206	00 	.
4868  A207 00           	nop			;a207	00 	.
4869  A208 00           	nop			;a208	00 	.
4870  A209 08           	ex af,af'			;a209	08 	.
4871  A20A 00           	nop			;a20a	00 	.
4872  A20B 02           	ld (bc),a			;a20b	02 	.
4873  A20C 00           	nop			;a20c	00 	.
4874  A20D 00           	nop			;a20d	00 	.
4875  A20E 00           	nop			;a20e	00 	.
4876  A20F 02           	ld (bc),a			;a20f	02 	.
4877  A210 AA           	xor d			;a210	aa 	.
4878  A211 A8           	xor b			;a211	a8 	.
4879  A212 00           	nop			;a212	00 	.
4880  A213 00           	nop			;a213	00 	.
4881  A214 00           	nop			;a214	00 	.
4882  A215 00           	nop			;a215	00 	.
4883  A216 0A           	ld a,(bc)			;a216	0a 	.
4884  A217 00           	nop			;a217	00 	.
4885  A218 00           	nop			;a218	00 	.
4886  A219 00           	nop			;a219	00 	.
4887  A21A 00           	nop			;a21a	00 	.
4888  A21B 00           	nop			;a21b	00 	.
4889  A21C 15           	dec d			;a21c	15 	.
4890  A21D 40           	ld b,b			;a21d	40 	@
4891  A21E 00           	nop			;a21e	00 	.
4892  A21F 00           	nop			;a21f	00 	.
4893  A220 00           	nop			;a220	00 	.
4894  A221 01 7F D4     	ld bc,0d47fh		;a221	01 7f d4 	.  .
4895  A224 00           	nop			;a224	00 	.
4896  A225 00           	nop			;a225	00 	.
4897  A226 00           	nop			;a226	00 	.
4898  A227 05           	dec b			;a227	05 	.
4899  A228 FF           	rst 38h			;a228	ff 	.
4900  A229 F5           	push af			;a229	f5 	.
4901  A22A 00           	nop			;a22a	00 	.
4902  A22B 00           	nop			;a22b	00 	.
4903  A22C 00           	nop			;a22c	00 	.
4904  A22D 05           	dec b			;a22d	05 	.
4905  A22E FF           	rst 38h			;a22e	ff 	.
4906  A22F F5           	push af			;a22f	f5 	.
4907  A230 00           	nop			;a230	00 	.
4908  A231 00           	nop			;a231	00 	.
4909  A232 00           	nop			;a232	00 	.
4910  A233 01 55 54     	ld bc,05455h		;a233	01 55 54 	. U T
4911  A236 00           	nop			;a236	00 	.
4912  A237 00           	nop			;a237	00 	.
4913  A238 00           	nop			;a238	00 	.
4914  A239 02           	ld (bc),a			;a239	02 	.
4915  A23A 05           	dec b			;a23a	05 	.
4916  A23B 08           	ex af,af'			;a23b	08 	.
4917  A23C 00           	nop			;a23c	00 	.
4918  A23D 00           	nop			;a23d	00 	.
4919  A23E 00           	nop			;a23e	00 	.
4920  A23F 08           	ex af,af'			;a23f	08 	.
4921  A240 00           	nop			;a240	00 	.
4922  A241 02           	ld (bc),a			;a241	02 	.
4923  A242 00           	nop			;a242	00 	.
4924  A243 00           	nop			;a243	00 	.
4925  A244 0A           	ld a,(bc)			;a244	0a 	.
4926  A245 AA           	xor d			;a245	aa 	.
4927  A246 AA           	xor d			;a246	aa 	.
4928  A247 AA           	xor d			;a247	aa 	.
4929  A248 80           	add a,b			;a248	80 	.
4930  A249 00           	nop			;a249	00 	.
4931  A24A 00           	nop			;a24a	00 	.
4932  A24B 00           	nop			;a24b	00 	.
4933  A24C 20 00        	jr nz,la24eh		;a24c	20 00 	  .
4934  A24E              la24eh:
4935  A24E 00           	nop			;a24e	00 	.
4936  A24F 20 00        	jr nz,la251h		;a24f	20 00 	  .
4937  A251              la251h:
4938  A251 01 55 00     	ld bc,00055h		;a251	01 55 00 	. U .
4939  A254 00           	nop			;a254	00 	.
4940  A255 20 00        	jr nz,la257h		;a255	20 00 	  .
4941  A257              la257h:
4942  A257 FD 55 55     	defb 0fdh,055h,055h	;illegal sequence		;a257	fd 55 55 	. U U
4943  A25A 56           	ld d,(hl)			;a25a	56 	V
4944  A25B AA           	xor d			;a25b	aa 	.
4945  A25C 03           	inc bc			;a25c	03 	.
4946  A25D FD 55 55     	defb 0fdh,055h,055h	;illegal sequence		;a25d	fd 55 55 	. U U
4947  A260 55           	ld d,l			;a260	55 	U
4948  A261 20 01        	jr nz,la264h		;a261	20 01 	  .
4949  A263 55           	ld d,l			;a263	55 	U
4950  A264              la264h:
4951  A264 55           	ld d,l			;a264	55 	U
4952  A265 55           	ld d,l			;a265	55 	U
4953  A266 40           	ld b,b			;a266	40 	@
4954  A267 20 00        	jr nz,la269h		;a267	20 00 	  .
4955  A269              la269h:
4956  A269 15           	dec d			;a269	15 	.
4957  A26A 55           	ld d,l			;a26a	55 	U
4958  A26B 50           	ld d,b			;a26b	50 	P
4959  A26C 00           	nop			;a26c	00 	.
4960  A26D 00           	nop			;a26d	00 	.
4961  A26E 02           	ld (bc),a			;a26e	02 	.
4962  A26F 08           	ex af,af'			;a26f	08 	.
4963  A270 08           	ex af,af'			;a270	08 	.
4964  A271 00           	nop			;a271	00 	.
4965  A272 00           	nop			;a272	00 	.
4966  A273 00           	nop			;a273	00 	.
4967  A274 00           	nop			;a274	00 	.
4968  A275 AA           	xor d			;a275	aa 	.
4969  A276 AA           	xor d			;a276	aa 	.
4970  A277 A0           	and b			;a277	a0 	.
4971  A278 00           	nop			;a278	00 	.
4972  A279 00           	nop			;a279	00 	.
4973  A27A 00           	nop			;a27a	00 	.
4974  A27B 02           	ld (bc),a			;a27b	02 	.
4975  A27C AA           	xor d			;a27c	aa 	.
4976  A27D 00           	nop			;a27d	00 	.
4977  A27E 00           	nop			;a27e	00 	.
4978  A27F 00           	nop			;a27f	00 	.
4979  A280 00           	nop			;a280	00 	.
4980  A281 00           	nop			;a281	00 	.
4981  A282 20 00        	jr nz,la284h		;a282	20 00 	  .
4982  A284              la284h:
4983  A284 02           	ld (bc),a			;a284	02 	.
4984  A285 02           	ld (bc),a			;a285	02 	.
4985  A286 00           	nop			;a286	00 	.
4986  A287 01 55 00     	ld bc,00055h		;a287	01 55 00 	. U .
4987  A28A 00           	nop			;a28a	00 	.
4988  A28B 88           	adc a,b			;a28b	88 	.
4989  A28C 00           	nop			;a28c	00 	.
4990  A28D FD 55 55     	defb 0fdh,055h,055h	;illegal sequence		;a28d	fd 55 55 	. U U
4991  A290 55           	ld d,l			;a290	55 	U
4992  A291 60           	ld h,b			;a291	60 	`
4993  A292 03           	inc bc			;a292	03 	.
4994  A293 FD 55 55     	defb 0fdh,055h,055h	;illegal sequence		;a293	fd 55 55 	. U U
4995  A296 55           	ld d,l			;a296	55 	U
4996  A297 88           	adc a,b			;a297	88 	.
4997  A298 01 55 55     	ld bc,05555h		;a298	01 55 55 	. U U
4998  A29B 55           	ld d,l			;a29b	55 	U
4999  A29C 42           	ld b,d			;a29c	42 	B
5000  A29D 02           	ld (bc),a			;a29d	02 	.
5001  A29E 00           	nop			;a29e	00 	.
5002  A29F 15           	dec d			;a29f	15 	.
5003  A2A0 55           	ld d,l			;a2a0	55 	U
5004  A2A1 50           	ld d,b			;a2a1	50 	P
5005  A2A2 00           	nop			;a2a2	00 	.
5006  A2A3 00           	nop			;a2a3	00 	.
5007  A2A4 02           	ld (bc),a			;a2a4	02 	.
5008  A2A5 08           	ex af,af'			;a2a5	08 	.
5009  A2A6 08           	ex af,af'			;a2a6	08 	.
5010  A2A7 00           	nop			;a2a7	00 	.
5011  A2A8 00           	nop			;a2a8	00 	.
5012  A2A9 00           	nop			;a2a9	00 	.
5013  A2AA 00           	nop			;a2aa	00 	.
5014  A2AB AA           	xor d			;a2ab	aa 	.
5015  A2AC AA           	xor d			;a2ac	aa 	.
5016  A2AD A0           	and b			;a2ad	a0 	.
5017  A2AE 00           	nop			;a2ae	00 	.
5018  A2AF 00           	nop			;a2af	00 	.
5019  A2B0 00           	nop			;a2b0	00 	.
5020  A2B1 00           	nop			;a2b1	00 	.
5021  A2B2 2A AA AA     	ld hl,(0aaaah)		;a2b2	2a aa aa 	* . .
5022  A2B5 AA           	xor d			;a2b5	aa 	.
5023  A2B6 00           	nop			;a2b6	00 	.
5024  A2B7 80           	add a,b			;a2b7	80 	.
5025  A2B8 00           	nop			;a2b8	00 	.
5026  A2B9 00           	nop			;a2b9	00 	.
5027  A2BA 80           	add a,b			;a2ba	80 	.
5028  A2BB 00           	nop			;a2bb	00 	.
5029  A2BC 00           	nop			;a2bc	00 	.
5030  A2BD 80           	add a,b			;a2bd	80 	.
5031  A2BE 00           	nop			;a2be	00 	.
5032  A2BF 05           	dec b			;a2bf	05 	.
5033  A2C0 54           	ld d,h			;a2c0	54 	T
5034  A2C1 00           	nop			;a2c1	00 	.
5035  A2C2 0A           	ld a,(bc)			;a2c2	0a 	.
5036  A2C3 A9           	xor c			;a2c3	a9 	.
5037  A2C4 55           	ld d,l			;a2c4	55 	U
5038  A2C5 55           	ld d,l			;a2c5	55 	U
5039  A2C6 57           	ld d,a			;a2c6	57 	W
5040  A2C7 F0           	ret p			;a2c7	f0 	.
5041  A2C8 00           	nop			;a2c8	00 	.
5042  A2C9 85           	add a,l			;a2c9	85 	.
5043  A2CA 55           	ld d,l			;a2ca	55 	U
5044  A2CB 55           	ld d,l			;a2cb	55 	U
5045  A2CC 57           	ld d,a			;a2cc	57 	W
5046  A2CD FC 00 80     	call m,l7fffh+1		;a2cd	fc 00 80 	. . .
5047  A2D0 15           	dec d			;a2d0	15 	.
5048  A2D1 55           	ld d,l			;a2d1	55 	U
5049  A2D2 55           	ld d,l			;a2d2	55 	U
5050  A2D3 54           	ld d,h			;a2d3	54 	T
5051  A2D4 00           	nop			;a2d4	00 	.
5052  A2D5 00           	nop			;a2d5	00 	.
5053  A2D6 00           	nop			;a2d6	00 	.
5054  A2D7 55           	ld d,l			;a2d7	55 	U
5055  A2D8 55           	ld d,l			;a2d8	55 	U
5056  A2D9 40           	ld b,b			;a2d9	40 	@
5057  A2DA 00           	nop			;a2da	00 	.
5058  A2DB 00           	nop			;a2db	00 	.
5059  A2DC 00           	nop			;a2dc	00 	.
5060  A2DD 02           	ld (bc),a			;a2dd	02 	.
5061  A2DE 02           	ld (bc),a			;a2de	02 	.
5062  A2DF 08           	ex af,af'			;a2df	08 	.
5063  A2E0 00           	nop			;a2e0	00 	.
5064  A2E1 00           	nop			;a2e1	00 	.
5065  A2E2 00           	nop			;a2e2	00 	.
5066  A2E3 AA           	xor d			;a2e3	aa 	.
5067  A2E4 AA           	xor d			;a2e4	aa 	.
5068  A2E5 A0           	and b			;a2e5	a0 	.
5069  A2E6 00           	nop			;a2e6	00 	.
5070  A2E7 00           	nop			;a2e7	00 	.
5071  A2E8 00           	nop			;a2e8	00 	.
5072  A2E9 0A           	ld a,(bc)			;a2e9	0a 	.
5073  A2EA A8           	xor b			;a2ea	a8 	.
5074  A2EB 00           	nop			;a2eb	00 	.
5075  A2EC 08           	ex af,af'			;a2ec	08 	.
5076  A2ED 08           	ex af,af'			;a2ed	08 	.
5077  A2EE 00           	nop			;a2ee	00 	.
5078  A2EF 00           	nop			;a2ef	00 	.
5079  A2F0 80           	add a,b			;a2f0	80 	.
5080  A2F1 00           	nop			;a2f1	00 	.
5081  A2F2 02           	ld (bc),a			;a2f2	02 	.
5082  A2F3 20 00        	jr nz,la2f5h		;a2f3	20 00 	  .
5083  A2F5              la2f5h:
5084  A2F5 05           	dec b			;a2f5	05 	.
5085  A2F6 54           	ld d,h			;a2f6	54 	T
5086  A2F7 00           	nop			;a2f7	00 	.
5087  A2F8 00           	nop			;a2f8	00 	.
5088  A2F9 95           	sub l			;a2f9	95 	.
5089  A2FA 55           	ld d,l			;a2fa	55 	U
5090  A2FB 55           	ld d,l			;a2fb	55 	U
5091  A2FC 57           	ld d,a			;a2fc	57 	W
5092  A2FD F0           	ret p			;a2fd	f0 	.
5093  A2FE 02           	ld (bc),a			;a2fe	02 	.
5094  A2FF 25           	dec h			;a2ff	25 	%
5095  A300 55           	ld d,l			;a300	55 	U
5096  A301 55           	ld d,l			;a301	55 	U
5097  A302 57           	ld d,a			;a302	57 	W
5098  A303 FC 08 08     	call m,00808h		;a303	fc 08 08 	. . .
5099  A306 15           	dec d			;a306	15 	.
5100  A307 55           	ld d,l			;a307	55 	U
5101  A308 55           	ld d,l			;a308	55 	U
5102  A309 54           	ld d,h			;a309	54 	T
5103  A30A 00           	nop			;a30a	00 	.
5104  A30B 00           	nop			;a30b	00 	.
5105  A30C 00           	nop			;a30c	00 	.
5106  A30D 55           	ld d,l			;a30d	55 	U
5107  A30E 55           	ld d,l			;a30e	55 	U
5108  A30F 40           	ld b,b			;a30f	40 	@
5109  A310 00           	nop			;a310	00 	.
5110  A311 00           	nop			;a311	00 	.
5111  A312 00           	nop			;a312	00 	.
5112  A313 02           	ld (bc),a			;a313	02 	.
5113  A314 02           	ld (bc),a			;a314	02 	.
5114  A315 08           	ex af,af'			;a315	08 	.
5115  A316 00           	nop			;a316	00 	.
5116  A317 00           	nop			;a317	00 	.
5117  A318 00           	nop			;a318	00 	.
5118  A319 AA           	xor d			;a319	aa 	.
5119  A31A AA           	xor d			;a31a	aa 	.
5120  A31B A0           	and b			;a31b	a0 	.
5121  A31C 00           	nop			;a31c	00 	.
5122  A31D 2A AA AA     	ld hl,(0aaaah)		;a31d	2a aa aa 	* . .
5123  A320 AA           	xor d			;a320	aa 	.
5124  A321 80           	add a,b			;a321	80 	.
5125  A322 00           	nop			;a322	00 	.
5126  A323 00           	nop			;a323	00 	.
5127  A324 00           	nop			;a324	00 	.
5128  A325 A0           	and b			;a325	a0 	.
5129  A326 00           	nop			;a326	00 	.
5130  A327 00           	nop			;a327	00 	.
5131  A328 00           	nop			;a328	00 	.
5132  A329 00           	nop			;a329	00 	.
5133  A32A 01 54 00     	ld bc,00054h		;a32a	01 54 00 	. T .
5134  A32D 00           	nop			;a32d	00 	.
5135  A32E 00           	nop			;a32e	00 	.
5136  A32F 00           	nop			;a32f	00 	.
5137  A330 17           	rla			;a330	17 	.
5138  A331 FD 40 00     	defb 0fdh,040h,000h	;illegal sequence		;a331	fd 40 00 	. @ .
5139  A334 00           	nop			;a334	00 	.
5140  A335 00           	nop			;a335	00 	.
5141  A336 5F           	ld e,a			;a336	5f 	_
5142  A337 FF           	rst 38h			;a337	ff 	.
5143  A338 50           	ld d,b			;a338	50 	P
5144  A339 00           	nop			;a339	00 	.
5145  A33A 00           	nop			;a33a	00 	.
5146  A33B 00           	nop			;a33b	00 	.
5147  A33C 5F           	ld e,a			;a33c	5f 	_
5148  A33D FF           	rst 38h			;a33d	ff 	.
5149  A33E 50           	ld d,b			;a33e	50 	P
5150  A33F 00           	nop			;a33f	00 	.
5151  A340 00           	nop			;a340	00 	.
5152  A341 00           	nop			;a341	00 	.
5153  A342 15           	dec d			;a342	15 	.
5154  A343 55           	ld d,l			;a343	55 	U
5155  A344 40           	ld b,b			;a344	40 	@
5156  A345 00           	nop			;a345	00 	.
5157  A346 00           	nop			;a346	00 	.
5158  A347 00           	nop			;a347	00 	.
5159  A348 20 50        	jr nz,$+82		;a348	20 50 	  P
5160  A34A 80           	add a,b			;a34a	80 	.
5161  A34B 00           	nop			;a34b	00 	.
5162  A34C 00           	nop			;a34c	00 	.
5163  A34D 00           	nop			;a34d	00 	.
5164  A34E 80           	add a,b			;a34e	80 	.
5165  A34F 00           	nop			;a34f	00 	.
5166  A350 20 00        	jr nz,la352h		;a350	20 00 	  .
5167  A352              la352h:
5168  A352 00           	nop			;a352	00 	.
5169  A353 00           	nop			;a353	00 	.
5170  A354 2A AA 80     	ld hl,(l80aah)		;a354	2a aa 80 	* . .
5171  A357 00           	nop			;a357	00 	.
5172  A358 00           	nop			;a358	00 	.
5173  A359 00           	nop			;a359	00 	.
5174  A35A 00           	nop			;a35a	00 	.
5175  A35B A0           	and b			;a35b	a0 	.
5176  A35C 00           	nop			;a35c	00 	.
5177  A35D 00           	nop			;a35d	00 	.
5178  A35E 00           	nop			;a35e	00 	.
5179  A35F 00           	nop			;a35f	00 	.
5180  A360 01 54 00     	ld bc,00054h		;a360	01 54 00 	. T .
5181  A363 00           	nop			;a363	00 	.
5182  A364 00           	nop			;a364	00 	.
5183  A365 00           	nop			;a365	00 	.
5184  A366 17           	rla			;a366	17 	.
5185  A367 FD 40 00     	defb 0fdh,040h,000h	;illegal sequence		;a367	fd 40 00 	. @ .
5186  A36A 00           	nop			;a36a	00 	.
5187  A36B 00           	nop			;a36b	00 	.
5188  A36C 5F           	ld e,a			;a36c	5f 	_
5189  A36D FF           	rst 38h			;a36d	ff 	.
5190  A36E 50           	ld d,b			;a36e	50 	P
5191  A36F 00           	nop			;a36f	00 	.
5192  A370 00           	nop			;a370	00 	.
5193  A371 00           	nop			;a371	00 	.
5194  A372 5F           	ld e,a			;a372	5f 	_
5195  A373 FF           	rst 38h			;a373	ff 	.
5196  A374 50           	ld d,b			;a374	50 	P
5197  A375 00           	nop			;a375	00 	.
5198  A376 00           	nop			;a376	00 	.
5199  A377 00           	nop			;a377	00 	.
5200  A378 15           	dec d			;a378	15 	.
5201  A379 55           	ld d,l			;a379	55 	U
5202  A37A 40           	ld b,b			;a37a	40 	@
5203  A37B 00           	nop			;a37b	00 	.
5204  A37C 00           	nop			;a37c	00 	.
5205  A37D 00           	nop			;a37d	00 	.
5206  A37E 20 50        	jr nz,la3d0h		;a37e	20 50 	  P
5207  A380 80           	add a,b			;a380	80 	.
5208  A381 00           	nop			;a381	00 	.
5209  A382 00           	nop			;a382	00 	.
5210  A383 00           	nop			;a383	00 	.
5211  A384 80           	add a,b			;a384	80 	.
5212  A385 00           	nop			;a385	00 	.
5213  A386 20 00        	jr nz,la388h		;a386	20 00 	  .
5214  A388              la388h:
5215  A388 0A           	ld a,(bc)			;a388	0a 	.
5216  A389 A0           	and b			;a389	a0 	.
5217  A38A 2A A8 AA     	ld hl,(0aaa8h)		;a38a	2a a8 aa 	* . .
5218  A38D AA           	xor d			;a38d	aa 	.
5219  A38E 10 04        	djnz la394h		;a38e	10 04 	. .
5220  A390 10 04        	djnz la396h		;a390	10 04 	. .
5221  A392 15           	dec d			;a392	15 	.
5222  A393 54           	ld d,h			;a393	54 	T
5223  A394              la394h:
5224  A394 15           	dec d			;a394	15 	.
5225  A395 54           	ld d,h			;a395	54 	T
5226  A396              la396h:
5227  A396 0C           	inc c			;a396	0c 	.
5228  A397 30 0C        	jr nc,la3a5h		;a397	30 0c 	0 .
5229  A399 30 0C        	jr nc,la3a7h		;a399	30 0c 	0 .
5230  A39B 30 30        	jr nc,$+50		;a39b	30 30 	0 0
5231  A39D 0C           	inc c			;a39d	0c 	.
5232  A39E 30 0C        	jr nc,la3ach		;a39e	30 0c 	0 .
5233  A3A0 30 0C        	jr nc,la3aeh		;a3a0	30 0c 	0 .
5234  A3A2 C0           	ret nz			;a3a2	c0 	.
5235  A3A3 03           	inc bc			;a3a3	03 	.
5236  A3A4 C0           	ret nz			;a3a4	c0 	.
5237  A3A5              la3a5h:
5238  A3A5 03           	inc bc			;a3a5	03 	.
5239  A3A6 C0           	ret nz			;a3a6	c0 	.
5240  A3A7              la3a7h:
5241  A3A7 03           	inc bc			;a3a7	03 	.
5242  A3A8              la3a8h:
5243  A3A8 00           	nop			;a3a8	00 	.
5244  A3A9 0A           	ld a,(bc)			;a3a9	0a 	.
5245  A3AA AA           	xor d			;a3aa	aa 	.
5246  A3AB A0           	and b			;a3ab	a0 	.
5247  A3AC              la3ach:
5248  A3AC 00           	nop			;a3ac	00 	.
5249  A3AD 00           	nop			;a3ad	00 	.
5250  A3AE              la3aeh:
5251  A3AE AA           	xor d			;a3ae	aa 	.
5252  A3AF AA           	xor d			;a3af	aa 	.
5253  A3B0 AA           	xor d			;a3b0	aa 	.
5254  A3B1 00           	nop			;a3b1	00 	.
5255  A3B2 0A           	ld a,(bc)			;a3b2	0a 	.
5256  A3B3 AA           	xor d			;a3b3	aa 	.
5257  A3B4 AA           	xor d			;a3b4	aa 	.
5258  A3B5 AA           	xor d			;a3b5	aa 	.
5259  A3B6 A0           	and b			;a3b6	a0 	.
5260  A3B7 AA           	xor d			;a3b7	aa 	.
5261  A3B8 AA           	xor d			;a3b8	aa 	.
5262  A3B9 AA           	xor d			;a3b9	aa 	.
5263  A3BA AA           	xor d			;a3ba	aa 	.
5264  A3BB AA           	xor d			;a3bb	aa 	.
5265  A3BC 30 00        	jr nc,la3beh		;a3bc	30 00 	0 .
5266  A3BE              la3beh:
5267  A3BE 00           	nop			;a3be	00 	.
5268  A3BF 00           	nop			;a3bf	00 	.
5269  A3C0 0C           	inc c			;a3c0	0c 	.
5270  A3C1 31 54 05     	ld sp,00554h		;a3c1	31 54 05 	1 T .
5271  A3C4 55           	ld d,l			;a3c4	55 	U
5272  A3C5 4C           	ld c,h			;a3c5	4c 	L
5273  A3C6 31 54 04     	ld sp,00454h		;a3c6	31 54 04 	1 T .
5274  A3C9 10 4C        	djnz la417h		;a3c9	10 4c 	. L
5275  A3CB 31 54 05     	ld sp,00554h		;a3cb	31 54 05 	1 T .
5276  A3CE 55           	ld d,l			;a3ce	55 	U
5277  A3CF 4C           	ld c,h			;a3cf	4c 	L
5278  A3D0              la3d0h:
5279  A3D0 31 54 04     	ld sp,00454h		;a3d0	31 54 04 	1 T .
5280  A3D3 10 4C        	djnz la421h		;a3d3	10 4c 	. L
5281  A3D5 31 54 05     	ld sp,00554h		;a3d5	31 54 05 	1 T .
5282  A3D8 55           	ld d,l			;a3d8	55 	U
5283  A3D9 4C           	ld c,h			;a3d9	4c 	L
5284  A3DA 31 54 00     	ld sp,00054h		;a3da	31 54 00 	1 T .
5285  A3DD 00           	nop			;a3dd	00 	.
5286  A3DE 0C           	inc c			;a3de	0c 	.
5287  A3DF              la3dfh:
5288  A3DF 08           	ex af,af'			;a3df	08 	.
5289  A3E0 00           	nop			;a3e0	00 	.
5290  A3E1 15           	dec d			;a3e1	15 	.
5291  A3E2 00           	nop			;a3e2	00 	.
5292  A3E3 44           	ld b,h			;a3e3	44 	D
5293  A3E4 40           	ld b,b			;a3e4	40 	@
5294  A3E5 4C           	ld c,h			;a3e5	4c 	L
5295  A3E6 40           	ld b,b			;a3e6	40 	@
5296  A3E7 33           	inc sp			;a3e7	33 	3
5297  A3E8 30 30        	jr nc,la41ah		;a3e8	30 30 	0 0
5298  A3EA C0           	ret nz			;a3ea	c0 	.
5299  A3EB 30 00        	jr nc,la3edh		;a3eb	30 00 	0 .
5300  A3ED              la3edh:
5301  A3ED 00           	nop			;a3ed	00 	.
5302  A3EE 80           	add a,b			;a3ee	80 	.
5303  A3EF 11 50 04     	ld de,00450h		;a3ef	11 50 04 	. P .
5304  A3F2 44           	ld b,h			;a3f2	44 	D
5305  A3F3 00           	nop			;a3f3	00 	.
5306  A3F4 C1           	pop bc			;a3f4	c1 	.
5307  A3F5 03           	inc bc			;a3f5	03 	.
5308  A3F6 30 0C        	jr nc,la404h		;a3f6	30 0c 	0 .
5309  A3F8 0C           	inc c			;a3f8	0c 	.
5310  A3F9 30 03        	jr nc,la3feh		;a3f9	30 03 	0 .
5311  A3FB 02           	ld (bc),a			;a3fb	02 	.
5312  A3FC 00           	nop			;a3fc	00 	.
5313  A3FD 05           	dec b			;a3fd	05 	.
5314  A3FE              la3feh:
5315  A3FE 44           	ld b,h			;a3fe	44 	D
5316  A3FF 11 10 43     	ld de,04310h		;a3ff	11 10 43 	. . C
5317  A402 00           	nop			;a402	00 	.
5318  A403 0C           	inc c			;a403	0c 	.
5319  A404              la404h:
5320  A404 C0           	ret nz			;a404	c0 	.
5321  A405 30 30        	jr nc,la437h		;a405	30 30 	0 0
5322  A407 C0           	ret nz			;a407	c0 	.
5323  A408 0C           	inc c			;a408	0c 	.
5324  A409 00           	nop			;a409	00 	.
5325  A40A 20 00        	jr nz,la40ch		;a40a	20 00 	  .
5326  A40C              la40ch:
5327  A40C 54           	ld d,h			;a40c	54 	T
5328  A40D 01 11 01     	ld bc,00111h		;a40d	01 11 01 	. . .
5329  A410 31 0C CC     	ld sp,0cc0ch		;a410	31 0c cc 	1 . .
5330  A413 03           	inc bc			;a413	03 	.
5331  A414 0C           	inc c			;a414	0c 	.
5332  A415 00           	nop			;a415	00 	.
5333  A416 0C           	inc c			;a416	0c 	.
5334  A417              la417h:
5335  A417 00           	nop			;a417	00 	.
5336  A418 00           	nop			;a418	00 	.
5337  A419 00           	nop			;a419	00 	.
5338  A41A              la41ah:
5339  A41A 00           	nop			;a41a	00 	.
5340  A41B 00           	nop			;a41b	00 	.
5341  A41C 00           	nop			;a41c	00 	.
5342  A41D 55           	ld d,l			;a41d	55 	U
5343  A41E 55           	ld d,l			;a41e	55 	U
5344  A41F 00           	nop			;a41f	00 	.
5345  A420 00           	nop			;a420	00 	.
5346  A421              la421h:
5347  A421 00           	nop			;a421	00 	.
5348  A422 00           	nop			;a422	00 	.
5349  A423 00           	nop			;a423	00 	.
5350  A424 05           	dec b			;a424	05 	.
5351  A425 55           	ld d,l			;a425	55 	U
5352  A426 55           	ld d,l			;a426	55 	U
5353  A427 00           	nop			;a427	00 	.
5354  A428 FF           	rst 38h			;a428	ff 	.
5355  A429 FF           	rst 38h			;a429	ff 	.
5356  A42A FF           	rst 38h			;a42a	ff 	.
5357  A42B FF           	rst 38h			;a42b	ff 	.
5358  A42C 55           	ld d,l			;a42c	55 	U
5359  A42D 55           	ld d,l			;a42d	55 	U
5360  A42E 55           	ld d,l			;a42e	55 	U
5361  A42F 0F           	rrca			;a42f	0f 	.
5362  A430 FF           	rst 38h			;a430	ff 	.
5363  A431 FF           	rst 38h			;a431	ff 	.
5364  A432 FF           	rst 38h			;a432	ff 	.
5365  A433 F5           	push af			;a433	f5 	.
5366  A434 55           	ld d,l			;a434	55 	U
5367  A435 55           	ld d,l			;a435	55 	U
5368  A436 55           	ld d,l			;a436	55 	U
5369  A437              la437h:
5370  A437 FF           	rst 38h			;a437	ff 	.
5371  A438 FF           	rst 38h			;a438	ff 	.
5372  A439 FF           	rst 38h			;a439	ff 	.
5373  A43A FF           	rst 38h			;a43a	ff 	.
5374  A43B 55           	ld d,l			;a43b	55 	U
5375  A43C 55           	ld d,l			;a43c	55 	U
5376  A43D 55           	ld d,l			;a43d	55 	U
5377  A43E 55           	ld d,l			;a43e	55 	U
5378  A43F 20 00        	jr nz,la441h		;a43f	20 00 	  .
5379  A441              la441h:
5380  A441 00           	nop			;a441	00 	.
5381  A442 00           	nop			;a442	00 	.
5382  A443 2A 82 A8     	ld hl,(la882h)		;a443	2a 82 a8 	* . .
5383  A446 00           	nop			;a446	00 	.
5384  A447 20 00        	jr nz,la449h		;a447	20 00 	  .
5385  A449              la449h:
5386  A449 00           	nop			;a449	00 	.
5387  A44A 00           	nop			;a44a	00 	.
5388  A44B 0A           	ld a,(bc)			;a44b	0a 	.
5389  A44C 00           	nop			;a44c	00 	.
5390  A44D A0           	and b			;a44d	a0 	.
5391  A44E 00           	nop			;a44e	00 	.
5392  A44F 21 54 55     	ld hl,05554h		;a44f	21 54 55 	! T U
5393  A452 15           	dec d			;a452	15 	.
5394  A453 4A           	ld c,d			;a453	4a 	J
5395  A454 00           	nop			;a454	00 	.
5396  A455 A0           	and b			;a455	a0 	.
5397  A456 55           	ld d,l			;a456	55 	U
5398  A457 21 04 41     	ld hl,04104h		;a457	21 04 41 	! . A
5399  A45A 10 4A        	djnz la4a6h		;a45a	10 4a 	. J
5400  A45C 00           	nop			;a45c	00 	.
5401  A45D A0           	and b			;a45d	a0 	.
5402  A45E 41           	ld b,c			;a45e	41 	A
5403  A45F 21 04 41     	ld hl,04104h		;a45f	21 04 41 	! . A
5404  A462 10 4A        	djnz la4aeh		;a462	10 4a 	. J
5405  A464 00           	nop			;a464	00 	.
5406  A465 A0           	and b			;a465	a0 	.
5407  A466 41           	ld b,c			;a466	41 	A
5408  A467 21 54 55     	ld hl,05554h		;a467	21 54 55 	! T U
5409  A46A 15           	dec d			;a46a	15 	.
5410  A46B 4A           	ld c,d			;a46b	4a 	J
5411  A46C 00           	nop			;a46c	00 	.
5412  A46D A0           	and b			;a46d	a0 	.
5413  A46E 41           	ld b,c			;a46e	41 	A
5414  A46F 20 00        	jr nz,la471h		;a46f	20 00 	  .
5415  A471              la471h:
5416  A471 00           	nop			;a471	00 	.
5417  A472 00           	nop			;a472	00 	.
5418  A473 0A           	ld a,(bc)			;a473	0a 	.
5419  A474 00           	nop			;a474	00 	.
5420  A475 A0           	and b			;a475	a0 	.
5421  A476 41           	ld b,c			;a476	41 	A
5422  A477 20 00        	jr nz,la479h		;a477	20 00 	  .
5423  A479              la479h:
5424  A479 00           	nop			;a479	00 	.
5425  A47A 00           	nop			;a47a	00 	.
5426  A47B 0A           	ld a,(bc)			;a47b	0a 	.
5427  A47C 00           	nop			;a47c	00 	.
5428  A47D A0           	and b			;a47d	a0 	.
5429  A47E 41           	ld b,c			;a47e	41 	A
5430  A47F 20 00        	jr nz,la481h		;a47f	20 00 	  .
5431  A481              la481h:
5432  A481 00           	nop			;a481	00 	.
5433  A482 00           	nop			;a482	00 	.
5434  A483 2A 82 A8     	ld hl,(la882h)		;a483	2a 82 a8 	* . .
5435  A486 55           	ld d,l			;a486	55 	U
5436  A487              la487h:
5437  A487 55           	ld d,l			;a487	55 	U
5438  A488 55           	ld d,l			;a488	55 	U
5439  A489 00           	nop			;a489	00 	.
5440  A48A 00           	nop			;a48a	00 	.
5441  A48B 00           	nop			;a48b	00 	.
5442  A48C 00           	nop			;a48c	00 	.
5443  A48D 00           	nop			;a48d	00 	.
5444  A48E 00           	nop			;a48e	00 	.
5445  A48F 55           	ld d,l			;a48f	55 	U
5446  A490 55           	ld d,l			;a490	55 	U
5447  A491 50           	ld d,b			;a491	50 	P
5448  A492 00           	nop			;a492	00 	.
5449  A493 00           	nop			;a493	00 	.
5450  A494 00           	nop			;a494	00 	.
5451  A495 00           	nop			;a495	00 	.
5452  A496 00           	nop			;a496	00 	.
5453  A497 55           	ld d,l			;a497	55 	U
5454  A498 55           	ld d,l			;a498	55 	U
5455  A499 55           	ld d,l			;a499	55 	U
5456  A49A FF           	rst 38h			;a49a	ff 	.
5457  A49B FF           	rst 38h			;a49b	ff 	.
5458  A49C FF           	rst 38h			;a49c	ff 	.
5459  A49D FF           	rst 38h			;a49d	ff 	.
5460  A49E 00           	nop			;a49e	00 	.
5461  A49F 55           	ld d,l			;a49f	55 	U
5462  A4A0 55           	ld d,l			;a4a0	55 	U
5463  A4A1 55           	ld d,l			;a4a1	55 	U
5464  A4A2 5F           	ld e,a			;a4a2	5f 	_
5465  A4A3 FF           	rst 38h			;a4a3	ff 	.
5466  A4A4 FF           	rst 38h			;a4a4	ff 	.
5467  A4A5 FF           	rst 38h			;a4a5	ff 	.
5468  A4A6              la4a6h:
5469  A4A6 F0           	ret p			;a4a6	f0 	.
5470  A4A7 55           	ld d,l			;a4a7	55 	U
5471  A4A8 55           	ld d,l			;a4a8	55 	U
5472  A4A9 55           	ld d,l			;a4a9	55 	U
5473  A4AA 55           	ld d,l			;a4aa	55 	U
5474  A4AB FF           	rst 38h			;a4ab	ff 	.
5475  A4AC FF           	rst 38h			;a4ac	ff 	.
5476  A4AD FF           	rst 38h			;a4ad	ff 	.
5477  A4AE              la4aeh:
5478  A4AE FF           	rst 38h			;a4ae	ff 	.
5479  A4AF 00           	nop			;a4af	00 	.
5480  A4B0 2A 82 A8     	ld hl,(la882h)		;a4b0	2a 82 a8 	* . .
5481  A4B3 00           	nop			;a4b3	00 	.
5482  A4B4 00           	nop			;a4b4	00 	.
5483  A4B5 00           	nop			;a4b5	00 	.
5484  A4B6 08           	ex af,af'			;a4b6	08 	.
5485  A4B7 00           	nop			;a4b7	00 	.
5486  A4B8 0A           	ld a,(bc)			;a4b8	0a 	.
5487  A4B9 00           	nop			;a4b9	00 	.
5488  A4BA A0           	and b			;a4ba	a0 	.
5489  A4BB 00           	nop			;a4bb	00 	.
5490  A4BC 00           	nop			;a4bc	00 	.
5491  A4BD 00           	nop			;a4bd	00 	.
5492  A4BE 08           	ex af,af'			;a4be	08 	.
5493  A4BF 55           	ld d,l			;a4bf	55 	U
5494  A4C0 0A           	ld a,(bc)			;a4c0	0a 	.
5495  A4C1 00           	nop			;a4c1	00 	.
5496  A4C2 A1           	and c			;a4c2	a1 	.
5497  A4C3 54           	ld d,h			;a4c3	54 	T
5498  A4C4 55           	ld d,l			;a4c4	55 	U
5499  A4C5 15           	dec d			;a4c5	15 	.
5500  A4C6 48           	ld c,b			;a4c6	48 	H
5501  A4C7 41           	ld b,c			;a4c7	41 	A
5502  A4C8 0A           	ld a,(bc)			;a4c8	0a 	.
5503  A4C9 00           	nop			;a4c9	00 	.
5504  A4CA A1           	and c			;a4ca	a1 	.
5505  A4CB 04           	inc b			;a4cb	04 	.
5506  A4CC 41           	ld b,c			;a4cc	41 	A
5507  A4CD 10 48        	djnz la517h		;a4cd	10 48 	. H
5508  A4CF 41           	ld b,c			;a4cf	41 	A
5509  A4D0 0A           	ld a,(bc)			;a4d0	0a 	.
5510  A4D1 00           	nop			;a4d1	00 	.
5511  A4D2 A1           	and c			;a4d2	a1 	.
5512  A4D3 04           	inc b			;a4d3	04 	.
5513  A4D4 41           	ld b,c			;a4d4	41 	A
5514  A4D5 10 48        	djnz la51fh		;a4d5	10 48 	. H
5515  A4D7 41           	ld b,c			;a4d7	41 	A
5516  A4D8 0A           	ld a,(bc)			;a4d8	0a 	.
5517  A4D9 00           	nop			;a4d9	00 	.
5518  A4DA A1           	and c			;a4da	a1 	.
5519  A4DB 54           	ld d,h			;a4db	54 	T
5520  A4DC 55           	ld d,l			;a4dc	55 	U
5521  A4DD 15           	dec d			;a4dd	15 	.
5522  A4DE 48           	ld c,b			;a4de	48 	H
5523  A4DF 41           	ld b,c			;a4df	41 	A
5524  A4E0 0A           	ld a,(bc)			;a4e0	0a 	.
5525  A4E1 00           	nop			;a4e1	00 	.
5526  A4E2 A0           	and b			;a4e2	a0 	.
5527  A4E3 00           	nop			;a4e3	00 	.
5528  A4E4 00           	nop			;a4e4	00 	.
5529  A4E5 00           	nop			;a4e5	00 	.
5530  A4E6 08           	ex af,af'			;a4e6	08 	.
5531  A4E7 41           	ld b,c			;a4e7	41 	A
5532  A4E8 0A           	ld a,(bc)			;a4e8	0a 	.
5533  A4E9 00           	nop			;a4e9	00 	.
5534  A4EA A0           	and b			;a4ea	a0 	.
5535  A4EB 00           	nop			;a4eb	00 	.
5536  A4EC 00           	nop			;a4ec	00 	.
5537  A4ED 00           	nop			;a4ed	00 	.
5538  A4EE 08           	ex af,af'			;a4ee	08 	.
5539  A4EF 55           	ld d,l			;a4ef	55 	U
5540  A4F0 2A 82 A8     	ld hl,(la882h)		;a4f0	2a 82 a8 	* . .
5541  A4F3 00           	nop			;a4f3	00 	.
5542  A4F4 00           	nop			;a4f4	00 	.
5543  A4F5 00           	nop			;a4f5	00 	.
5544  A4F6 08           	ex af,af'			;a4f6	08 	.
5545  A4F7              la4f7h:
5546  A4F7 00           	nop			;a4f7	00 	.
5547  A4F8 10 00        	djnz la4fah		;a4f8	10 00 	. .
5548  A4FA              la4fah:
5549  A4FA 00           	nop			;a4fa	00 	.
5550  A4FB 44           	ld b,h			;a4fb	44 	D
5551  A4FC 00           	nop			;a4fc	00 	.
5552  A4FD 00           	nop			;a4fd	00 	.
5553  A4FE 44           	ld b,h			;a4fe	44 	D
5554  A4FF 00           	nop			;a4ff	00 	.
5555  A500 00           	nop			;a500	00 	.
5556  A501 44           	ld b,h			;a501	44 	D
5557  A502 00           	nop			;a502	00 	.
5558  A503 01 45 00     	ld bc,00045h		;a503	01 45 00 	. E .
5559  A506 01 11 00     	ld bc,00011h		;a506	01 11 00 	. . .
5560  A509 01 45 00     	ld bc,00045h		;a509	01 45 00 	. E .
5561  A50C 04           	inc b			;a50c	04 	.
5562  A50D 10 40        	djnz la54fh		;a50d	10 40 	. @
5563  A50F 04           	inc b			;a50f	04 	.
5564  A510 44           	ld b,h			;a510	44 	D
5565  A511 40           	ld b,b			;a511	40 	@
5566  A512 05           	dec b			;a512	05 	.
5567  A513 01 40 10     	ld bc,01040h		;a513	01 40 10 	. @ .
5568  A516 44           	ld b,h			;a516	44 	D
5569  A517              la517h:
5570  A517 10 10        	djnz la529h		;a517	10 10 	. .
5571  A519 10 10        	djnz la52bh		;a519	10 10 	. .
5572  A51B 10 44        	djnz la561h		;a51b	10 44 	. D
5573  A51D 10 41        	djnz la560h		;a51d	10 41 	. A
5574  A51F              la51fh:
5575  A51F 01 04 44     	ld bc,04404h		;a51f	01 04 44 	. . D
5576  A522 00           	nop			;a522	00 	.
5577  A523 44           	ld b,h			;a523	44 	D
5578  A524 50           	ld d,b			;a524	50 	P
5579  A525 00           	nop			;a525	00 	.
5580  A526 14           	inc d			;a526	14 	.
5581  A527              la527h:
5582  A527 00           	nop			;a527	00 	.
5583  A528 00           	nop			;a528	00 	.
5584  A529              la529h:
5585  A529 00           	nop			;a529	00 	.
5586  A52A 00           	nop			;a52a	00 	.
5587  A52B              la52bh:
5588  A52B 00           	nop			;a52b	00 	.
5589  A52C 00           	nop			;a52c	00 	.
5590  A52D 00           	nop			;a52d	00 	.
5591  A52E 00           	nop			;a52e	00 	.
5592  A52F 00           	nop			;a52f	00 	.
5593  A530 00           	nop			;a530	00 	.
5594  A531 00           	nop			;a531	00 	.
5595  A532 00           	nop			;a532	00 	.
5596  A533 00           	nop			;a533	00 	.
5597  A534 00           	nop			;a534	00 	.
5598  A535 00           	nop			;a535	00 	.
5599  A536 00           	nop			;a536	00 	.
5600  A537 00           	nop			;a537	00 	.
5601  A538 00           	nop			;a538	00 	.
5602  A539 00           	nop			;a539	00 	.
5603  A53A 00           	nop			;a53a	00 	.
5604  A53B 00           	nop			;a53b	00 	.
5605  A53C 00           	nop			;a53c	00 	.
5606  A53D 00           	nop			;a53d	00 	.
5607  A53E 00           	nop			;a53e	00 	.
5608  A53F 00           	nop			;a53f	00 	.
5609  A540 00           	nop			;a540	00 	.
5610  A541 00           	nop			;a541	00 	.
5611  A542 00           	nop			;a542	00 	.
5612  A543 00           	nop			;a543	00 	.
5613  A544 00           	nop			;a544	00 	.
5614  A545 00           	nop			;a545	00 	.
5615  A546 00           	nop			;a546	00 	.
5616  A547 00           	nop			;a547	00 	.
5617  A548 00           	nop			;a548	00 	.
5618  A549 00           	nop			;a549	00 	.
5619  A54A 00           	nop			;a54a	00 	.
5620  A54B 00           	nop			;a54b	00 	.
5621  A54C 00           	nop			;a54c	00 	.
5622  A54D 00           	nop			;a54d	00 	.
5623  A54E 00           	nop			;a54e	00 	.
5624  A54F              la54fh:
5625  A54F 00           	nop			;a54f	00 	.
5626  A550 00           	nop			;a550	00 	.
5627  A551 00           	nop			;a551	00 	.
5628  A552 00           	nop			;a552	00 	.
5629  A553 00           	nop			;a553	00 	.
5630  A554 00           	nop			;a554	00 	.
5631  A555 00           	nop			;a555	00 	.
5632  A556 00           	nop			;a556	00 	.
5633  A557 00           	nop			;a557	00 	.
5634  A558 00           	nop			;a558	00 	.
5635  A559 00           	nop			;a559	00 	.
5636  A55A 00           	nop			;a55a	00 	.
5637  A55B 00           	nop			;a55b	00 	.
5638  A55C 00           	nop			;a55c	00 	.
5639  A55D 00           	nop			;a55d	00 	.
5640  A55E 00           	nop			;a55e	00 	.
5641  A55F 00           	nop			;a55f	00 	.
5642  A560              la560h:
5643  A560 00           	nop			;a560	00 	.
5644  A561              la561h:
5645  A561 00           	nop			;a561	00 	.
5646  A562 00           	nop			;a562	00 	.
5647  A563 00           	nop			;a563	00 	.
5648  A564 00           	nop			;a564	00 	.
5649  A565 00           	nop			;a565	00 	.
5650  A566 00           	nop			;a566	00 	.
5651  A567 00           	nop			;a567	00 	.
5652  A568 00           	nop			;a568	00 	.
5653  A569 00           	nop			;a569	00 	.
5654  A56A 00           	nop			;a56a	00 	.
5655  A56B 00           	nop			;a56b	00 	.
5656  A56C 00           	nop			;a56c	00 	.
5657  A56D 00           	nop			;a56d	00 	.
5658  A56E 00           	nop			;a56e	00 	.
5659  A56F 00           	nop			;a56f	00 	.
5660  A570 00           	nop			;a570	00 	.
5661  A571 00           	nop			;a571	00 	.
5662  A572 00           	nop			;a572	00 	.
5663  A573 00           	nop			;a573	00 	.
5664  A574 00           	nop			;a574	00 	.
5665  A575 00           	nop			;a575	00 	.
5666  A576 00           	nop			;a576	00 	.
5667  A577 00           	nop			;a577	00 	.
5668  A578 00           	nop			;a578	00 	.
5669  A579 00           	nop			;a579	00 	.
5670  A57A 00           	nop			;a57a	00 	.
5671  A57B 00           	nop			;a57b	00 	.
5672  A57C 00           	nop			;a57c	00 	.
5673  A57D 00           	nop			;a57d	00 	.
5674  A57E 00           	nop			;a57e	00 	.
5675  A57F 00           	nop			;a57f	00 	.
5676  A580 00           	nop			;a580	00 	.
5677  A581 00           	nop			;a581	00 	.
5678  A582 00           	nop			;a582	00 	.
5679  A583 00           	nop			;a583	00 	.
5680  A584 00           	nop			;a584	00 	.
5681  A585 00           	nop			;a585	00 	.
5682  A586 00           	nop			;a586	00 	.
5683  A587 00           	nop			;a587	00 	.
5684  A588 00           	nop			;a588	00 	.
5685  A589 00           	nop			;a589	00 	.
5686  A58A 00           	nop			;a58a	00 	.
5687  A58B 00           	nop			;a58b	00 	.
5688  A58C 00           	nop			;a58c	00 	.
5689  A58D 00           	nop			;a58d	00 	.
5690  A58E 00           	nop			;a58e	00 	.
5691  A58F 00           	nop			;a58f	00 	.
5692  A590 00           	nop			;a590	00 	.
5693  A591 00           	nop			;a591	00 	.
5694  A592 00           	nop			;a592	00 	.
5695  A593 00           	nop			;a593	00 	.
5696  A594 00           	nop			;a594	00 	.
5697  A595 00           	nop			;a595	00 	.
5698  A596 00           	nop			;a596	00 	.
5699  A597              la597h:
5700  A597 FC 00 FF     	call m,0ff00h		;a597	fc 00 ff 	. . .
5701  A59A F0           	ret p			;a59a	f0 	.
5702  A59B 00           	nop			;a59b	00 	.
5703  A59C 00           	nop			;a59c	00 	.
5704  A59D CF           	rst 8			;a59d	cf 	.
5705  A59E FF           	rst 38h			;a59e	ff 	.
5706  A59F FF           	rst 38h			;a59f	ff 	.
5707  A5A0 FF           	rst 38h			;a5a0	ff 	.
5708  A5A1 C0           	ret nz			;a5a1	c0 	.
5709  A5A2 00           	nop			;a5a2	00 	.
5710  A5A3 FC 00 FF     	call m,0ff00h		;a5a3	fc 00 ff 	. . .
5711  A5A6 FF           	rst 38h			;a5a6	ff 	.
5712  A5A7 C0           	ret nz			;a5a7	c0 	.
5713  A5A8 00           	nop			;a5a8	00 	.
5714  A5A9 00           	nop			;a5a9	00 	.
5715  A5AA 00           	nop			;a5aa	00 	.
5716  A5AB 03           	inc bc			;a5ab	03 	.
5717  A5AC F0           	ret p			;a5ac	f0 	.
5718  A5AD 00           	nop			;a5ad	00 	.
5719  A5AE 00           	nop			;a5ae	00 	.
5720  A5AF 00           	nop			;a5af	00 	.
5721  A5B0 0A           	ld a,(bc)			;a5b0	0a 	.
5722  A5B1 AA           	xor d			;a5b1	aa 	.
5723  A5B2 AA           	xor d			;a5b2	aa 	.
5724  A5B3 AA           	xor d			;a5b3	aa 	.
5725  A5B4 00           	nop			;a5b4	00 	.
5726  A5B5 00           	nop			;a5b5	00 	.
5727  A5B6 2A AA AA     	ld hl,(0aaaah)		;a5b6	2a aa aa 	* . .
5728  A5B9 AA           	xor d			;a5b9	aa 	.
5729  A5BA 00           	nop			;a5ba	00 	.
5730  A5BB 00           	nop			;a5bb	00 	.
5731  A5BC 81           	add a,c			;a5bc	81 	.
5732  A5BD 55           	ld d,l			;a5bd	55 	U
5733  A5BE 55           	ld d,l			;a5be	55 	U
5734  A5BF 50           	ld d,b			;a5bf	50 	P
5735  A5C0 80           	add a,b			;a5c0	80 	.
5736  A5C1 02           	ld (bc),a			;a5c1	02 	.
5737  A5C2 07           	rlca			;a5c2	07 	.
5738  A5C3 33           	inc sp			;a5c3	33 	3
5739  A5C4 33           	inc sp			;a5c4	33 	3
5740  A5C5 34           	inc (hl)			;a5c5	34 	4
5741  A5C6 20 00        	jr nz,la5c8h		;a5c6	20 00 	  .
5742  A5C8              la5c8h:
5743  A5C8 01 55 55     	ld bc,05555h		;a5c8	01 55 55 	. U U
5744  A5CB 50           	ld d,b			;a5cb	50 	P
5745  A5CC 00           	nop			;a5cc	00 	.
5746  A5CD 0F           	rrca			;a5cd	0f 	.
5747  A5CE C0           	ret nz			;a5ce	c0 	.
5748  A5CF 0F           	rrca			;a5cf	0f 	.
5749  A5D0 FF           	rst 38h			;a5d0	ff 	.
5750  A5D1 00           	nop			;a5d1	00 	.
5751  A5D2 00           	nop			;a5d2	00 	.
5752  A5D3 0C           	inc c			;a5d3	0c 	.
5753  A5D4 FF           	rst 38h			;a5d4	ff 	.
5754  A5D5 FF           	rst 38h			;a5d5	ff 	.
5755  A5D6 FF           	rst 38h			;a5d6	ff 	.
5756  A5D7 FC 00 0F     	call m,00f00h		;a5d7	fc 00 0f 	. . .
5757  A5DA C0           	ret nz			;a5da	c0 	.
5758  A5DB 0F           	rrca			;a5db	0f 	.
5759  A5DC FF           	rst 38h			;a5dc	ff 	.
5760  A5DD FC 00 00     	call m,00000h		;a5dd	fc 00 00 	. . .
5761  A5E0 00           	nop			;a5e0	00 	.
5762  A5E1 00           	nop			;a5e1	00 	.
5763  A5E2 3F           	ccf			;a5e2	3f 	?
5764  A5E3 00           	nop			;a5e3	00 	.
5765  A5E4 00           	nop			;a5e4	00 	.
5766  A5E5 00           	nop			;a5e5	00 	.
5767  A5E6 00           	nop			;a5e6	00 	.
5768  A5E7 AA           	xor d			;a5e7	aa 	.
5769  A5E8 AA           	xor d			;a5e8	aa 	.
5770  A5E9 AA           	xor d			;a5e9	aa 	.
5771  A5EA A0           	and b			;a5ea	a0 	.
5772  A5EB 00           	nop			;a5eb	00 	.
5773  A5EC 02           	ld (bc),a			;a5ec	02 	.
5774  A5ED AA           	xor d			;a5ed	aa 	.
5775  A5EE AA           	xor d			;a5ee	aa 	.
5776  A5EF AA           	xor d			;a5ef	aa 	.
5777  A5F0 A0           	and b			;a5f0	a0 	.
5778  A5F1 00           	nop			;a5f1	00 	.
5779  A5F2 08           	ex af,af'			;a5f2	08 	.
5780  A5F3 15           	dec d			;a5f3	15 	.
5781  A5F4 55           	ld d,l			;a5f4	55 	U
5782  A5F5 55           	ld d,l			;a5f5	55 	U
5783  A5F6 08           	ex af,af'			;a5f6	08 	.
5784  A5F7 00           	nop			;a5f7	00 	.
5785  A5F8 20 73        	jr nz,la66dh		;a5f8	20 73 	  s
5786  A5FA 33           	inc sp			;a5fa	33 	3
5787  A5FB 33           	inc sp			;a5fb	33 	3
5788  A5FC 42           	ld b,d			;a5fc	42 	B
5789  A5FD 00           	nop			;a5fd	00 	.
5790  A5FE 00           	nop			;a5fe	00 	.
5791  A5FF 15           	dec d			;a5ff	15 	.
5792  A600 55           	ld d,l			;a600	55 	U
5793  A601 55           	ld d,l			;a601	55 	U
5794  A602 00           	nop			;a602	00 	.
5795  A603 00           	nop			;a603	00 	.
5796  A604 00           	nop			;a604	00 	.
5797  A605 FF           	rst 38h			;a605	ff 	.
5798  A606 F0           	ret p			;a606	f0 	.
5799  A607 03           	inc bc			;a607	03 	.
5800  A608 F0           	ret p			;a608	f0 	.
5801  A609 00           	nop			;a609	00 	.
5802  A60A 3F           	ccf			;a60a	3f 	?
5803  A60B FF           	rst 38h			;a60b	ff 	.
5804  A60C FF           	rst 38h			;a60c	ff 	.
5805  A60D FF           	rst 38h			;a60d	ff 	.
5806  A60E 30 00        	jr nc,la610h		;a60e	30 00 	0 .
5807  A610              la610h:
5808  A610 3F           	ccf			;a610	3f 	?
5809  A611 FF           	rst 38h			;a611	ff 	.
5810  A612 F0           	ret p			;a612	f0 	.
5811  A613 03           	inc bc			;a613	03 	.
5812  A614 F0           	ret p			;a614	f0 	.
5813  A615 00           	nop			;a615	00 	.
5814  A616 00           	nop			;a616	00 	.
5815  A617 FC 00 00     	call m,00000h		;a617	fc 00 00 	. . .
5816  A61A 00           	nop			;a61a	00 	.
5817  A61B 0A           	ld a,(bc)			;a61b	0a 	.
5818  A61C AA           	xor d			;a61c	aa 	.
5819  A61D AA           	xor d			;a61d	aa 	.
5820  A61E AA           	xor d			;a61e	aa 	.
5821  A61F 00           	nop			;a61f	00 	.
5822  A620 00           	nop			;a620	00 	.
5823  A621 0A           	ld a,(bc)			;a621	0a 	.
5824  A622 AA           	xor d			;a622	aa 	.
5825  A623 AA           	xor d			;a623	aa 	.
5826  A624 AA           	xor d			;a624	aa 	.
5827  A625 80           	add a,b			;a625	80 	.
5828  A626 00           	nop			;a626	00 	.
5829  A627              la627h:
5830  A627 20 55        	jr nz,la67eh		;a627	20 55 	  U
5831  A629 55           	ld d,l			;a629	55 	U
5832  A62A 54           	ld d,h			;a62a	54 	T
5833  A62B 20 00        	jr nz,la62dh		;a62b	20 00 	  .
5834  A62D              la62dh:
5835  A62D 81           	add a,c			;a62d	81 	.
5836  A62E CC CC CD     	call z,0cdcch		;a62e	cc cc cd 	. . .
5837  A631 08           	ex af,af'			;a631	08 	.
5838  A632 00           	nop			;a632	00 	.
5839  A633 00           	nop			;a633	00 	.
5840  A634 55           	ld d,l			;a634	55 	U
5841  A635 55           	ld d,l			;a635	55 	U
5842  A636 54           	ld d,h			;a636	54 	T
5843  A637 00           	nop			;a637	00 	.
5844  A638 00           	nop			;a638	00 	.
5845  A639 00           	nop			;a639	00 	.
5846  A63A 00           	nop			;a63a	00 	.
5847  A63B 0F           	rrca			;a63b	0f 	.
5848  A63C FF           	rst 38h			;a63c	ff 	.
5849  A63D 00           	nop			;a63d	00 	.
5850  A63E 3F           	ccf			;a63e	3f 	?
5851  A63F 00           	nop			;a63f	00 	.
5852  A640 03           	inc bc			;a640	03 	.
5853  A641 FF           	rst 38h			;a641	ff 	.
5854  A642 FF           	rst 38h			;a642	ff 	.
5855  A643 FF           	rst 38h			;a643	ff 	.
5856  A644 F3           	di			;a644	f3 	.
5857  A645 00           	nop			;a645	00 	.
5858  A646 03           	inc bc			;a646	03 	.
5859  A647 FF           	rst 38h			;a647	ff 	.
5860  A648 FF           	rst 38h			;a648	ff 	.
5861  A649 00           	nop			;a649	00 	.
5862  A64A 3F           	ccf			;a64a	3f 	?
5863  A64B 00           	nop			;a64b	00 	.
5864  A64C 00           	nop			;a64c	00 	.
5865  A64D 0F           	rrca			;a64d	0f 	.
5866  A64E C0           	ret nz			;a64e	c0 	.
5867  A64F 00           	nop			;a64f	00 	.
5868  A650 00           	nop			;a650	00 	.
5869  A651 00           	nop			;a651	00 	.
5870  A652 AA           	xor d			;a652	aa 	.
5871  A653 AA           	xor d			;a653	aa 	.
5872  A654 AA           	xor d			;a654	aa 	.
5873  A655 A0           	and b			;a655	a0 	.
5874  A656 00           	nop			;a656	00 	.
5875  A657 00           	nop			;a657	00 	.
5876  A658 AA           	xor d			;a658	aa 	.
5877  A659 AA           	xor d			;a659	aa 	.
5878  A65A AA           	xor d			;a65a	aa 	.
5879  A65B A8           	xor b			;a65b	a8 	.
5880  A65C 00           	nop			;a65c	00 	.
5881  A65D 02           	ld (bc),a			;a65d	02 	.
5882  A65E 05           	dec b			;a65e	05 	.
5883  A65F 55           	ld d,l			;a65f	55 	U
5884  A660 55           	ld d,l			;a660	55 	U
5885  A661 42           	ld b,d			;a661	42 	B
5886  A662 00           	nop			;a662	00 	.
5887  A663 08           	ex af,af'			;a663	08 	.
5888  A664 1C           	inc e			;a664	1c 	.
5889  A665 CC CC D0     	call z,0d0cch		;a665	cc cc d0 	. . .
5890  A668 80           	add a,b			;a668	80 	.
5891  A669 00           	nop			;a669	00 	.
5892  A66A 05           	dec b			;a66a	05 	.
5893  A66B 55           	ld d,l			;a66b	55 	U
5894  A66C 55           	ld d,l			;a66c	55 	U
5895  A66D              la66dh:
5896  A66D 40           	ld b,b			;a66d	40 	@
5897  A66E 00           	nop			;a66e	00 	.
5898  A66F              la66fh:
5899  A66F 05           	dec b			;a66f	05 	.
5900  A670 00           	nop			;a670	00 	.
5901  A671 05           	dec b			;a671	05 	.
5902  A672 00           	nop			;a672	00 	.
5903  A673 35           	dec (hl)			;a673	35 	5
5904  A674 C0           	ret nz			;a674	c0 	.
5905  A675 F5           	push af			;a675	f5 	.
5906  A676 F0           	ret p			;a676	f0 	.
5907  A677 05           	dec b			;a677	05 	.
5908  A678 00           	nop			;a678	00 	.
5909  A679 05           	dec b			;a679	05 	.
5910  A67A 00           	nop			;a67a	00 	.
5911  A67B 25           	dec h			;a67b	25 	%
5912  A67C 80           	add a,b			;a67c	80 	.
5913  A67D A0           	and b			;a67d	a0 	.
5914  A67E              la67eh:
5915  A67E A0           	and b			;a67e	a0 	.
5916  A67F 80           	add a,b			;a67f	80 	.
5917  A680 20 00        	jr nz,la682h		;a680	20 00 	  .
5918  A682              la682h:
5919  A682 50           	ld d,b			;a682	50 	P
5920  A683 00           	nop			;a683	00 	.
5921  A684 50           	ld d,b			;a684	50 	P
5922  A685 03           	inc bc			;a685	03 	.
5923  A686 5C           	ld e,h			;a686	5c 	\
5924  A687 0F           	rrca			;a687	0f 	.
5925  A688 5F           	ld e,a			;a688	5f 	_
5926  A689 00           	nop			;a689	00 	.
5927  A68A 50           	ld d,b			;a68a	50 	P
5928  A68B 00           	nop			;a68b	00 	.
5929  A68C 50           	ld d,b			;a68c	50 	P
5930  A68D 02           	ld (bc),a			;a68d	02 	.
5931  A68E 58           	ld e,b			;a68e	58 	X
5932  A68F 0A           	ld a,(bc)			;a68f	0a 	.
5933  A690 0A           	ld a,(bc)			;a690	0a 	.
5934  A691 08           	ex af,af'			;a691	08 	.
5935  A692 02           	ld (bc),a			;a692	02 	.
5936  A693              la693h:
5937  A693 15           	dec d			;a693	15 	.
5938  A694 50           	ld d,b			;a694	50 	P
5939  A695 18 90        	jr la627h		;a695	18 90 	. .
5940  A697 12           	ld (de),a			;a697	12 	.
5941  A698 10 18        	djnz la6b2h		;a698	10 18 	. .
5942  A69A 95           	sub l			;a69a	95 	.
5943  A69B 12           	ld (de),a			;a69b	12 	.
5944  A69C 10 18        	djnz la6b6h		;a69c	10 18 	. .
5945  A69E 90           	sub b			;a69e	90 	.
5946  A69F 12           	ld (de),a			;a69f	12 	.
5947  A6A0 10 3F        	djnz la6e1h		;a6a0	10 3f 	. ?
5948  A6A2 F0           	ret p			;a6a2	f0 	.
5949  A6A3 FF           	rst 38h			;a6a3	ff 	.
5950  A6A4 FC 00 00     	call m,00000h		;a6a4	fc 00 00 	. . .
5951  A6A7 00           	nop			;a6a7	00 	.
5952  A6A8 00           	nop			;a6a8	00 	.
5953  A6A9 01 50 C0     	ld bc,0c050h		;a6a9	01 50 c0 	. P .
5954  A6AC 0F           	rrca			;a6ac	0f 	.
5955  A6AD FF           	rst 38h			;a6ad	ff 	.
5956  A6AE 00           	nop			;a6ae	00 	.
5957  A6AF 05           	dec b			;a6af	05 	.
5958  A6B0 50           	ld d,b			;a6b0	50 	P
5959  A6B1 C5           	push bc			;a6b1	c5 	.
5960  A6B2              la6b2h:
5961  A6B2 57           	ld d,a			;a6b2	57 	W
5962  A6B3 FD 55 55     	defb 0fdh,055h,055h	;illegal sequence		;a6b3	fd 55 55 	. U U
5963  A6B6              la6b6h:
5964  A6B6 50           	ld d,b			;a6b6	50 	P
5965  A6B7 D5           	push de			;a6b7	d5 	.
5966  A6B8 55           	ld d,l			;a6b8	55 	U
5967  A6B9 55           	ld d,l			;a6b9	55 	U
5968  A6BA 55           	ld d,l			;a6ba	55 	U
5969  A6BB 6A           	ld l,d			;a6bb	6a 	j
5970  A6BC 90           	sub b			;a6bc	90 	.
5971  A6BD D6 AA        	sub 0aah		;a6bd	d6 aa 	. .
5972  A6BF AA           	xor d			;a6bf	aa 	.
5973  A6C0 A5           	and l			;a6c0	a5 	.
5974  A6C1 55           	ld d,l			;a6c1	55 	U
5975  A6C2 50           	ld d,b			;a6c2	50 	P
5976  A6C3 C5           	push bc			;a6c3	c5 	.
5977  A6C4 55           	ld d,l			;a6c4	55 	U
5978  A6C5 55           	ld d,l			;a6c5	55 	U
5979  A6C6 55           	ld d,l			;a6c6	55 	U
5980  A6C7 00           	nop			;a6c7	00 	.
5981  A6C8 00           	nop			;a6c8	00 	.
5982  A6C9 C0           	ret nz			;a6c9	c0 	.
5983  A6CA 0C           	inc c			;a6ca	0c 	.
5984  A6CB 00           	nop			;a6cb	00 	.
5985  A6CC 0C           	inc c			;a6cc	0c 	.
5986  A6CD 10 00        	djnz la6cfh		;a6cd	10 00 	. .
5987  A6CF              la6cfh:
5988  A6CF 00           	nop			;a6cf	00 	.
5989  A6D0 AA           	xor d			;a6d0	aa 	.
5990  A6D1 AA           	xor d			;a6d1	aa 	.
5991  A6D2 AA           	xor d			;a6d2	aa 	.
5992  A6D3 50           	ld d,b			;a6d3	50 	P
5993  A6D4 00           	nop			;a6d4	00 	.
5994  A6D5 00           	nop			;a6d5	00 	.
5995  A6D6 00           	nop			;a6d6	00 	.
5996  A6D7 00           	nop			;a6d7	00 	.
5997  A6D8 00           	nop			;a6d8	00 	.
5998  A6D9 10 00        	djnz la6dbh		;a6d9	10 00 	. .
5999  A6DB              la6dbh:
6000  A6DB 00           	nop			;a6db	00 	.
6001  A6DC 00           	nop			;a6dc	00 	.
6002  A6DD 00           	nop			;a6dd	00 	.
6003  A6DE 00           	nop			;a6de	00 	.
6004  A6DF 00           	nop			;a6df	00 	.
6005  A6E0 15           	dec d			;a6e0	15 	.
6006  A6E1              la6e1h:
6007  A6E1 0C           	inc c			;a6e1	0c 	.
6008  A6E2 00           	nop			;a6e2	00 	.
6009  A6E3 FF           	rst 38h			;a6e3	ff 	.
6010  A6E4 F0           	ret p			;a6e4	f0 	.
6011  A6E5 00           	nop			;a6e5	00 	.
6012  A6E6 55           	ld d,l			;a6e6	55 	U
6013  A6E7 0C           	inc c			;a6e7	0c 	.
6014  A6E8 55           	ld d,l			;a6e8	55 	U
6015  A6E9 7F           	ld a,a			;a6e9	7f 	
6016  A6EA D5           	push de			;a6ea	d5 	.
6017  A6EB 55           	ld d,l			;a6eb	55 	U
6018  A6EC 55           	ld d,l			;a6ec	55 	U
6019  A6ED 0D           	dec c			;a6ed	0d 	.
6020  A6EE 55           	ld d,l			;a6ee	55 	U
6021  A6EF 55           	ld d,l			;a6ef	55 	U
6022  A6F0 55           	ld d,l			;a6f0	55 	U
6023  A6F1 56           	ld d,(hl)			;a6f1	56 	V
6024  A6F2 A9           	xor c			;a6f2	a9 	.
6025  A6F3 0D           	dec c			;a6f3	0d 	.
6026  A6F4 6A           	ld l,d			;a6f4	6a 	j
6027  A6F5 AA           	xor d			;a6f5	aa 	.
6028  A6F6 AA           	xor d			;a6f6	aa 	.
6029  A6F7 55           	ld d,l			;a6f7	55 	U
6030  A6F8 55           	ld d,l			;a6f8	55 	U
6031  A6F9 0C           	inc c			;a6f9	0c 	.
6032  A6FA 55           	ld d,l			;a6fa	55 	U
6033  A6FB 55           	ld d,l			;a6fb	55 	U
6034  A6FC 55           	ld d,l			;a6fc	55 	U
6035  A6FD 50           	ld d,b			;a6fd	50 	P
6036  A6FE 00           	nop			;a6fe	00 	.
6037  A6FF 0C           	inc c			;a6ff	0c 	.
6038  A700 00           	nop			;a700	00 	.
6039  A701 C0           	ret nz			;a701	c0 	.
6040  A702 00           	nop			;a702	00 	.
6041  A703 C1           	pop bc			;a703	c1 	.
6042  A704 00           	nop			;a704	00 	.
6043  A705 00           	nop			;a705	00 	.
6044  A706 0A           	ld a,(bc)			;a706	0a 	.
6045  A707 AA           	xor d			;a707	aa 	.
6046  A708 AA           	xor d			;a708	aa 	.
6047  A709 A5           	and l			;a709	a5 	.
6048  A70A 00           	nop			;a70a	00 	.
6049  A70B 00           	nop			;a70b	00 	.
6050  A70C 00           	nop			;a70c	00 	.
6051  A70D 00           	nop			;a70d	00 	.
6052  A70E 00           	nop			;a70e	00 	.
6053  A70F 01 00 00     	ld bc,00000h		;a70f	01 00 00 	. . .
6054  A712 00           	nop			;a712	00 	.
6055  A713 00           	nop			;a713	00 	.
6056  A714 00           	nop			;a714	00 	.
6057  A715 01 50 00     	ld bc,00050h		;a715	01 50 00 	. P .
6058  A718 0F           	rrca			;a718	0f 	.
6059  A719 FF           	rst 38h			;a719	ff 	.
6060  A71A 00           	nop			;a71a	00 	.
6061  A71B 05           	dec b			;a71b	05 	.
6062  A71C 50           	ld d,b			;a71c	50 	P
6063  A71D 05           	dec b			;a71d	05 	.
6064  A71E 57           	ld d,a			;a71e	57 	W
6065  A71F FD 55 55     	defb 0fdh,055h,055h	;illegal sequence		;a71f	fd 55 55 	. U U
6066  A722 50           	ld d,b			;a722	50 	P
6067  A723 D5           	push de			;a723	d5 	.
6068  A724 55           	ld d,l			;a724	55 	U
6069  A725 55           	ld d,l			;a725	55 	U
6070  A726 55           	ld d,l			;a726	55 	U
6071  A727 6A           	ld l,d			;a727	6a 	j
6072  A728 90           	sub b			;a728	90 	.
6073  A729 D6 AA        	sub 0aah		;a729	d6 aa 	. .
6074  A72B AA           	xor d			;a72b	aa 	.
6075  A72C A5           	and l			;a72c	a5 	.
6076  A72D 55           	ld d,l			;a72d	55 	U
6077  A72E 50           	ld d,b			;a72e	50 	P
6078  A72F 05           	dec b			;a72f	05 	.
6079  A730 55           	ld d,l			;a730	55 	U
6080  A731 55           	ld d,l			;a731	55 	U
6081  A732 55           	ld d,l			;a732	55 	U
6082  A733 00           	nop			;a733	00 	.
6083  A734 00           	nop			;a734	00 	.
6084  A735 00           	nop			;a735	00 	.
6085  A736 0C           	inc c			;a736	0c 	.
6086  A737 00           	nop			;a737	00 	.
6087  A738 0C           	inc c			;a738	0c 	.
6088  A739 10 00        	djnz la73bh		;a739	10 00 	. .
6089  A73B              la73bh:
6090  A73B 00           	nop			;a73b	00 	.
6091  A73C AA           	xor d			;a73c	aa 	.
6092  A73D AA           	xor d			;a73d	aa 	.
6093  A73E AA           	xor d			;a73e	aa 	.
6094  A73F 50           	ld d,b			;a73f	50 	P
6095  A740 00           	nop			;a740	00 	.
6096  A741 00           	nop			;a741	00 	.
6097  A742 00           	nop			;a742	00 	.
6098  A743 00           	nop			;a743	00 	.
6099  A744 00           	nop			;a744	00 	.
6100  A745 10 00        	djnz la747h		;a745	10 00 	. .
6101  A747              la747h:
6102  A747 00           	nop			;a747	00 	.
6103  A748 00           	nop			;a748	00 	.
6104  A749 00           	nop			;a749	00 	.
6105  A74A 00           	nop			;a74a	00 	.
6106  A74B 00           	nop			;a74b	00 	.
6107  A74C 15           	dec d			;a74c	15 	.
6108  A74D 00           	nop			;a74d	00 	.
6109  A74E 00           	nop			;a74e	00 	.
6110  A74F FF           	rst 38h			;a74f	ff 	.
6111  A750 F0           	ret p			;a750	f0 	.
6112  A751 00           	nop			;a751	00 	.
6113  A752 55           	ld d,l			;a752	55 	U
6114  A753 00           	nop			;a753	00 	.
6115  A754 55           	ld d,l			;a754	55 	U
6116  A755 7F           	ld a,a			;a755	7f 	
6117  A756 D5           	push de			;a756	d5 	.
6118  A757 55           	ld d,l			;a757	55 	U
6119  A758 55           	ld d,l			;a758	55 	U
6120  A759 0D           	dec c			;a759	0d 	.
6121  A75A 55           	ld d,l			;a75a	55 	U
6122  A75B 55           	ld d,l			;a75b	55 	U
6123  A75C 55           	ld d,l			;a75c	55 	U
6124  A75D 56           	ld d,(hl)			;a75d	56 	V
6125  A75E A9           	xor c			;a75e	a9 	.
6126  A75F 0D           	dec c			;a75f	0d 	.
6127  A760 6A           	ld l,d			;a760	6a 	j
6128  A761 AA           	xor d			;a761	aa 	.
6129  A762 AA           	xor d			;a762	aa 	.
6130  A763 55           	ld d,l			;a763	55 	U
6131  A764 55           	ld d,l			;a764	55 	U
6132  A765 00           	nop			;a765	00 	.
6133  A766 55           	ld d,l			;a766	55 	U
6134  A767 55           	ld d,l			;a767	55 	U
6135  A768 55           	ld d,l			;a768	55 	U
6136  A769 50           	ld d,b			;a769	50 	P
6137  A76A 00           	nop			;a76a	00 	.
6138  A76B 00           	nop			;a76b	00 	.
6139  A76C 00           	nop			;a76c	00 	.
6140  A76D C0           	ret nz			;a76d	c0 	.
6141  A76E 00           	nop			;a76e	00 	.
6142  A76F C1           	pop bc			;a76f	c1 	.
6143  A770 00           	nop			;a770	00 	.
6144  A771 00           	nop			;a771	00 	.
6145  A772 0A           	ld a,(bc)			;a772	0a 	.
6146  A773 AA           	xor d			;a773	aa 	.
6147  A774 AA           	xor d			;a774	aa 	.
6148  A775 A5           	and l			;a775	a5 	.
6149  A776 00           	nop			;a776	00 	.
6150  A777 00           	nop			;a777	00 	.
6151  A778 00           	nop			;a778	00 	.
6152  A779 00           	nop			;a779	00 	.
6153  A77A 00           	nop			;a77a	00 	.
6154  A77B 01 00 54     	ld bc,05400h		;a77b	01 00 54 	. . T
6155  A77E 00           	nop			;a77e	00 	.
6156  A77F 00           	nop			;a77f	00 	.
6157  A780 00           	nop			;a780	00 	.
6158  A781 00           	nop			;a781	00 	.
6159  A782 00           	nop			;a782	00 	.
6160  A783 55           	ld d,l			;a783	55 	U
6161  A784 00           	nop			;a784	00 	.
6162  A785 0F           	rrca			;a785	0f 	.
6163  A786 FF           	rst 38h			;a786	ff 	.
6164  A787 00           	nop			;a787	00 	.
6165  A788 30 55        	jr nc,la7dfh		;a788	30 55 	0 U
6166  A78A 55           	ld d,l			;a78a	55 	U
6167  A78B 57           	ld d,a			;a78b	57 	W
6168  A78C FD 55 30     	defb 0fdh,055h,030h	;illegal sequence		;a78c	fd 55 30 	. U 0
6169  A78F 6A           	ld l,d			;a78f	6a 	j
6170  A790 95           	sub l			;a790	95 	.
6171  A791 55           	ld d,l			;a791	55 	U
6172  A792 55           	ld d,l			;a792	55 	U
6173  A793 55           	ld d,l			;a793	55 	U
6174  A794 70           	ld (hl),b			;a794	70 	p
6175  A795 55           	ld d,l			;a795	55 	U
6176  A796 55           	ld d,l			;a796	55 	U
6177  A797 AA           	xor d			;a797	aa 	.
6178  A798 AA           	xor d			;a798	aa 	.
6179  A799 A9           	xor c			;a799	a9 	.
6180  A79A 70           	ld (hl),b			;a79a	70 	p
6181  A79B 00           	nop			;a79b	00 	.
6182  A79C 05           	dec b			;a79c	05 	.
6183  A79D 55           	ld d,l			;a79d	55 	U
6184  A79E 55           	ld d,l			;a79e	55 	U
6185  A79F 55           	ld d,l			;a79f	55 	U
6186  A7A0 30 00        	jr nc,la7a2h		;a7a0	30 00 	0 .
6187  A7A2              la7a2h:
6188  A7A2 43           	ld b,e			;a7a2	43 	C
6189  A7A3 00           	nop			;a7a3	00 	.
6190  A7A4 03           	inc bc			;a7a4	03 	.
6191  A7A5 00           	nop			;a7a5	00 	.
6192  A7A6 30 00        	jr nc,la7a8h		;a7a6	30 00 	0 .
6193  A7A8              la7a8h:
6194  A7A8 5A           	ld e,d			;a7a8	5a 	Z
6195  A7A9 AA           	xor d			;a7a9	aa 	.
6196  A7AA AA           	xor d			;a7aa	aa 	.
6197  A7AB A0           	and b			;a7ab	a0 	.
6198  A7AC 00           	nop			;a7ac	00 	.
6199  A7AD 00           	nop			;a7ad	00 	.
6200  A7AE 40           	ld b,b			;a7ae	40 	@
6201  A7AF 00           	nop			;a7af	00 	.
6202  A7B0 00           	nop			;a7b0	00 	.
6203  A7B1 00           	nop			;a7b1	00 	.
6204  A7B2 00           	nop			;a7b2	00 	.
6205  A7B3 05           	dec b			;a7b3	05 	.
6206  A7B4 40           	ld b,b			;a7b4	40 	@
6207  A7B5 00           	nop			;a7b5	00 	.
6208  A7B6 00           	nop			;a7b6	00 	.
6209  A7B7 00           	nop			;a7b7	00 	.
6210  A7B8 00           	nop			;a7b8	00 	.
6211  A7B9 05           	dec b			;a7b9	05 	.
6212  A7BA 50           	ld d,b			;a7ba	50 	P
6213  A7BB 00           	nop			;a7bb	00 	.
6214  A7BC FF           	rst 38h			;a7bc	ff 	.
6215  A7BD F0           	ret p			;a7bd	f0 	.
6216  A7BE 03           	inc bc			;a7be	03 	.
6217  A7BF 05           	dec b			;a7bf	05 	.
6218  A7C0 55           	ld d,l			;a7c0	55 	U
6219  A7C1 55           	ld d,l			;a7c1	55 	U
6220  A7C2 7F           	ld a,a			;a7c2	7f 	
6221  A7C3 D5           	push de			;a7c3	d5 	.
6222  A7C4 53           	ld d,e			;a7c4	53 	S
6223  A7C5 06 A9        	ld b,0a9h		;a7c5	06 a9 	. .
6224  A7C7 55           	ld d,l			;a7c7	55 	U
6225  A7C8 55           	ld d,l			;a7c8	55 	U
6226  A7C9 55           	ld d,l			;a7c9	55 	U
6227  A7CA 57           	ld d,a			;a7ca	57 	W
6228  A7CB 05           	dec b			;a7cb	05 	.
6229  A7CC 55           	ld d,l			;a7cc	55 	U
6230  A7CD 5A           	ld e,d			;a7cd	5a 	Z
6231  A7CE AA           	xor d			;a7ce	aa 	.
6232  A7CF AA           	xor d			;a7cf	aa 	.
6233  A7D0 97           	sub a			;a7d0	97 	.
6234  A7D1 00           	nop			;a7d1	00 	.
6235  A7D2 00           	nop			;a7d2	00 	.
6236  A7D3 55           	ld d,l			;a7d3	55 	U
6237  A7D4 55           	ld d,l			;a7d4	55 	U
6238  A7D5 55           	ld d,l			;a7d5	55 	U
6239  A7D6 53           	ld d,e			;a7d6	53 	S
6240  A7D7 00           	nop			;a7d7	00 	.
6241  A7D8 04           	inc b			;a7d8	04 	.
6242  A7D9 30 00        	jr nc,la7dbh		;a7d9	30 00 	0 .
6243  A7DB              la7dbh:
6244  A7DB 30 03        	jr nc,la7e0h		;a7db	30 03 	0 .
6245  A7DD 00           	nop			;a7dd	00 	.
6246  A7DE 05           	dec b			;a7de	05 	.
6247  A7DF              la7dfh:
6248  A7DF AA           	xor d			;a7df	aa 	.
6249  A7E0              la7e0h:
6250  A7E0 AA           	xor d			;a7e0	aa 	.
6251  A7E1 AA           	xor d			;a7e1	aa 	.
6252  A7E2 00           	nop			;a7e2	00 	.
6253  A7E3 00           	nop			;a7e3	00 	.
6254  A7E4 04           	inc b			;a7e4	04 	.
6255  A7E5 00           	nop			;a7e5	00 	.
6256  A7E6 00           	nop			;a7e6	00 	.
6257  A7E7 00           	nop			;a7e7	00 	.
6258  A7E8 00           	nop			;a7e8	00 	.
6259  A7E9 54           	ld d,h			;a7e9	54 	T
6260  A7EA 00           	nop			;a7ea	00 	.
6261  A7EB 00           	nop			;a7eb	00 	.
6262  A7EC 00           	nop			;a7ec	00 	.
6263  A7ED 00           	nop			;a7ed	00 	.
6264  A7EE 00           	nop			;a7ee	00 	.
6265  A7EF 55           	ld d,l			;a7ef	55 	U
6266  A7F0 00           	nop			;a7f0	00 	.
6267  A7F1 0F           	rrca			;a7f1	0f 	.
6268  A7F2 FF           	rst 38h			;a7f2	ff 	.
6269  A7F3 00           	nop			;a7f3	00 	.
6270  A7F4 00           	nop			;a7f4	00 	.
6271  A7F5 55           	ld d,l			;a7f5	55 	U
6272  A7F6 55           	ld d,l			;a7f6	55 	U
6273  A7F7 57           	ld d,a			;a7f7	57 	W
6274  A7F8 FD 55 00     	defb 0fdh,055h,000h	;illegal sequence		;a7f8	fd 55 00 	. U .
6275  A7FB 6A           	ld l,d			;a7fb	6a 	j
6276  A7FC 95           	sub l			;a7fc	95 	.
6277  A7FD 55           	ld d,l			;a7fd	55 	U
6278  A7FE 55           	ld d,l			;a7fe	55 	U
6279  A7FF 55           	ld d,l			;a7ff	55 	U
6280  A800 70           	ld (hl),b			;a800	70 	p
6281  A801 55           	ld d,l			;a801	55 	U
6282  A802 55           	ld d,l			;a802	55 	U
6283  A803 AA           	xor d			;a803	aa 	.
6284  A804 AA           	xor d			;a804	aa 	.
6285  A805 A9           	xor c			;a805	a9 	.
6286  A806 70           	ld (hl),b			;a806	70 	p
6287  A807 00           	nop			;a807	00 	.
6288  A808 05           	dec b			;a808	05 	.
6289  A809 55           	ld d,l			;a809	55 	U
6290  A80A 55           	ld d,l			;a80a	55 	U
6291  A80B 55           	ld d,l			;a80b	55 	U
6292  A80C 00           	nop			;a80c	00 	.
6293  A80D 00           	nop			;a80d	00 	.
6294  A80E 43           	ld b,e			;a80e	43 	C
6295  A80F 00           	nop			;a80f	00 	.
6296  A810 03           	inc bc			;a810	03 	.
6297  A811 00           	nop			;a811	00 	.
6298  A812 00           	nop			;a812	00 	.
6299  A813 00           	nop			;a813	00 	.
6300  A814 5A           	ld e,d			;a814	5a 	Z
6301  A815 AA           	xor d			;a815	aa 	.
6302  A816 AA           	xor d			;a816	aa 	.
6303  A817 A0           	and b			;a817	a0 	.
6304  A818 00           	nop			;a818	00 	.
6305  A819 00           	nop			;a819	00 	.
6306  A81A 40           	ld b,b			;a81a	40 	@
6307  A81B 00           	nop			;a81b	00 	.
6308  A81C 00           	nop			;a81c	00 	.
6309  A81D 00           	nop			;a81d	00 	.
6310  A81E 00           	nop			;a81e	00 	.
6311  A81F 05           	dec b			;a81f	05 	.
6312  A820 40           	ld b,b			;a820	40 	@
6313  A821 00           	nop			;a821	00 	.
6314  A822 00           	nop			;a822	00 	.
6315  A823 00           	nop			;a823	00 	.
6316  A824 00           	nop			;a824	00 	.
6317  A825 05           	dec b			;a825	05 	.
6318  A826 50           	ld d,b			;a826	50 	P
6319  A827 00           	nop			;a827	00 	.
6320  A828 FF           	rst 38h			;a828	ff 	.
6321  A829 F0           	ret p			;a829	f0 	.
6322  A82A 00           	nop			;a82a	00 	.
6323  A82B 05           	dec b			;a82b	05 	.
6324  A82C 55           	ld d,l			;a82c	55 	U
6325  A82D 55           	ld d,l			;a82d	55 	U
6326  A82E 7F           	ld a,a			;a82e	7f 	
6327  A82F D5           	push de			;a82f	d5 	.
6328  A830 50           	ld d,b			;a830	50 	P
6329  A831 06 A9        	ld b,0a9h		;a831	06 a9 	. .
6330  A833 55           	ld d,l			;a833	55 	U
6331  A834 55           	ld d,l			;a834	55 	U
6332  A835 55           	ld d,l			;a835	55 	U
6333  A836 57           	ld d,a			;a836	57 	W
6334  A837 05           	dec b			;a837	05 	.
6335  A838 55           	ld d,l			;a838	55 	U
6336  A839 5A           	ld e,d			;a839	5a 	Z
6337  A83A AA           	xor d			;a83a	aa 	.
6338  A83B AA           	xor d			;a83b	aa 	.
6339  A83C 97           	sub a			;a83c	97 	.
6340  A83D 00           	nop			;a83d	00 	.
6341  A83E 00           	nop			;a83e	00 	.
6342  A83F 55           	ld d,l			;a83f	55 	U
6343  A840 55           	ld d,l			;a840	55 	U
6344  A841 55           	ld d,l			;a841	55 	U
6345  A842 50           	ld d,b			;a842	50 	P
6346  A843 00           	nop			;a843	00 	.
6347  A844 04           	inc b			;a844	04 	.
6348  A845 30 00        	jr nc,la847h		;a845	30 00 	0 .
6349  A847              la847h:
6350  A847 30 00        	jr nc,la849h		;a847	30 00 	0 .
6351  A849              la849h:
6352  A849 00           	nop			;a849	00 	.
6353  A84A 05           	dec b			;a84a	05 	.
6354  A84B AA           	xor d			;a84b	aa 	.
6355  A84C AA           	xor d			;a84c	aa 	.
6356  A84D AA           	xor d			;a84d	aa 	.
6357  A84E 00           	nop			;a84e	00 	.
6358  A84F 00           	nop			;a84f	00 	.
6359  A850 04           	inc b			;a850	04 	.
6360  A851 00           	nop			;a851	00 	.
6361  A852 00           	nop			;a852	00 	.
6362  A853 00           	nop			;a853	00 	.
6363  A854 00           	nop			;a854	00 	.
6364  A855              la855h:
6365  A855 00           	nop			;a855	00 	.
6366  A856 00           	nop			;a856	00 	.
6367  A857 00           	nop			;a857	00 	.
6368  A858 00           	nop			;a858	00 	.
6369  A859 00           	nop			;a859	00 	.
6370  A85A 00           	nop			;a85a	00 	.
6371  A85B 00           	nop			;a85b	00 	.
6372  A85C 00           	nop			;a85c	00 	.
6373  A85D 00           	nop			;a85d	00 	.
6374  A85E 00           	nop			;a85e	00 	.
6375  A85F 00           	nop			;a85f	00 	.
6376  A860 00           	nop			;a860	00 	.
6377  A861 00           	nop			;a861	00 	.
6378  A862 00           	nop			;a862	00 	.
6379  A863 00           	nop			;a863	00 	.
6380  A864 00           	nop			;a864	00 	.
6381  A865 00           	nop			;a865	00 	.
6382  A866 00           	nop			;a866	00 	.
6383  A867 00           	nop			;a867	00 	.
6384  A868 00           	nop			;a868	00 	.
6385  A869 01 00 00     	ld bc,00000h		;a869	01 00 00 	. . .
6386  A86C 00           	nop			;a86c	00 	.
6387  A86D 00           	nop			;a86d	00 	.
6388  A86E 00           	nop			;a86e	00 	.
6389  A86F 05           	dec b			;a86f	05 	.
6390  A870 40           	ld b,b			;a870	40 	@
6391  A871 00           	nop			;a871	00 	.
6392  A872 00           	nop			;a872	00 	.
6393  A873 00           	nop			;a873	00 	.
6394  A874 00           	nop			;a874	00 	.
6395  A875 01 00 00     	ld bc,00000h		;a875	01 00 00 	. . .
6396  A878 00           	nop			;a878	00 	.
6397  A879 00           	nop			;a879	00 	.
6398  A87A 00           	nop			;a87a	00 	.
6399  A87B 00           	nop			;a87b	00 	.
6400  A87C 00           	nop			;a87c	00 	.
6401  A87D 00           	nop			;a87d	00 	.
6402  A87E 00           	nop			;a87e	00 	.
6403  A87F 00           	nop			;a87f	00 	.
6404  A880 00           	nop			;a880	00 	.
6405  A881 00           	nop			;a881	00 	.
6406  A882              la882h:
6407  A882 00           	nop			;a882	00 	.
6408  A883 00           	nop			;a883	00 	.
6409  A884 00           	nop			;a884	00 	.
6410  A885 00           	nop			;a885	00 	.
6411  A886 00           	nop			;a886	00 	.
6412  A887 00           	nop			;a887	00 	.
6413  A888 00           	nop			;a888	00 	.
6414  A889 00           	nop			;a889	00 	.
6415  A88A 00           	nop			;a88a	00 	.
6416  A88B 00           	nop			;a88b	00 	.
6417  A88C 00           	nop			;a88c	00 	.
6418  A88D 00           	nop			;a88d	00 	.
6419  A88E 00           	nop			;a88e	00 	.
6420  A88F 00           	nop			;a88f	00 	.
6421  A890 00           	nop			;a890	00 	.
6422  A891 00           	nop			;a891	00 	.
6423  A892 00           	nop			;a892	00 	.
6424  A893 00           	nop			;a893	00 	.
6425  A894 00           	nop			;a894	00 	.
6426  A895 00           	nop			;a895	00 	.
6427  A896 00           	nop			;a896	00 	.
6428  A897 00           	nop			;a897	00 	.
6429  A898 00           	nop			;a898	00 	.
6430  A899 00           	nop			;a899	00 	.
6431  A89A 00           	nop			;a89a	00 	.
6432  A89B 00           	nop			;a89b	00 	.
6433  A89C 00           	nop			;a89c	00 	.
6434  A89D 00           	nop			;a89d	00 	.
6435  A89E 00           	nop			;a89e	00 	.
6436  A89F 01 00 00     	ld bc,00000h		;a89f	01 00 00 	. . .
6437  A8A2 00           	nop			;a8a2	00 	.
6438  A8A3 00           	nop			;a8a3	00 	.
6439  A8A4 00           	nop			;a8a4	00 	.
6440  A8A5 55           	ld d,l			;a8a5	55 	U
6441  A8A6 54           	ld d,h			;a8a6	54 	T
6442  A8A7 00           	nop			;a8a7	00 	.
6443  A8A8 00           	nop			;a8a8	00 	.
6444  A8A9 00           	nop			;a8a9	00 	.
6445  A8AA 00           	nop			;a8aa	00 	.
6446  A8AB 01 00 00     	ld bc,00000h		;a8ab	01 00 00 	. . .
6447  A8AE 00           	nop			;a8ae	00 	.
6448  A8AF 00           	nop			;a8af	00 	.
6449  A8B0 00           	nop			;a8b0	00 	.
6450  A8B1 00           	nop			;a8b1	00 	.
6451  A8B2 00           	nop			;a8b2	00 	.
6452  A8B3 00           	nop			;a8b3	00 	.
6453  A8B4 00           	nop			;a8b4	00 	.
6454  A8B5 00           	nop			;a8b5	00 	.
6455  A8B6 00           	nop			;a8b6	00 	.
6456  A8B7 00           	nop			;a8b7	00 	.
6457  A8B8 00           	nop			;a8b8	00 	.
6458  A8B9 00           	nop			;a8b9	00 	.
6459  A8BA 00           	nop			;a8ba	00 	.
6460  A8BB 00           	nop			;a8bb	00 	.
6461  A8BC 00           	nop			;a8bc	00 	.
6462  A8BD 00           	nop			;a8bd	00 	.
6463  A8BE 00           	nop			;a8be	00 	.
6464  A8BF 00           	nop			;a8bf	00 	.
6465  A8C0 00           	nop			;a8c0	00 	.
6466  A8C1 00           	nop			;a8c1	00 	.
6467  A8C2 00           	nop			;a8c2	00 	.
6468  A8C3 00           	nop			;a8c3	00 	.
6469  A8C4 00           	nop			;a8c4	00 	.
6470  A8C5 00           	nop			;a8c5	00 	.
6471  A8C6 00           	nop			;a8c6	00 	.
6472  A8C7 00           	nop			;a8c7	00 	.
6473  A8C8 00           	nop			;a8c8	00 	.
6474  A8C9 00           	nop			;a8c9	00 	.
6475  A8CA 00           	nop			;a8ca	00 	.
6476  A8CB 00           	nop			;a8cb	00 	.
6477  A8CC 00           	nop			;a8cc	00 	.
6478  A8CD 00           	nop			;a8cd	00 	.
6479  A8CE 00           	nop			;a8ce	00 	.
6480  A8CF 00           	nop			;a8cf	00 	.
6481  A8D0 00           	nop			;a8d0	00 	.
6482  A8D1 00           	nop			;a8d1	00 	.
6483  A8D2 00           	nop			;a8d2	00 	.
6484  A8D3 00           	nop			;a8d3	00 	.
6485  A8D4 00           	nop			;a8d4	00 	.
6486  A8D5 05           	dec b			;a8d5	05 	.
6487  A8D6 00           	nop			;a8d6	00 	.
6488  A8D7 00           	nop			;a8d7	00 	.
6489  A8D8 00           	nop			;a8d8	00 	.
6490  A8D9 00           	nop			;a8d9	00 	.
6491  A8DA 05           	dec b			;a8da	05 	.
6492  A8DB 55           	ld d,l			;a8db	55 	U
6493  A8DC 55           	ld d,l			;a8dc	55 	U
6494  A8DD 00           	nop			;a8dd	00 	.
6495  A8DE 00           	nop			;a8de	00 	.
6496  A8DF 00           	nop			;a8df	00 	.
6497  A8E0 00           	nop			;a8e0	00 	.
6498  A8E1 05           	dec b			;a8e1	05 	.
6499  A8E2 00           	nop			;a8e2	00 	.
6500  A8E3 00           	nop			;a8e3	00 	.
6501  A8E4 00           	nop			;a8e4	00 	.
6502  A8E5 00           	nop			;a8e5	00 	.
6503  A8E6 00           	nop			;a8e6	00 	.
6504  A8E7 00           	nop			;a8e7	00 	.
6505  A8E8 00           	nop			;a8e8	00 	.
6506  A8E9 00           	nop			;a8e9	00 	.
6507  A8EA 00           	nop			;a8ea	00 	.
6508  A8EB 00           	nop			;a8eb	00 	.
6509  A8EC 00           	nop			;a8ec	00 	.
6510  A8ED 00           	nop			;a8ed	00 	.
6511  A8EE 00           	nop			;a8ee	00 	.
6512  A8EF 00           	nop			;a8ef	00 	.
6513  A8F0 00           	nop			;a8f0	00 	.
6514  A8F1 00           	nop			;a8f1	00 	.
6515  A8F2 00           	nop			;a8f2	00 	.
6516  A8F3 00           	nop			;a8f3	00 	.
6517  A8F4 00           	nop			;a8f4	00 	.
6518  A8F5 00           	nop			;a8f5	00 	.
6519  A8F6 00           	nop			;a8f6	00 	.
6520  A8F7 00           	nop			;a8f7	00 	.
6521  A8F8 00           	nop			;a8f8	00 	.
6522  A8F9 00           	nop			;a8f9	00 	.
6523  A8FA 00           	nop			;a8fa	00 	.
6524  A8FB 00           	nop			;a8fb	00 	.
6525  A8FC 00           	nop			;a8fc	00 	.
6526  A8FD 00           	nop			;a8fd	00 	.
6527  A8FE 00           	nop			;a8fe	00 	.
6528  A8FF 00           	nop			;a8ff	00 	.
6529  A900 00           	nop			;a900	00 	.
6530  A901 00           	nop			;a901	00 	.
6531  A902 00           	nop			;a902	00 	.
6532  A903 00           	nop			;a903	00 	.
6533  A904 00           	nop			;a904	00 	.
6534  A905 03           	inc bc			;a905	03 	.
6535  A906 00           	nop			;a906	00 	.
6536  A907 00           	nop			;a907	00 	.
6537  A908 00           	nop			;a908	00 	.
6538  A909 00           	nop			;a909	00 	.
6539  A90A 00           	nop			;a90a	00 	.
6540  A90B 05           	dec b			;a90b	05 	.
6541  A90C 40           	ld b,b			;a90c	40 	@
6542  A90D 00           	nop			;a90d	00 	.
6543  A90E 00           	nop			;a90e	00 	.
6544  A90F 01 55 55     	ld bc,05555h		;a90f	01 55 55 	. U U
6545  A912              la912h:
6546  A912 55           	ld d,l			;a912	55 	U
6547  A913 55           	ld d,l			;a913	55 	U
6548  A914 00           	nop			;a914	00 	.
6549  A915 00           	nop			;a915	00 	.
6550  A916 00           	nop			;a916	00 	.
6551  A917 05           	dec b			;a917	05 	.
6552  A918 40           	ld b,b			;a918	40 	@
6553  A919 00           	nop			;a919	00 	.
6554  A91A 00           	nop			;a91a	00 	.
6555  A91B 00           	nop			;a91b	00 	.
6556  A91C 00           	nop			;a91c	00 	.
6557  A91D 02           	ld (bc),a			;a91d	02 	.
6558  A91E 00           	nop			;a91e	00 	.
6559  A91F 00           	nop			;a91f	00 	.
6560  A920 00           	nop			;a920	00 	.
6561  A921 00           	nop			;a921	00 	.
6562  A922 00           	nop			;a922	00 	.
6563  A923 00           	nop			;a923	00 	.
6564  A924 00           	nop			;a924	00 	.
6565  A925 00           	nop			;a925	00 	.
6566  A926 00           	nop			;a926	00 	.
6567  A927 00           	nop			;a927	00 	.
6568  A928 00           	nop			;a928	00 	.
6569  A929 00           	nop			;a929	00 	.
6570  A92A 00           	nop			;a92a	00 	.
6571  A92B 00           	nop			;a92b	00 	.
6572  A92C 00           	nop			;a92c	00 	.
6573  A92D 00           	nop			;a92d	00 	.
6574  A92E 00           	nop			;a92e	00 	.
6575  A92F 00           	nop			;a92f	00 	.
6576  A930 00           	nop			;a930	00 	.
6577  A931 00           	nop			;a931	00 	.
6578  A932 00           	nop			;a932	00 	.
6579  A933 00           	nop			;a933	00 	.
6580  A934 00           	nop			;a934	00 	.
6581  A935 0F           	rrca			;a935	0f 	.
6582  A936 C0           	ret nz			;a936	c0 	.
6583  A937 00           	nop			;a937	00 	.
6584  A938 00           	nop			;a938	00 	.
6585  A939 00           	nop			;a939	00 	.
6586  A93A 00           	nop			;a93a	00 	.
6587  A93B 17           	rla			;a93b	17 	.
6588  A93C 50           	ld d,b			;a93c	50 	P
6589  A93D 00           	nop			;a93d	00 	.
6590  A93E 00           	nop			;a93e	00 	.
6591  A93F 00           	nop			;a93f	00 	.
6592  A940 00           	nop			;a940	00 	.
6593  A941 55           	ld d,l			;a941	55 	U
6594  A942 54           	ld d,h			;a942	54 	T
6595  A943 00           	nop			;a943	00 	.
6596  A944 00           	nop			;a944	00 	.
6597  A945 55           	ld d,l			;a945	55 	U
6598  A946 55           	ld d,l			;a946	55 	U
6599  A947 55           	ld d,l			;a947	55 	U
6600  A948 55           	ld d,l			;a948	55 	U
6601  A949 55           	ld d,l			;a949	55 	U
6602  A94A 54           	ld d,h			;a94a	54 	T
6603  A94B 00           	nop			;a94b	00 	.
6604  A94C 00           	nop			;a94c	00 	.
6605  A94D 55           	ld d,l			;a94d	55 	U
6606  A94E 54           	ld d,h			;a94e	54 	T
6607  A94F 00           	nop			;a94f	00 	.
6608  A950 00           	nop			;a950	00 	.
6609  A951 00           	nop			;a951	00 	.
6610  A952 00           	nop			;a952	00 	.
6611  A953 15           	dec d			;a953	15 	.
6612  A954 50           	ld d,b			;a954	50 	P
6613  A955 00           	nop			;a955	00 	.
6614  A956 00           	nop			;a956	00 	.
6615  A957 00           	nop			;a957	00 	.
6616  A958 00           	nop			;a958	00 	.
6617  A959 02           	ld (bc),a			;a959	02 	.
6618  A95A 00           	nop			;a95a	00 	.
6619  A95B 00           	nop			;a95b	00 	.
6620  A95C 00           	nop			;a95c	00 	.
6621  A95D 00           	nop			;a95d	00 	.
6622  A95E 00           	nop			;a95e	00 	.
6623  A95F 0A           	ld a,(bc)			;a95f	0a 	.
6624  A960 80           	add a,b			;a960	80 	.
6625  A961 00           	nop			;a961	00 	.
6626  A962 00           	nop			;a962	00 	.
6627  A963              la963h:
6628  A963 00           	nop			;a963	00 	.
6629  A964 00           	nop			;a964	00 	.
6630  A965 00           	nop			;a965	00 	.
6631  A966 10 AA        	djnz la912h		;a966	10 aa 	. .
6632  A968 AA           	xor d			;a968	aa 	.
6633  A969 AA           	xor d			;a969	aa 	.
6634  A96A 50           	ld d,b			;a96a	50 	P
6635  A96B 00           	nop			;a96b	00 	.
6636  A96C 00           	nop			;a96c	00 	.
6637  A96D 00           	nop			;a96d	00 	.
6638  A96E 10 00        	djnz la970h		;a96e	10 00 	. .
6639  A970              la970h:
6640  A970 00           	nop			;a970	00 	.
6641  A971 00           	nop			;a971	00 	.
6642  A972 01 0A AA     	ld bc,0aa0ah		;a972	01 0a aa 	. . .
6643  A975 AA           	xor d			;a975	aa 	.
6644  A976 A5           	and l			;a976	a5 	.
6645  A977 00           	nop			;a977	00 	.
6646  A978 00           	nop			;a978	00 	.
6647  A979 00           	nop			;a979	00 	.
6648  A97A 01 40 00     	ld bc,00040h		;a97a	01 40 00 	. @ .
6649  A97D 00           	nop			;a97d	00 	.
6650  A97E 00           	nop			;a97e	00 	.
6651  A97F 5A           	ld e,d			;a97f	5a 	Z
6652  A980 AA           	xor d			;a980	aa 	.
6653  A981 AA           	xor d			;a981	aa 	.
6654  A982 A0           	and b			;a982	a0 	.
6655  A983 40           	ld b,b			;a983	40 	@
6656  A984 00           	nop			;a984	00 	.
6657  A985 00           	nop			;a985	00 	.
6658  A986 00           	nop			;a986	00 	.
6659  A987 04           	inc b			;a987	04 	.
6660  A988 00           	nop			;a988	00 	.
6661  A989 00           	nop			;a989	00 	.
6662  A98A 00           	nop			;a98a	00 	.
6663  A98B 05           	dec b			;a98b	05 	.
6664  A98C AA           	xor d			;a98c	aa 	.
6665  A98D AA           	xor d			;a98d	aa 	.
6666  A98E AA           	xor d			;a98e	aa 	.
6667  A98F 04           	inc b			;a98f	04 	.
6668  A990 00           	nop			;a990	00 	.
6669  A991 00           	nop			;a991	00 	.
6670  A992 00           	nop			;a992	00 	.
6671  A993              	org $a993
6672  A993              la993h:
6673  A993 42           	ld b,d			;a993	42 	B
6674  A994 81           	add a,c			;a994	81 	.
6675  A995 12           	ld (de),a			;a995	12 	.
6676  A996 84           	add a,h			;a996	84 	.
6677  A997 06 90        	ld b,090h		;a997	06 90 	. .
6678  A999 A3           	and e			;a999	a3 	.
6679  A99A CA 47 10     	jp z,01047h		;a99a	ca 47 10 	. G .
6680  A99D 1B           	dec de			;a99d	1b 	.
6681  A99E 84           	add a,h			;a99e	84 	.
6682  A99F FF           	rst 38h			;a99f	ff 	.
6683  A9A0 FF           	rst 38h			;a9a0	ff 	.
6684  A9A1 42           	ld b,d			;a9a1	42 	B
6685  A9A2 E4 11 D1     	call po,0d111h		;a9a2	e4 11 d1 	. . .
6686  A9A5 05           	dec b			;a9a5	05 	.
6687  A9A6 85           	add a,l			;a9a6	85 	.
6688  A9A7 52           	ld d,d			;a9a7	52 	R
6689  A9A8 00           	nop			;a9a8	00 	.
6690  A9A9 10 20        	djnz la9cbh		;a9a9	10 20 	.
6691  A9AB 08           	ex af,af'			;a9ab	08 	.
6692  A9AC 40           	ld b,b			;a9ac	40 	@
6693  A9AD 41           	ld b,c			;a9ad	41 	A
6694  A9AE 09           	add hl,bc			;a9ae	09 	.
6695  A9AF 24           	inc h			;a9af	24 	$
6696  A9B0 14           	inc d			;a9b0	14 	.
6697  A9B1 AA           	xor d			;a9b1	aa 	.
6698  A9B2 AB           	xor e			;a9b2	ab 	.
6699  A9B3 FF           	rst 38h			;a9b3	ff 	.
6700  A9B4 FF           	rst 38h			;a9b4	ff 	.
6701  A9B5 FF           	rst 38h			;a9b5	ff 	.
6702  A9B6 FF           	rst 38h			;a9b6	ff 	.
6703  A9B7 EA AA 10     	jp pe,010aah		;a9b7	ea aa 10 	. . .
6704  A9BA 08           	ex af,af'			;a9ba	08 	.
6705  A9BB 60           	ld h,b			;a9bb	60 	`
6706  A9BC 14           	inc d			;a9bc	14 	.
6707  A9BD 41           	ld b,c			;a9bd	41 	A
6708  A9BE 24           	inc h			;a9be	24 	$
6709  A9BF 18 40        	jr laa01h		;a9bf	18 40 	. @
6710  A9C1 14           	inc d			;a9c1	14 	.
6711  A9C2 81           	add a,c			;a9c2	81 	.
6712  A9C3 42           	ld b,d			;a9c3	42 	B
6713  A9C4 00           	nop			;a9c4	00 	.
6714  A9C5
6715  A9C5              ;***********************************************************************************************
6716  A9C5              ;
6717  A9C5              ;    G A M E P L A Y   V A R I A B L E S  S T A R T U P   V A L U E S
6718  A9C5              ;
6719  A9C5              ;***********************************************************************************************
6720  A9C5              ; Values to fill variables $7801 .. $7811
6721  A9C5              TAB_DEF_VARS:
6722  A9C5 00           	nop			;a9c5	00 	.
6723  A9C6 1C           	inc e			;a9c6	1c 	.
6724  A9C7 14           	defb 20			; $7803 - Number of Prisoners in Camp 1						;a9c7	14
6725  A9C8 00           	nop			;a9c8	00 	.
6726  A9C9 00           	nop			;a9c9	00 	.
6727  A9CA 53           	ld d,e			;a9ca	53 	S
6728  A9CB              la9cbh:
6729  A9CB 14           	defb 20			; $7807 - Number of Prisoners in Camp 2						;a9cb	14 	.
6730  A9CC 00           	nop			;a9cc	00 	.
6731  A9CD 00           	nop			;a9cd	00 	.
6732  A9CE 8A           	adc a,d			;a9ce	8a 	.
6733  A9CF 14           	defb 20			; $780b - Number of Prisoners in Camp 3						;a9cf	14 	.
6734  A9D0 00           	nop			;a9d0	00 	.
6735  A9D1 00           	nop			;a9d1	00 	.
6736  A9D2 C1           	pop bc			;a9d2	c1 	.
6737  A9D3 14           	defb 20			; $780f - Number of Prisoners in Camp 4						;a9d3	14 	.
6738  A9D4 00           	nop			;a9d4	00 	.
6739  A9D5              la9d5h:
6740  A9D5 18 00        	jr la9d7h		;a9d5	18 00 	. .
6741  A9D7              la9d7h:
6742  A9D7 00           	nop			;a9d7	00 	.
6743  A9D8 00           	nop			;a9d8	00 	.
6744  A9D9 00           	nop			;a9d9	00 	.
6745  A9DA 00           	nop			;a9da	00 	.
6746  A9DB 18 2F        	jr laa0ch		;a9db	18 2f 	. /
6747  A9DD 00           	nop			;a9dd	00 	.
6748  A9DE 00           	nop			;a9de	00 	.
6749  A9DF 00           	nop			;a9df	00 	.
6750  A9E0 00           	nop			;a9e0	00 	.
6751  A9E1 00           	nop			;a9e1	00 	.
6752  A9E2 2F           	cpl			;a9e2	2f 	/
6753  A9E3 4F           	ld c,a			;a9e3	4f 	O
6754  A9E4 00           	nop			;a9e4	00 	.
6755  A9E5 00           	nop			;a9e5	00 	.
6756  A9E6 00           	nop			;a9e6	00 	.
6757  A9E7 00           	nop			;a9e7	00 	.
6758  A9E8 00           	nop			;a9e8	00 	.
6759  A9E9 4F           	ld c,a			;a9e9	4f 	O
6760  A9EA 66           	ld h,(hl)			;a9ea	66 	f
6761  A9EB 00           	nop			;a9eb	00 	.
6762  A9EC 00           	nop			;a9ec	00 	.
6763  A9ED 00           	nop			;a9ed	00 	.
6764  A9EE 00           	nop			;a9ee	00 	.
6765  A9EF 00           	nop			;a9ef	00 	.
6766  A9F0 66           	ld h,(hl)			;a9f0	66 	f
6767  A9F1              la9f1h:
6768  A9F1 01 01 10     	ld bc,01001h		;a9f1	01 01 10 	. . .
6769  A9F4 00           	nop			;a9f4	00 	.
6770  A9F5 02           	ld (bc),a			;a9f5	02 	.
6771  A9F6 00           	nop			;a9f6	00 	.
6772  A9F7 31 31 47     	ld sp,04731h		;a9f7	31 31 47 	1 1 G
6773  A9FA 00           	nop			;a9fa	00 	.
6774  A9FB 02           	ld (bc),a			;a9fb	02 	.
6775  A9FC 00           	nop			;a9fc	00 	.
6776  A9FD 68           	ld l,b			;a9fd	68 	h
6777  A9FE 68           	ld l,b			;a9fe	68 	h
6778  A9FF 7D           	ld a,l			;a9ff	7d 	}
6779  AA00 00           	nop			;aa00	00 	.
6780  AA01              laa01h:
6781  AA01 02           	ld (bc),a			;aa01	02 	.
6782  AA02 00           	nop			;aa02	00 	.
6783  AA03 9B           	sbc a,e			;aa03	9b 	.
6784  AA04 9B           	sbc a,e			;aa04	9b 	.
6785  AA05 B4           	or h			;aa05	b4 	.
6786  AA06 00           	nop			;aa06	00 	.
6787  AA07 02           	ld (bc),a			;aa07	02 	.
6788  AA08 00           	nop			;aa08	00 	.
6789  AA09 D2 D2 EE     	jp nc,0eed2h		;aa09	d2 d2 ee 	. . .
6790  AA0C              laa0ch:
6791  AA0C 00           	nop			;aa0c	00 	.
6792  AA0D 02           	ld (bc),a			;aa0d	02 	.
6793  AA0E 00           	nop			;aa0e	00 	.
6794  AA0F              laa0fh:
6795  AA0F 16 2D        	ld d,02dh		;aa0f	16 2d 	. -
6796  AA11 4D           	ld c,l			;aa11	4d 	M
6797  AA12 64           	ld h,h			;aa12	64 	d
6798  AA13 1A           	ld a,(de)			;aa13	1a 	.
6799  AA14 2A 51 61     	ld hl,(06151h)		;aa14	2a 51 61 	* Q a
6800  AA17 88           	adc a,b			;aa17	88 	.
6801  AA18 98           	sbc a,b			;aa18	98 	.
6802  AA19 BF           	cp a			;aa19	bf 	.
6803  AA1A CF           	rst 8			;aa1a	cf 	.
6804  AA1B 24           	inc h			;aa1b	24 	$
6805  AA1C 5B           	ld e,e			;aa1c	5b 	[
6806  AA1D 92           	sub d			;aa1d	92 	.
6807  AA1E C9           	ret			;aa1e	c9 	.
6808  AA1F FF           	rst 38h			;aa1f	ff 	.
6809  AA20
# file closed: l:\vz-dis-games\DawnPatrol\DawnPatrol.asm
